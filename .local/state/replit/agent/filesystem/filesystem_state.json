{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a comprehensive multilingual investment proposal website for a Mongolian equestrian show in Siem Reap, Cambodia. The application serves as an interactive business plan presenting detailed investment opportunities through a sidebar navigation system. It features extensive business analysis sections including financial projections, risk management, marketing strategies, and location advantages. The site supports both Korean and English languages and includes interactive calculators and charts to showcase the investment potential of establishing the first Mongolian horse performance venue in Southeast Asia.\n\n# Recent Changes\n\n- **January 2025**: Transformed from simple proposal to comprehensive business plan format\n- **Architecture Update**: Implemented sidebar navigation with 9 detailed sections\n- **Content Expansion**: Added 8 new detailed business analysis pages covering all aspects of the investment\n- **User Interface**: Removed booking and download features, focused on investment presentation\n- **Navigation**: Single-page application with section-based navigation system\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n\nThe application uses a modern React-based frontend architecture with the following key components:\n\n- **React with TypeScript**: Type-safe component development using React 18 with TSX\n- **Vite Build System**: Fast development server and optimized production builds\n- **Wouter Routing**: Lightweight client-side routing for single-page application navigation\n- **Tailwind CSS**: Utility-first styling framework with custom design tokens\n- **Shadcn/ui Components**: Pre-built accessible UI components with Radix UI primitives\n\n## Component Structure\n\nThe frontend follows a modular component architecture:\n\n- **Page Components**: Main route handlers (Home, NotFound)\n- **Feature Components**: Business-specific components (BusinessOverview, InvestmentPoints, RevenueModel)\n- **UI Components**: Reusable interface elements from Shadcn/ui library\n- **Context Providers**: Language switching and state management\n\n## State Management\n\n- **React Query**: Server state management and caching with TanStack Query\n- **React Context**: Language preferences and application-wide state\n- **React Hook Form**: Form state management with Zod validation\n- **Local State**: Component-level state using React hooks\n\n## Styling and Design\n\n- **Custom Color Palette**: Mongolian-themed colors (oranges/earth tones) defined in CSS variables\n- **Responsive Design**: Mobile-first approach with Tailwind breakpoints\n- **Design System**: Consistent spacing, typography, and component styling\n- **Dark Mode Support**: CSS variable-based theming infrastructure\n\n## Backend Architecture\n\nThe backend uses a minimal Express.js setup:\n\n- **Express Server**: RESTful API foundation with middleware support\n- **Development Integration**: Vite middleware integration for hot reloading\n- **Memory Storage**: In-memory data storage interface with extensible design\n- **Route Structure**: Organized API routes with error handling middleware\n\n## Data Storage Solutions\n\nCurrently implements an in-memory storage pattern with interfaces designed for easy migration:\n\n- **Storage Interface**: Abstract CRUD operations for users and entities\n- **Memory Implementation**: Development-friendly in-memory storage\n- **Database Ready**: Drizzle ORM configuration for PostgreSQL migration\n- **Schema Definition**: Type-safe database schemas using Drizzle and Zod\n\n## Internationalization\n\n- **Language Context**: React context for Korean/English language switching\n- **Translation Helper**: Simple translation function for bilingual content\n- **Content Structure**: Parallel content organization for both languages\n\n## External Dependencies\n\n- **Neon Database**: PostgreSQL database service (configured but not actively used)\n- **Drizzle ORM**: Type-safe database operations with PostgreSQL dialect\n- **Radix UI**: Accessible component primitives for complex UI elements\n- **Recharts**: Data visualization library for revenue charts and analytics\n- **React Hook Form**: Form validation and submission handling\n- **Tailwind CSS**: Utility-first CSS framework for responsive design\n- **Vite**: Modern build tool for fast development and optimized production builds","size_bytes":4357},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        mongolian: {\n          50: \"var(--mongolian-50)\",\n          100: \"var(--mongolian-100)\",\n          200: \"var(--mongolian-200)\",\n          300: \"var(--mongolian-300)\",\n          400: \"var(--mongolian-400)\",\n          500: \"var(--mongolian-500)\",\n          600: \"var(--mongolian-600)\",\n          700: \"var(--mongolian-700)\",\n          800: \"var(--mongolian-800)\",\n          900: \"var(--mongolian-900)\",\n        },\n        earth: {\n          50: \"var(--earth-50)\",\n          100: \"var(--earth-100)\",\n          200: \"var(--earth-200)\",\n          300: \"var(--earth-300)\",\n          400: \"var(--earth-400)\",\n          500: \"var(--earth-500)\",\n          600: \"var(--earth-600)\",\n          700: \"var(--earth-700)\",\n          800: \"var(--earth-800)\",\n          900: \"var(--earth-900)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        \"fade-in\": {\n          from: {\n            opacity: \"0\",\n            transform: \"translateY(20px)\",\n          },\n          to: {\n            opacity: \"1\",\n            transform: \"translateY(0)\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fade-in 0.6s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3833},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\n// Serve attached assets\napp.use('/attached_assets', express.static('attached_assets'));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2156},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { useState } from \"react\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { LanguageProvider } from \"@/contexts/language-context\";\nimport { SidebarNavigation } from \"@/components/sidebar-navigation\";\nimport Home from \"@/pages/home\";\nimport { BusinessOverviewPage } from \"@/pages/business-overview-page\";\nimport { InvestmentPointsPage } from \"@/pages/investment-points-page\";\nimport { InitialInvestmentPage } from \"@/pages/initial-investment-page\";\nimport { RevenueModelPage } from \"@/pages/revenue-model-page\";\nimport { OperationsForecastPage } from \"@/pages/operations-forecast-page\";\nimport { RiskManagementPage } from \"@/pages/risk-management-page\";\nimport { MarketingStrategyPage } from \"@/pages/marketing-strategy-page\";\nimport { BusinessVisionPage } from \"@/pages/business-vision-page\";\nimport { SiemReapLocationPage } from \"@/pages/siem-reap-location-page\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction App() {\n  const [currentSection, setCurrentSection] = useState(\"home\");\n\n  const renderCurrentSection = () => {\n    switch (currentSection) {\n      case \"home\":\n        return <Home onSectionChange={setCurrentSection} />;\n      case \"overview\":\n        return <BusinessOverviewPage />;\n      case \"investment\":\n        return <InvestmentPointsPage />;\n      case \"initial-investment\":\n        return <InitialInvestmentPage />;\n      case \"revenue\":\n        return <RevenueModelPage />;\n      case \"operations\":\n        return <OperationsForecastPage />;\n      case \"risk\":\n        return <RiskManagementPage />;\n      case \"marketing\":\n        return <MarketingStrategyPage />;\n      case \"vision\":\n        return <BusinessVisionPage />;\n      case \"location\":\n        return <SiemReapLocationPage />;\n      default:\n        return <NotFound />;\n    }\n  };\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <LanguageProvider>\n          <div className=\"min-h-screen flex flex-col md:flex-row bg-black\">\n            {/* Navigation: Mobile top bar, Desktop sidebar */}\n            <SidebarNavigation \n              currentSection={currentSection} \n              onSectionChange={setCurrentSection} \n            />\n            \n            <main className=\"flex-1 md:pl-64 transition-all duration-300 min-h-screen\">\n              <div className=\"w-full px-4 md:px-6 py-4 md:py-6 pt-20 md:pt-6\">\n                {renderCurrentSection()}\n              </div>\n            </main>\n          </div>\n          <Toaster />\n        </LanguageProvider>\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2765},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 5%);\n  --foreground: hsl(0, 0%, 92%);\n  --card: hsl(0, 0%, 10%);\n  --card-foreground: hsl(0, 0%, 90%);\n  --popover: hsl(0, 0%, 8%);\n  --popover-foreground: hsl(0, 0%, 92%);\n  --primary: hsl(21, 89%, 52%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(0, 0%, 15%);\n  --secondary-foreground: hsl(0, 0%, 92%);\n  --muted: hsl(0, 0%, 12%);\n  --muted-foreground: hsl(0, 0%, 65%);\n  --accent: hsl(0, 0%, 18%);\n  --accent-foreground: hsl(21, 89%, 52%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(0, 0%, 20%);\n  --input: hsl(0, 0%, 15%);\n  --ring: hsl(21, 89%, 52%);\n  --chart-1: hsl(21, 89%, 52%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(0, 0%, 8%);\n  --sidebar-foreground: hsl(0, 0%, 90%);\n  --sidebar-primary: hsl(21, 89%, 52%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(0, 0%, 15%);\n  --sidebar-accent-foreground: hsl(21, 89%, 52%);\n  --sidebar-border: hsl(0, 0%, 20%);\n  --sidebar-ring: hsl(21, 89%, 52%);\n  --font-sans: Inter, ui-sans-serif, system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.5rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 2px 4px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 4px 6px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 8px 10px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n  \n  /* Premium Modern Color Palette */\n  --accent-gold: hsl(45, 88%, 72%);\n  --accent-gold-hover: hsl(45, 90%, 65%);\n  --accent-gold-dark: hsl(45, 70%, 45%);\n  \n  --accent-amber: hsl(39, 85%, 65%);\n  --accent-amber-hover: hsl(39, 88%, 58%);\n  --accent-amber-dark: hsl(39, 70%, 45%);\n  \n  --surface-elevated: hsl(220, 13%, 18%);\n  --surface-card: hsl(220, 13%, 15%);\n  --surface-overlay: hsl(220, 13%, 12%);\n  \n  --text-premium: hsl(220, 10%, 95%);\n  --text-secondary: hsl(220, 8%, 75%);\n  --text-muted: hsl(220, 6%, 55%);\n  --text-accent: hsl(45, 88%, 72%);\n  \n  --border-premium: hsl(220, 13%, 25%);\n  --border-subtle: hsl(220, 13%, 20%);\n  --border-accent: hsl(45, 88%, 72%);\n  \n  /* Status Colors */\n  --success: hsl(142, 76%, 36%);\n  --success-bg: hsl(142, 76%, 6%);\n  --warning: hsl(45, 88%, 72%);\n  --warning-bg: hsl(45, 88%, 8%);\n  --error: hsl(0, 75%, 60%);\n  --error-bg: hsl(0, 75%, 8%);\n}\n\n.dark {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(200, 6.6667%, 91.1765%);\n  --card: hsl(228, 9.8039%, 10%);\n  --card-foreground: hsl(0, 0%, 85.0980%);\n  --popover: hsl(0, 0%, 0%);\n  --popover-foreground: hsl(200, 6.6667%, 91.1765%);\n  --primary: hsl(203.7736, 87.6033%, 52.5490%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(195.0000, 15.3846%, 94.9020%);\n  --secondary-foreground: hsl(210, 25%, 7.8431%);\n  --muted: hsl(0, 0%, 9.4118%);\n  --muted-foreground: hsl(210, 3.3898%, 46.2745%);\n  --accent: hsl(205.7143, 70%, 7.8431%);\n  --accent-foreground: hsl(203.7736, 87.6033%, 52.5490%);\n  --destructive: hsl(356.3033, 90.5579%, 54.3137%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(210, 5.2632%, 14.9020%);\n  --input: hsl(207.6923, 27.6596%, 18.4314%);\n  --ring: hsl(202.8169, 89.1213%, 53.1373%);\n  --chart-1: hsl(203.8863, 88.2845%, 53.1373%);\n  --chart-2: hsl(159.7826, 100%, 36.0784%);\n  --chart-3: hsl(42.0290, 92.8251%, 56.2745%);\n  --chart-4: hsl(147.1429, 78.5047%, 41.9608%);\n  --chart-5: hsl(341.4894, 75.2000%, 50.9804%);\n  --sidebar: hsl(228, 9.8039%, 10%);\n  --sidebar-foreground: hsl(0, 0%, 85.0980%);\n  --sidebar-primary: hsl(202.8169, 89.1213%, 53.1373%);\n  --sidebar-primary-foreground: hsl(0, 0%, 100%);\n  --sidebar-accent: hsl(205.7143, 70%, 7.8431%);\n  --sidebar-accent-foreground: hsl(203.7736, 87.6033%, 52.5490%);\n  --sidebar-border: hsl(205.7143, 15.7895%, 26.0784%);\n  --sidebar-ring: hsl(202.8169, 89.1213%, 53.1373%);\n  --font-sans: Inter, ui-sans-serif, system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.5rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 1px 2px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 2px 4px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 4px 6px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00), 0px 8px 10px -1px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169, 89.1213%, 53.1373%, 0.00);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n  \n  html {\n    scroll-behavior: smooth;\n  }\n}\n\n@layer utilities {\n  .text-gradient-premium {\n    background: linear-gradient(135deg, var(--accent-gold) 0%, var(--accent-amber) 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  .card-premium {\n    background: linear-gradient(135deg, var(--surface-card) 0%, var(--surface-elevated) 100%);\n    border: 1px solid var(--border-premium);\n    backdrop-filter: blur(8px);\n  }\n  \n  .button-premium {\n    background: linear-gradient(135deg, var(--accent-gold) 0%, var(--accent-amber) 100%);\n    color: hsl(220, 13%, 15%);\n    font-weight: 600;\n    transition: all 0.2s ease;\n  }\n  \n  .button-premium:hover {\n    background: linear-gradient(135deg, var(--accent-gold-hover) 0%, var(--accent-amber-hover) 100%);\n    transform: translateY(-1px);\n    box-shadow: 0 10px 25px -5px hsla(45, 88%, 72%, 0.2);\n  }\n  \n  .icon-premium {\n    background: linear-gradient(135deg, var(--accent-gold) 0%, var(--accent-amber) 100%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  .surface-premium {\n    background: var(--surface-elevated);\n    border: 1px solid var(--border-subtle);\n  }\n}\n\n/* Mobile-first responsive optimizations */\n@media (max-width: 768px) {\n  html {\n    font-size: 14px;\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n  \n  body {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  \n  .container {\n    padding-left: 1rem;\n    padding-right: 1rem;\n    max-width: 100%;\n  }\n  \n  /* Enhanced button touch targets for mobile */\n  button, .btn {\n    min-height: 48px;\n    min-width: 48px;\n    padding: 0.75rem 1rem;\n    touch-action: manipulation;\n    -webkit-tap-highlight-color: transparent;\n  }\n  \n  /* Mobile-optimized card spacing */\n  .card {\n    margin-bottom: 1rem;\n    padding: 1rem;\n  }\n  \n  .space-y-6 > * + * {\n    margin-top: 1rem !important;\n  }\n  \n  /* Fix mobile text sizing and spacing */\n  h1 { \n    font-size: 2rem !important;\n    line-height: 1.2 !important;\n  }\n  h2 { \n    font-size: 1.5rem !important;\n    line-height: 1.3 !important;\n  }\n  h3 { \n    font-size: 1.25rem !important;\n    line-height: 1.4 !important;\n  }\n  \n  /* Mobile grid improvements */\n  .grid {\n    gap: 1rem !important;\n  }\n  \n  /* Mobile image sizing */\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n}\n","size_bytes":8422},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/business-overview.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function BusinessOverview() {\n  const { t } = useLanguage();\n\n  const metrics = [\n    {\n      icon: \"🎭\",\n      title: t(\"일일 공연\", \"Daily Shows\"),\n      value: \"2회\",\n      description: t(\"회당 500명 수용\", \"500 guests per show\"),\n      bgColor: \"from-mongolian-50 to-earth-50\"\n    },\n    {\n      icon: \"💰\",\n      title: t(\"연간 순익\", \"Annual Profit\"),\n      value: \"$2.1M+\",\n      description: t(\"보수적 추정치\", \"Conservative estimate\"),\n      bgColor: \"from-earth-50 to-mongolian-50\"\n    },\n    {\n      icon: \"⏱️\",\n      title: t(\"투자 회수\", \"ROI Timeline\"),\n      value: \"1.5년\",\n      description: t(\"운영 안정화 기준\", \"Based on stable operations\"),\n      bgColor: \"from-green-50 to-emerald-50\"\n    },\n    {\n      icon: \"🌏\",\n      title: t(\"시장 독점\", \"Market Position\"),\n      value: t(\"최초\", \"First\"),\n      description: t(\"동남아 유일\", \"Only in Southeast Asia\"),\n      bgColor: \"from-blue-50 to-indigo-50\"\n    }\n  ];\n\n  const locationAdvantages = [\n    {\n      icon: \"✈️\",\n      title: t(\"공항 접근성\", \"Airport Access\"),\n      description: t(\"시엠립 국제공항에서 15분 거리, 관광객 유입 최적화\", \"15 minutes from Siem Reap International Airport, optimized for tourist inflow\"),\n      bgColor: \"bg-mongolian-100\",\n      iconColor: \"text-mongolian-600\"\n    },\n    {\n      icon: \"🏛️\",\n      title: t(\"앙코르와트 연계\", \"Angkor Wat Connection\"),\n      description: t(\"세계문화유산 관광 루트에 포함, 자연스러운 고객 유치\", \"Included in World Heritage tourism route, natural customer attraction\"),\n      bgColor: \"bg-earth-100\",\n      iconColor: \"text-earth-600\"\n    },\n    {\n      icon: \"🚌\",\n      title: t(\"교통 편의\", \"Transportation\"),\n      description: t(\"무료 툭툭 서비스 제공, 시내 호텔에서 직접 픽업\", \"Free tuk-tuk service, direct pickup from city hotels\"),\n      bgColor: \"bg-green-100\",\n      iconColor: \"text-green-600\"\n    }\n  ];\n\n  return (\n    <section id=\"overview\" className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n            📊 {t(\"사업 개요\", \"Project Overview\")}\n          </h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n            {t(\"동남아시아 최초의 몽골 마상곡예 공연장으로 시엠립 관광의 새로운 랜드마크를 창조합니다\", \"Creating a new landmark in Siem Reap tourism as Southeast Asia's first Mongolian equestrian performance venue\")}\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16\">\n          {metrics.map((metric, index) => (\n            <Card key={index} className={`bg-gradient-to-br ${metric.bgColor} shadow-sm hover:shadow-md transition-shadow animate-fade-in`}>\n              <CardContent className=\"p-6\">\n                <div className=\"text-3xl mb-2\">{metric.icon}</div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">{metric.title}</h3>\n                <p className=\"text-2xl font-bold text-mongolian-600\">{metric.value}</p>\n                <p className=\"text-sm text-gray-600\">{metric.description}</p>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {/* Location Advantages */}\n        <div className=\"bg-gray-50 rounded-2xl p-8\">\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-6\">\n            🗺️ {t(\"시엠립 입지 장점\", \"Siem Reap Location Advantages\")}\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {locationAdvantages.map((advantage, index) => (\n              <div key={index} className=\"flex items-start space-x-3\">\n                <div className={`w-8 h-8 ${advantage.bgColor} rounded-full flex items-center justify-center flex-shrink-0`}>\n                  <span className={`${advantage.iconColor} font-bold`}>{advantage.icon}</span>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-gray-900\">{advantage.title}</h4>\n                  <p className=\"text-sm text-gray-600\">{advantage.description}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4516},"client/src/components/business-vision.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function BusinessVision() {\n  const { t } = useLanguage();\n\n  const phases = [\n    {\n      icon: \"🏗️\",\n      title: t(\"1단계: 기반 구축\", \"Phase 1: Foundation\"),\n      timeline: t(\"0-18개월\", \"0-18 months\"),\n      bgColor: \"bg-mongolian-100\",\n      items: [\n        t(\"공연장 건설 및 마필 도입\", \"Venue construction and horse import\"),\n        t(\"몽골 기수진 및 현지 스태프 훈련\", \"Mongolian riders and local staff training\"),\n        t(\"정식 공연 런칭 및 마케팅\", \"Official performance launch and marketing\")\n      ],\n      pointColor: \"text-mongolian-500\"\n    },\n    {\n      icon: \"📈\",\n      title: t(\"2단계: 성장 & 확장\", \"Phase 2: Growth & Expansion\"),\n      timeline: t(\"18-36개월\", \"18-36 months\"),\n      bgColor: \"bg-earth-100\",\n      items: [\n        t(\"말 테마 체험존 및 승마 교육\", \"Horse-themed experience zone and riding education\"),\n        t(\"전통 야시장 및 문화 공간\", \"Traditional night market and cultural space\"),\n        t(\"VIP 패키지 및 기업 이벤트\", \"VIP packages and corporate events\")\n      ],\n      pointColor: \"text-earth-500\"\n    },\n    {\n      icon: \"🌏\",\n      title: t(\"3단계: 브랜드화\", \"Phase 3: Branding\"),\n      timeline: t(\"36개월+\", \"36+ months\"),\n      bgColor: \"bg-green-100\",\n      items: [\n        t(\"태국, 베트남 등 타 도시 확장\", \"Expansion to Thailand, Vietnam and other cities\"),\n        t(\"프랜차이즈 모델 개발\", \"Franchise model development\"),\n        t(\"동남아 대표 문화 콘텐츠 브랜드\", \"Leading cultural content brand in Southeast Asia\")\n      ],\n      pointColor: \"text-green-500\"\n    }\n  ];\n\n  return (\n    <section className=\"py-20 earth-gradient\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n            🧭 {t(\"사업 비전 & 확장 계획\", \"Business Vision & Expansion Plan\")}\n          </h2>\n          <p className=\"text-xl text-gray-600\">\n            {t(\"시엠립 관광의 새로운 랜드마크에서 동남아시아 대표 브랜드로\", \"From Siem Reap's new landmark to Southeast Asia's leading brand\")}\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {phases.map((phase, index) => (\n            <Card key={index} className=\"bg-white shadow-lg animate-fade-in\">\n              <CardContent className=\"p-8\">\n                <div className=\"text-center mb-6\">\n                  <div className={`w-16 h-16 ${phase.bgColor} rounded-2xl flex items-center justify-center mx-auto mb-4`}>\n                    <span className=\"text-3xl\">{phase.icon}</span>\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-900\">{phase.title}</h3>\n                  <p className=\"text-sm text-gray-500\">{phase.timeline}</p>\n                </div>\n                <ul className=\"space-y-3 text-gray-600\">\n                  {phase.items.map((item, itemIndex) => (\n                    <li key={itemIndex} className=\"flex items-start\">\n                      <span className={`${phase.pointColor} mr-2 mt-1`}>•</span>\n                      <span>{item}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3557},"client/src/components/contact-section.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useLanguage } from \"@/contexts/language-context\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport function ContactSection() {\n  const { t } = useLanguage();\n  const { toast } = useToast();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    interest: \"\",\n    message: \"\"\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      // Simulate form submission\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      toast({\n        title: t(\"문의가 접수되었습니다\", \"Your inquiry has been received\"),\n        description: t(\"빠른 시일 내에 연락드리겠습니다\", \"We will contact you soon\"),\n      });\n      \n      setFormData({ name: \"\", email: \"\", interest: \"\", message: \"\" });\n    } catch (error) {\n      toast({\n        title: t(\"오류가 발생했습니다\", \"An error occurred\"),\n        description: t(\"다시 시도해 주세요\", \"Please try again\"),\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleDownloadBrochure = () => {\n    toast({\n      title: t(\"브로셔 다운로드\", \"Brochure Download\"),\n      description: t(\"브로셔 다운로드 기능을 준비 중입니다.\", \"Brochure download feature is being prepared.\"),\n    });\n  };\n\n  const contactInfo = [\n    {\n      icon: \"📧\",\n      bgColor: \"bg-mongolian-100\",\n      iconColor: \"text-mongolian-600\",\n      title: \"invest@mongolianequestrianshow.com\",\n      description: t(\"투자 관련 문의\", \"Investment inquiries\")\n    },\n    {\n      icon: \"📱\",\n      bgColor: \"bg-earth-100\",\n      iconColor: \"text-earth-600\",\n      title: \"+855 12 345 678\",\n      description: t(\"캄보디아 현지 연락처\", \"Cambodia local contact\")\n    },\n    {\n      icon: \"📍\",\n      bgColor: \"bg-green-100\",\n      iconColor: \"text-green-600\",\n      title: t(\"시엠립, 캄보디아\", \"Siem Reap, Cambodia\"),\n      description: t(\"앙코르와트 인근 예정지\", \"Near Angkor Wat complex\")\n    }\n  ];\n\n  return (\n    <section id=\"contact\" className=\"py-20 bg-white\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n            📞 {t(\"투자 문의\", \"Investment Inquiry\")}\n          </h2>\n          <p className=\"text-xl text-gray-600\">\n            {t(\"함께 만들어갈 성공적인 투자 기회에 대해 논의해보세요\", \"Let's discuss this successful investment opportunity together\")}\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Contact Information */}\n          <div className=\"earth-gradient rounded-2xl p-8\">\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-6\">\n              {t(\"연락처 정보\", \"Contact Information\")}\n            </h3>\n            <div className=\"space-y-4\">\n              {contactInfo.map((info, index) => (\n                <div key={index} className=\"flex items-center space-x-3\">\n                  <div className={`w-10 h-10 ${info.bgColor} rounded-lg flex items-center justify-center`}>\n                    <span className={info.iconColor}>{info.icon}</span>\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">{info.title}</p>\n                    <p className=\"text-sm text-gray-600\">{info.description}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"mt-8\">\n              <Button\n                onClick={handleDownloadBrochure}\n                className=\"w-full bg-mongolian-600 text-white hover:bg-mongolian-700 transition-colors duration-200\"\n                size=\"lg\"\n              >\n                📄 {t(\"투자 브로셔 다운로드\", \"Download Investment Brochure\")}\n              </Button>\n            </div>\n          </div>\n\n          {/* Contact Form */}\n          <Card className=\"bg-gray-50\">\n            <CardContent className=\"p-8\">\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-6\">\n                {t(\"문의 양식\", \"Inquiry Form\")}\n              </h3>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    {t(\"성함\", \"Name\")}\n                  </Label>\n                  <Input\n                    id=\"name\"\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({...formData, name: e.target.value})}\n                    placeholder={t(\"홍길동\", \"John Doe\")}\n                    required\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    {t(\"이메일\", \"Email\")}\n                  </Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => setFormData({...formData, email: e.target.value})}\n                    placeholder=\"investor@example.com\"\n                    required\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"interest\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    {t(\"투자 관심 분야\", \"Investment Interest\")}\n                  </Label>\n                  <Select value={formData.interest} onValueChange={(value) => setFormData({...formData, interest: value})}>\n                    <SelectTrigger>\n                      <SelectValue placeholder={t(\"선택해주세요\", \"Please select\")} />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"main\">{t(\"주요 투자자\", \"Main Investor\")}</SelectItem>\n                      <SelectItem value=\"partner\">{t(\"전략적 파트너\", \"Strategic Partner\")}</SelectItem>\n                      <SelectItem value=\"franchise\">{t(\"프랜차이즈\", \"Franchise\")}</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Label htmlFor=\"message\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    {t(\"메시지\", \"Message\")}\n                  </Label>\n                  <Textarea\n                    id=\"message\"\n                    rows={4}\n                    value={formData.message}\n                    onChange={(e) => setFormData({...formData, message: e.target.value})}\n                    placeholder={t(\"투자에 대한 문의사항을 적어주세요...\", \"Please describe your investment inquiries...\")}\n                    required\n                  />\n                </div>\n                <Button\n                  type=\"submit\"\n                  className=\"w-full bg-earth-600 text-white hover:bg-earth-700 transition-colors duration-200\"\n                  size=\"lg\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? t(\"보내는 중...\", \"Sending...\") : t(\"문의 보내기\", \"Send Inquiry\")}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7947},"client/src/components/hero-section.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function HeroSection() {\n  const { t } = useLanguage();\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const handleDownloadBrochure = () => {\n    // TODO: Implement actual PDF download\n    alert(t('브로셔 다운로드 기능을 준비 중입니다.', 'Brochure download feature is being prepared.'));\n  };\n\n  return (\n    <section className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\n      {/* Background with gradient */}\n      <div className=\"absolute inset-0 mongolian-gradient\"></div>\n      \n      {/* Subtle pattern overlay */}\n      <div \n        className=\"absolute inset-0 opacity-10 bg-repeat\"\n        style={{\n          backgroundImage: `url(\"data:image/svg+xml,<svg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'><g fill='none' fill-rule='evenodd'><g fill='%23ffffff' fill-opacity='0.4'><circle cx='30' cy='30' r='4'/></g></svg>\")`\n        }}\n      ></div>\n      \n      <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 text-center text-white\">\n        {/* Hero Image */}\n        <div className=\"mb-8\">\n          <img \n            src=\"https://images.unsplash.com/photo-1544735716-392fe2489ffa?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=600\" \n            alt={t(\"몽골 기마 곡예 공연 모습\", \"Mongolian horseman performing traditional equestrian show\")}\n            className=\"w-full max-w-4xl mx-auto rounded-2xl shadow-2xl opacity-90\" \n          />\n        </div>\n        \n        <h1 className=\"text-4xl md:text-6xl font-bold mb-6 leading-tight animate-fade-in\">\n          {t(\"시엠립 몽골 마상곡예 공연\", \"Mongolian Equestrian Show in Siem Reap\")}\n        </h1>\n        \n        <p className=\"text-xl md:text-2xl mb-8 max-w-3xl mx-auto leading-relaxed animate-fade-in\">\n          {t(\n            \"앙코르와트 관광객을 위한 전통과 모험의 융합\",\n            \"Where tradition meets thrill for global travelers\"\n          )}\n          <br />\n          {t(\"연간 순익\", \"Expected annual net profit:\")} <span className=\"font-bold text-earth-200\">$2.1M ~ $3.3M</span> {t(\"예상\", \"\")}\n        </p>\n        \n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center animate-fade-in\">\n          <Button\n            onClick={() => scrollToSection('investment')}\n            className=\"bg-white text-mongolian-600 font-semibold py-4 px-8 rounded-lg shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-200\"\n            size=\"lg\"\n          >\n            🎯 {t(\"투자 제안서 보기\", \"View Investment Proposal\")}\n          </Button>\n          <Button\n            onClick={handleDownloadBrochure}\n            variant=\"outline\"\n            className=\"bg-transparent border-2 border-white text-white font-semibold py-4 px-8 rounded-lg hover:bg-white hover:text-mongolian-600 transition-all duration-200\"\n            size=\"lg\"\n          >\n            📄 {t(\"브로셔 다운로드\", \"Download Brochure\")}\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3317},"client/src/components/investment-points.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function InvestmentPoints() {\n  const { t } = useLanguage();\n\n  const investmentPoints = [\n    {\n      icon: \"🎯\",\n      title: t(\"독점적 시장 기회\", \"Exclusive Market Opportunity\"),\n      bgColor: \"bg-mongolian-100\",\n      points: [\n        t(\"동남아시아 유일의 몽골 마상곡예 공연\", \"Only Mongolian equestrian show in Southeast Asia\"),\n        t(\"캄보디아 정부의 관광 투자 우대 정책\", \"Cambodian government's tourism investment incentives\"),\n        t(\"경쟁사 부재로 인한 시장 선점 효과\", \"First-mover advantage with no direct competitors\")\n      ],\n      pointColor: \"text-mongolian-500\"\n    },\n    {\n      icon: \"📈\",\n      title: t(\"안정적 수익 구조\", \"Stable Revenue Structure\"),\n      bgColor: \"bg-earth-100\",\n      points: [\n        t(\"다중 수익원: 티켓 + 체험 + 기념품 + F&B\", \"Multiple revenue streams: Tickets + Experience + Souvenirs + F&B\"),\n        t(\"여행사 패키지 포함으로 안정적 고객 확보\", \"Stable customer base through travel agency packages\"),\n        t(\"성수기/비수기 편차 최소화 전략\", \"Strategy to minimize seasonal variations\")\n      ],\n      pointColor: \"text-earth-500\"\n    },\n    {\n      icon: \"🚀\",\n      title: t(\"확장 가능성\", \"Expansion Potential\"),\n      bgColor: \"bg-green-100\",\n      points: [\n        t(\"말 테마 체험존 및 승마 교육 프로그램\", \"Horse-themed experience zones and riding education programs\"),\n        t(\"전통 야시장 및 문화 체험 공간\", \"Traditional night markets and cultural experience areas\"),\n        t(\"다른 도시로의 프랜차이즈 확장\", \"Franchise expansion to other cities\")\n      ],\n      pointColor: \"text-green-500\"\n    },\n    {\n      icon: \"🛡️\",\n      title: t(\"리스크 관리\", \"Risk Management\"),\n      bgColor: \"bg-blue-100\",\n      points: [\n        t(\"포괄적 보험 가입 및 안전 시스템\", \"Comprehensive insurance coverage and safety systems\"),\n        t(\"6개월치 운영비 예비자금 확보\", \"6-month operating expense reserve fund\"),\n        t(\"현지 파트너십 및 정부 관계 구축\", \"Local partnerships and government relations\")\n      ],\n      pointColor: \"text-blue-500\"\n    }\n  ];\n\n  return (\n    <section id=\"investment\" className=\"py-20 earth-gradient\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n            💎 {t(\"투자 포인트\", \"Investment Highlights\")}\n          </h2>\n          <p className=\"text-xl text-gray-600\">\n            {t(\"검증된 비즈니스 모델과 독점적 시장 기회\", \"Proven business model with exclusive market opportunity\")}\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-16\">\n          {investmentPoints.map((point, index) => (\n            <Card key={index} className=\"bg-white shadow-lg hover:shadow-xl transition-shadow animate-fade-in\">\n              <CardContent className=\"p-8\">\n                <div className=\"flex items-center mb-6\">\n                  <div className={`w-12 h-12 ${point.bgColor} rounded-xl flex items-center justify-center mr-4`}>\n                    <span className=\"text-2xl\">{point.icon}</span>\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-900\">{point.title}</h3>\n                </div>\n                <ul className=\"space-y-3 text-gray-600\">\n                  {point.points.map((item, itemIndex) => (\n                    <li key={itemIndex} className=\"flex items-start\">\n                      <span className={`${point.pointColor} mr-2 mt-1`}>•</span>\n                      <span>{item}</span>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4044},"client/src/components/language-toggle.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function LanguageToggle() {\n  const { language, toggleLanguage, t } = useLanguage();\n\n  return (\n    <Button\n      onClick={toggleLanguage}\n      className=\"fixed top-4 right-4 z-50 bg-white shadow-lg text-mongolian-600 hover:bg-mongolian-50 transition-colors duration-200\"\n      size=\"sm\"\n    >\n      {t(\"ENGLISH\", \"한국어\")}\n    </Button>\n  );\n}\n","size_bytes":467},"client/src/components/revenue-calculator.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function RevenueCalculator() {\n  const { t } = useLanguage();\n  const [dailyShows, setDailyShows] = useState(2);\n  const [audiencePerShow, setAudiencePerShow] = useState(500);\n  const [ticketPrice, setTicketPrice] = useState(20);\n  \n  const [monthlyRevenue, setMonthlyRevenue] = useState(0);\n  const [commission, setCommission] = useState(0);\n  const [monthlyNet, setMonthlyNet] = useState(0);\n  const [annualNet, setAnnualNet] = useState(0);\n\n  useEffect(() => {\n    const monthlyRev = dailyShows * audiencePerShow * ticketPrice * 30;\n    const comm = monthlyRev * 0.3; // 30% commission\n    const monthlyNetValue = monthlyRev - comm;\n    const annualNetValue = monthlyNetValue * 12;\n    \n    setMonthlyRevenue(monthlyRev);\n    setCommission(comm);\n    setMonthlyNet(monthlyNetValue);\n    setAnnualNet(annualNetValue);\n  }, [dailyShows, audiencePerShow, ticketPrice]);\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  return (\n    <div className=\"bg-gradient-to-br from-gray-50 to-gray-100 rounded-2xl p-8 mb-12\">\n      <h3 className=\"text-2xl font-bold text-gray-900 mb-6\">\n        🧮 {t(\"수익 계산기\", \"Revenue Calculator\")}\n      </h3>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        <div>\n          <Label htmlFor=\"dailyShows\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            {t(\"일일 공연 횟수\", \"Daily Shows\")}\n          </Label>\n          <Input\n            id=\"dailyShows\"\n            type=\"number\"\n            value={dailyShows}\n            onChange={(e) => setDailyShows(Number(e.target.value))}\n            min={1}\n            max={4}\n            className=\"focus:ring-2 focus:ring-mongolian-500 focus:border-transparent\"\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"audiencePerShow\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            {t(\"회당 관객 수\", \"Audience per Show\")}\n          </Label>\n          <Input\n            id=\"audiencePerShow\"\n            type=\"number\"\n            value={audiencePerShow}\n            onChange={(e) => setAudiencePerShow(Number(e.target.value))}\n            min={100}\n            max={1000}\n            className=\"focus:ring-2 focus:ring-mongolian-500 focus:border-transparent\"\n          />\n        </div>\n        <div>\n          <Label htmlFor=\"ticketPrice\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n            {t(\"티켓 가격 ($)\", \"Ticket Price ($)\")}\n          </Label>\n          <Input\n            id=\"ticketPrice\"\n            type=\"number\"\n            value={ticketPrice}\n            onChange={(e) => setTicketPrice(Number(e.target.value))}\n            min={10}\n            max={50}\n            className=\"focus:ring-2 focus:ring-mongolian-500 focus:border-transparent\"\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 text-center\">\n        <Card className=\"bg-white shadow-sm\">\n          <CardContent className=\"p-4\">\n            <p className=\"text-sm text-gray-600\">\n              {t(\"월간 수익\", \"Monthly Revenue\")}\n            </p>\n            <p className=\"text-2xl font-bold text-mongolian-600\">{formatCurrency(monthlyRevenue)}</p>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-white shadow-sm\">\n          <CardContent className=\"p-4\">\n            <p className=\"text-sm text-gray-600\">\n              {t(\"여행사 수수료\", \"Agency Commission\")}\n            </p>\n            <p className=\"text-2xl font-bold text-red-600\">-{formatCurrency(commission)}</p>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-white shadow-sm\">\n          <CardContent className=\"p-4\">\n            <p className=\"text-sm text-gray-600\">\n              {t(\"월간 순수익\", \"Monthly Net\")}\n            </p>\n            <p className=\"text-2xl font-bold text-green-600\">{formatCurrency(monthlyNet)}</p>\n          </CardContent>\n        </Card>\n        <Card className=\"bg-white shadow-sm\">\n          <CardContent className=\"p-4\">\n            <p className=\"text-sm text-gray-600\">\n              {t(\"연간 순수익\", \"Annual Net\")}\n            </p>\n            <p className=\"text-2xl font-bold text-mongolian-600\">{formatCurrency(annualNet)}</p>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4736},"client/src/components/revenue-chart.tsx":{"content":"import { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from 'recharts';\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function RevenueChart() {\n  const { t } = useLanguage();\n\n  const data = [\n    { \n      name: t(\"티켓 판매\", \"Ticket Sales\"), \n      value: 85, \n      color: \"hsl(20, 91%, 48%)\" // mongolian-600\n    },\n    { \n      name: t(\"체험 프로그램\", \"Experience Programs\"), \n      value: 8, \n      color: \"hsl(45, 93%, 47%)\" // earth-500\n    },\n    { \n      name: t(\"기념품\", \"Souvenirs\"), \n      value: 4, \n      color: \"hsl(159.7826, 100%, 36.0784%)\" // green\n    },\n    { \n      name: t(\"F&B\", \"F&B\"), \n      value: 3, \n      color: \"hsl(203.8863, 88.2845%, 53.1373%)\" // blue\n    }\n  ];\n\n  const breakdown = [\n    {\n      name: t(\"티켓 판매\", \"Ticket Sales\"),\n      percentage: \"85%\",\n      color: \"bg-mongolian-500\"\n    },\n    {\n      name: t(\"체험 프로그램\", \"Experience Programs\"),\n      percentage: \"8%\",\n      color: \"bg-earth-500\"\n    },\n    {\n      name: t(\"기념품\", \"Souvenirs\"),\n      percentage: \"4%\",\n      color: \"bg-green-500\"\n    },\n    {\n      name: t(\"F&B\", \"F&B\"),\n      percentage: \"3%\",\n      color: \"bg-blue-500\"\n    }\n  ];\n\n  return (\n    <div className=\"bg-gray-50 rounded-2xl p-8 mb-12\">\n      <h3 className=\"text-2xl font-bold text-gray-900 mb-6\">\n        📊 {t(\"수익 구조 분석\", \"Revenue Breakdown\")}\n      </h3>\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        <div className=\"h-80\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <PieChart>\n              <Pie\n                data={data}\n                cx=\"50%\"\n                cy=\"50%\"\n                outerRadius={100}\n                dataKey=\"value\"\n                strokeWidth={0}\n              >\n                {data.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={entry.color} />\n                ))}\n              </Pie>\n              <Tooltip \n                formatter={(value) => [`${value}%`, '']}\n                labelStyle={{ color: '#374151' }}\n              />\n            </PieChart>\n          </ResponsiveContainer>\n        </div>\n        <div className=\"space-y-4\">\n          {breakdown.map((item, index) => (\n            <div key={index} className=\"flex justify-between items-center p-4 bg-white rounded-lg\">\n              <div className=\"flex items-center\">\n                <div className={`w-4 h-4 ${item.color} rounded-full mr-3`}></div>\n                <span className=\"font-medium\">{item.name}</span>\n              </div>\n              <span className=\"font-bold text-gray-900\">{item.percentage}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":2738},"client/src/components/revenue-model.tsx":{"content":"import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { RevenueCalculator } from \"./revenue-calculator\";\nimport { RevenueChart } from \"./revenue-chart\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function RevenueModel() {\n  const { t } = useLanguage();\n\n  const operatingCosts = [\n    {\n      item: t(\"인건비 (기수, 스태프)\", \"Labor (Riders, Staff)\"),\n      monthly: \"$20,000\",\n      annual: \"$240,000\"\n    },\n    {\n      item: t(\"마필 관리비\", \"Horse Care\"),\n      monthly: \"$10,000\",\n      annual: \"$120,000\"\n    },\n    {\n      item: t(\"공연장 임대료\", \"Venue Rent\"),\n      monthly: \"$12,500\",\n      annual: \"$150,000\"\n    },\n    {\n      item: t(\"조명/음향 운영비\", \"Lighting/Sound\"),\n      monthly: \"$5,000\",\n      annual: \"$60,000\"\n    },\n    {\n      item: t(\"마케팅 예산\", \"Marketing\"),\n      monthly: \"$5,000\",\n      annual: \"$60,000\"\n    },\n    {\n      item: t(\"예비비\", \"Reserve Fund\"),\n      monthly: \"$5,000\",\n      annual: \"$60,000\"\n    },\n    {\n      item: t(\"기타 (유틸리티, 세금)\", \"Utilities, Taxes\"),\n      monthly: \"$7,500\",\n      annual: \"$90,000\"\n    }\n  ];\n\n  const totalMonthlyCosts = 65000;\n  const totalAnnualCosts = 780000;\n\n  return (\n    <section id=\"revenue\" className=\"py-20 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n            💰 {t(\"수익 모델 분석\", \"Revenue Model Analysis\")}\n          </h2>\n          <p className=\"text-xl text-gray-600\">\n            {t(\"체계적이고 투명한 수익 구조 분석\", \"Systematic and transparent revenue structure analysis\")}\n          </p>\n        </div>\n\n        {/* Revenue Calculator */}\n        <RevenueCalculator />\n\n        {/* Revenue Breakdown Chart */}\n        <RevenueChart />\n\n        {/* Operating Costs Table */}\n        <div className=\"bg-white border border-gray-200 rounded-2xl p-8\">\n          <h3 className=\"text-2xl font-bold text-gray-900 mb-6\">\n            💼 {t(\"운영비 상세 내역\", \"Operating Costs Breakdown\")}\n          </h3>\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader>\n                <TableRow className=\"border-b border-gray-200\">\n                  <TableHead className=\"pb-4 font-semibold text-gray-900\">\n                    {t(\"항목\", \"Item\")}\n                  </TableHead>\n                  <TableHead className=\"pb-4 font-semibold text-gray-900 text-right\">\n                    {t(\"월간 비용\", \"Monthly Cost\")}\n                  </TableHead>\n                  <TableHead className=\"pb-4 font-semibold text-gray-900 text-right\">\n                    {t(\"연간 비용\", \"Annual Cost\")}\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {operatingCosts.map((cost, index) => (\n                  <TableRow key={index} className=\"border-b border-gray-100\">\n                    <TableCell className=\"py-3\">{cost.item}</TableCell>\n                    <TableCell className=\"py-3 text-right font-medium\">{cost.monthly}</TableCell>\n                    <TableCell className=\"py-3 text-right font-medium\">{cost.annual}</TableCell>\n                  </TableRow>\n                ))}\n                <TableRow className=\"bg-gray-50 font-bold\">\n                  <TableCell className=\"py-4\">\n                    {t(\"총 운영비\", \"Total Operating Costs\")}\n                  </TableCell>\n                  <TableCell className=\"py-4 text-right text-red-600\">\n                    ${totalMonthlyCosts.toLocaleString()}\n                  </TableCell>\n                  <TableCell className=\"py-4 text-right text-red-600\">\n                    ${totalAnnualCosts.toLocaleString()}\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4053},"client/src/components/sidebar-navigation.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { useLanguage } from \"@/contexts/language-context\";\nimport { useState } from \"react\";\n\ninterface SidebarNavigationProps {\n  currentSection: string;\n  onSectionChange: (section: string) => void;\n}\n\nexport function SidebarNavigation({ currentSection, onSectionChange }: SidebarNavigationProps) {\n  const { t, language, toggleLanguage } = useLanguage();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const navigationItems = [\n    {\n      id: \"home\",\n      label: t(\"홈\", \"Home\"),\n      icon: \"🏠\",\n      description: t(\"제안서 개요\", \"Investment proposal overview\")\n    },\n    {\n      id: \"overview\",\n      label: t(\"사업 개요\", \"Business Overview\"),\n      icon: \"📊\",\n      description: t(\"프로젝트 개요 및 핵심 지표\", \"Project overview and key metrics\")\n    },\n    {\n      id: \"investment\",\n      label: t(\"투자 포인트\", \"Investment Points\"),\n      icon: \"💎\",\n      description: t(\"핵심 투자 매력도\", \"Core investment attractiveness\")\n    },\n    {\n      id: \"initial-investment\",\n      label: t(\"초기 투자내역\", \"Initial Investment\"),\n      icon: \"💰\",\n      description: t(\"상세 투자 비용 분석\", \"Detailed investment cost analysis\")\n    },\n    {\n      id: \"revenue\",\n      label: t(\"수익 모델\", \"Revenue Model\"),\n      icon: \"🎟️\",\n      description: t(\"상세 수익 구조 분석\", \"Detailed revenue structure analysis\")\n    },\n    {\n      id: \"operations\",\n      label: t(\"운영비 전망\", \"Operations Forecast\"),\n      icon: \"🛠️\",\n      description: t(\"운영비 및 수익성 전망\", \"Operating costs and profitability forecast\")\n    },\n    {\n      id: \"risk\",\n      label: t(\"리스크 관리\", \"Risk Management\"),\n      icon: \"🛡️\",\n      description: t(\"위험 분석 및 대응 전략\", \"Risk analysis and response strategies\")\n    },\n    {\n      id: \"marketing\",\n      label: t(\"마케팅 전략\", \"Marketing Strategy\"),\n      icon: \"📢\",\n      description: t(\"고객 유치 및 브랜딩\", \"Customer acquisition and branding\")\n    },\n    {\n      id: \"vision\",\n      label: t(\"사업 비전\", \"Business Vision\"),\n      icon: \"🧭\",\n      description: t(\"확장 계획 및 미래 전망\", \"Expansion plan and future outlook\")\n    },\n    {\n      id: \"location\",\n      label: t(\"시엠립 입지\", \"Siem Reap Location\"),\n      icon: \"🗺️\",\n      description: t(\"입지 장점 및 사업 기회\", \"Location advantages and business opportunities\")\n    }\n  ];\n\n  return (\n    <>\n      {/* Mobile Header */}\n      <div className=\"md:hidden bg-slate-900 border-b border-slate-700 p-4 sticky top-0 z-50 relative\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 rounded-lg overflow-hidden border border-amber-500/50\">\n              <img \n                src=\"/attached_assets/20250313_172013_1754638755741.png\" \n                alt=\"Mongolian Equestrian\"\n                className=\"w-full h-full object-cover\"\n              />\n            </div>\n            <div>\n              <h1 className=\"font-bold text-white text-lg\">\n                {t(\"몽골 마상곡예\", \"Mongolian Show\")}\n              </h1>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-3\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={toggleLanguage}\n              className=\"bg-slate-800 border-slate-600 text-slate-200 hover:bg-slate-700 text-xs px-3 py-2\"\n            >\n              {language === 'ko' ? 'EN' : 'KO'}\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className={`border-slate-600 text-slate-200 hover:bg-slate-700 px-3 py-2 text-sm flex items-center space-x-2 ${\n                isMobileMenuOpen \n                  ? 'bg-amber-500 text-slate-900 border-amber-400' \n                  : 'bg-slate-800'\n              }`}\n            >\n              <span className=\"text-lg\">{isMobileMenuOpen ? '✕' : '☰'}</span>\n              <span className=\"text-sm font-medium\">\n                {t(\"메뉴\", \"Menu\")}\n              </span>\n            </Button>\n          </div>\n        </div>\n        \n        {/* Mobile Menu Overlay */}\n        {isMobileMenuOpen && (\n          <>\n            {/* Backdrop */}\n            <div \n              className=\"fixed inset-0 bg-black/50 z-40 md:hidden\"\n              onClick={() => setIsMobileMenuOpen(false)}\n            />\n            \n            {/* Menu Content */}\n            <div className=\"absolute top-full left-0 right-0 bg-slate-900 border-b border-slate-700 z-50 shadow-xl\">\n              <div className=\"p-4 space-y-3 max-h-[80vh] overflow-y-auto\">\n                {navigationItems.map((item) => {\n                  const isActive = currentSection === item.id;\n                  return (\n                    <button\n                      key={item.id}\n                      onClick={() => {\n                        onSectionChange(item.id);\n                        setIsMobileMenuOpen(false);\n                        window.scrollTo({ top: 0, behavior: 'smooth' });\n                      }}\n                      className={`w-full p-4 rounded-lg transition-all duration-200 min-h-[70px] ${\n                        isActive\n                          ? 'bg-gradient-to-r from-amber-500 to-orange-500 text-slate-900 shadow-lg'\n                          : 'text-slate-200 hover:bg-slate-700 hover:text-white bg-slate-800/50 border border-slate-600/30'\n                      }`}\n                    >\n                      <div className=\"flex items-center space-x-4\">\n                        <div className=\"flex-shrink-0 w-12 h-12 rounded-full bg-slate-700/50 flex items-center justify-center\">\n                          <span className=\"text-2xl\">\n                            {item.icon}\n                          </span>\n                        </div>\n                        <div className=\"flex-1 text-left\">\n                          <h3 className={`font-semibold text-lg ${\n                            isActive ? 'text-slate-900' : 'text-white'\n                          }`}>\n                            {item.label}\n                          </h3>\n                          <p className={`text-sm mt-1 ${\n                            isActive ? 'text-slate-700' : 'text-slate-400'\n                          }`}>\n                            {item.description}\n                          </p>\n                        </div>\n                        <div className=\"flex-shrink-0\">\n                          <span className={`text-xl ${\n                            isActive ? 'text-slate-900' : 'text-slate-400'\n                          }`}>\n                            →\n                          </span>\n                        </div>\n                      </div>\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* Desktop Sidebar */}\n      <div className=\"hidden md:block fixed left-0 top-0 h-full w-64 bg-slate-900 border-r border-slate-700 overflow-y-auto z-30\">\n        {/* Desktop Header */}\n        <div className=\"p-6 border-b border-slate-700\">\n          <div className=\"flex items-center space-x-3 mb-4\">\n            <div className=\"w-10 h-10 rounded-xl overflow-hidden border border-amber-500/50\">\n              <img \n                src=\"/attached_assets/20250313_172013_1754638755741.png\" \n                alt=\"Mongolian Equestrian\"\n                className=\"w-full h-full object-cover\"\n              />\n            </div>\n            <div>\n              <h1 className=\"font-bold text-white text-lg\">\n                {t(\"몽골 마상곡예\", \"Mongolian Show\")}\n              </h1>\n              <p className=\"text-sm text-slate-300\">\n                {t(\"제안서\", \"Investment Proposal\")}\n              </p>\n            </div>\n          </div>\n          \n          {/* Language Toggle */}\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={toggleLanguage}\n            className=\"w-full bg-slate-800 border-slate-600 text-slate-200 hover:bg-slate-700 hover:text-white hover:border-amber-500\"\n          >\n            {language === 'ko' ? 'English' : '한국어'}\n          </Button>\n        </div>\n\n        {/* Desktop Navigation Items */}\n        <div className=\"p-4 space-y-2\">\n          {navigationItems.map((item) => {\n            const isActive = currentSection === item.id;\n            return (\n              <button\n                key={item.id}\n                onClick={() => {\n                  onSectionChange(item.id);\n                  window.scrollTo({ top: 0, behavior: 'smooth' });\n                }}\n                className={`w-full text-left p-3 rounded-lg transition-all duration-200 ${\n                  isActive\n                    ? 'bg-gradient-to-r from-amber-500 to-orange-500 text-slate-900 shadow-lg shadow-amber-500/25'\n                    : 'text-slate-200 hover:bg-slate-800 hover:text-white'\n                }`}\n              >\n                <div className=\"flex items-start space-x-3\">\n                  <span className=\"text-lg flex-shrink-0 mt-0.5\">\n                    {item.icon}\n                  </span>\n                  <div className=\"min-w-0 flex-1\">\n                    <h3 className={`font-semibold text-sm mb-1 ${\n                      isActive ? 'text-slate-900' : 'text-white'\n                    }`}>\n                      {item.label}\n                    </h3>\n                    <p className={`text-xs ${\n                      isActive ? 'text-slate-700' : 'text-slate-400'\n                    }`}>\n                      {item.description}\n                    </p>\n                  </div>\n                </div>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}","size_bytes":10053},"client/src/contexts/language-context.tsx":{"content":"import { createContext, useContext, useState, ReactNode } from 'react';\n\ntype Language = 'ko' | 'en';\n\ninterface LanguageContextType {\n  language: Language;\n  toggleLanguage: () => void;\n  t: (ko: string, en: string) => string;\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  const [language, setLanguage] = useState<Language>('ko');\n\n  const toggleLanguage = () => {\n    setLanguage(prev => prev === 'ko' ? 'en' : 'ko');\n  };\n\n  const t = (ko: string, en: string) => {\n    return language === 'ko' ? ko : en;\n  };\n\n  return (\n    <LanguageContext.Provider value={{ language, toggleLanguage, t }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}\n","size_bytes":979},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/business-overview-page.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function BusinessOverviewPage() {\n  const { t } = useLanguage();\n\n  const projectDetails = [\n    {\n      title: t(\"프로젝트명\", \"Project Name\"),\n      content: t(\"몽골 마상곡예 & 문화 체험 공연장\", \"Mongolian Equestrian & Cultural Experience Theater\")\n    },\n    {\n      title: t(\"위치\", \"Location\"),\n      content: t(\"앙코르와트 인근, 시내 접근성 우수 지역\", \"Near Angkor Wat complex, excellent city accessibility\")\n    },\n    {\n      title: t(\"사업 목적\", \"Business Purpose\"),\n      content: t(\"시엠립 관광의 필수 콘텐츠로 육성 및 몽골 전통 마상곡예의 아시아 대표 콘텐츠화\", \"Establishing as essential Siem Reap tourism content and Asia's leading Mongolian equestrian performance\")\n    }\n  ];\n\n  const performanceDetails = [\n    {\n      icon: \"🎭\",\n      title: t(\"공연 내용\", \"Performance Content\"),\n      details: [\n        t(\"몽골 전통 기마전사와 아크로바틱 곡예\", \"Traditional Mongolian mounted warriors and acrobatic performances\"),\n        t(\"전통 음악과 의상, 조명이 결합된 스토리텔링\", \"Storytelling combined with traditional music, costumes, and lighting\"),\n        t(\"관객 참여형 포토존 및 체험 프로그램\", \"Interactive photo zones and experience programs for audience\")\n      ]\n    },\n    {\n      icon: \"👥\",\n      title: t(\"운영 규모\", \"Operating Scale\"),\n      details: [\n        t(\"1일 2회 공연 (상황에 따라 탄력적운영,오전,오후)\", \"2 shows daily (Hours are flexible,morning and afternoon.)\"),\n        t(\"회당 500명 수용 규모\", \"500 audience capacity per show\"),\n        t(\"월 60회 공연 (30일 기준)\", \"60 performances per month (30 days)\")\n      ]\n    },\n    {\n      icon: \"🏛️\",\n      title: t(\"시설 구성\", \"Facility Composition\"),\n      details: [\n        t(\"메인 공연장 (실내외 겸용)\", \"Main theater (indoor/outdoor hybrid)\"),\n        t(\"기념품샵 및 문화 체험 공간\", \"Souvenir shop and cultural experience area\"),\n        t(\"F&B 구역 및 휴식 공간\", \"F&B zone and rest areas\"),\n        t(\"마필 관리 시설\", \"Horse care facilities\")\n      ]\n    }\n  ];\n\n  const keyMetrics = [\n    {\n      label: t(\"일일 최소 관객\", \"Daily Minimum Audience\"),\n      value: \"1,000명\",\n      color: \"bg-gradient-to-r from-amber-100 to-orange-100 text-amber-800 border border-amber-200\"\n    },\n    {\n      label: t(\"월간 예상 관객\", \"Monthly Expected Audience\"),\n      value: \"30,000명\",\n      color: \"bg-gradient-to-r from-blue-100 to-indigo-100 text-blue-800 border border-blue-200\"\n    },\n    {\n      label: t(\"연간 예상 관객\", \"Annual Expected Audience\"),\n      value: \"360,000명\",\n      color: \"bg-gradient-to-r from-emerald-100 to-teal-100 text-emerald-800 border border-emerald-200\"\n    },\n    {\n      label: t(\"시장 독점성\", \"Market Exclusivity\"),\n      value: t(\"동남아 유일\", \"Only in Southeast Asia\"),\n      color: \"bg-gradient-to-r from-violet-100 to-purple-100 text-violet-800 border border-violet-200\"\n    }\n  ];\n\n  return (\n    <div className=\"relative space-y-6 md:space-y-8 min-h-screen text-white p-4 md:p-8\">\n      {/* Background Image - Mobile Optimized */}\n      <div \n        className=\"absolute inset-0 w-full h-full opacity-70 hidden md:block\"\n        style={{\n          backgroundImage: `url('/business-overview-bg.png')`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center 20%',\n          backgroundRepeat: 'no-repeat',\n          zIndex: 1\n        }}\n      />\n      \n      {/* Mobile Background */}\n      <div \n        className=\"absolute inset-0 w-full h-full opacity-80 md:hidden\"\n        style={{\n          backgroundImage: `url('/business-overview-bg.png')`,\n          backgroundSize: '120% auto',\n          backgroundPosition: 'center 15%',\n          backgroundRepeat: 'no-repeat',\n          zIndex: 1\n        }}\n      />\n      \n      {/* Light overlay for text readability */}\n      <div \n        className=\"absolute inset-0 bg-gradient-to-b from-white/20 via-transparent to-white/30\"\n        style={{ zIndex: 2 }}\n      />\n      <div className=\"relative z-10 text-center\">\n        <h1 className=\"text-2xl md:text-4xl font-bold mb-3 md:mb-4 text-white drop-shadow-[2px_2px_4px_rgba(0,0,0,0.8)]\">\n          📊 {t(\"사업 개요\", \"Business Overview\")}\n        </h1>\n        <p className=\"text-base md:text-xl text-white max-w-4xl mx-auto mb-4 md:mb-6 px-2 drop-shadow-[1px_1px_3px_rgba(0,0,0,0.8)]\">\n          {t(\"동남아시아 최초의 몽골 마상곡예 공연장으로 시엠립 관광의 새로운 랜드마크를 창조합니다\", \n             \"Creating Siem Reap's new tourism landmark as Southeast Asia's first Mongolian equestrian performance venue\")}\n        </p>\n        \n        {/* Project Background */}\n        <div className=\"bg-white/70 backdrop-blur-md rounded-lg p-4 md:p-6 max-w-5xl mx-auto shadow-lg border border-white/30\">\n          <p className=\"text-sm md:text-lg text-gray-900 leading-relaxed font-bold\">\n            {t(\"캄보디아 연간 약 700만 명의 관광객이 방문하는 세계적인 관광 명소 앙코르와트를 가지고 있습니다. 이 지역의 높은 관광 수요를 활용하여 마장마술 공연장을 설립하는 프로젝트로, 투자금 회수가 적합하고 수익성이 확보된 사업 모델을 기반으로 운영됩니다.\",\n               \"Cambodia hosts approximately 7 million tourists annually with the world-famous Angkor Wat. This project leverages the high tourism demand in this region to establish an equestrian show venue, operating on a business model that ensures proper investment recovery and secured profitability.\")}\n          </p>\n          <p className=\"text-sm md:text-lg text-gray-900 leading-relaxed mt-3 md:mt-4 font-bold\">\n            {t(\"이 프로젝트는 캄보디아의 관광 명소인 씨엠립주, 세계적인 명소인 앙코르와트 지역, 유적지 관광 후 관광객들에게 특별한 경험을 제공하며, 안정적인 수익 모델을 구축하는 것을 목표로 합니다.\",\n               \"This project aims to provide tourists with a unique experience after visiting the historic sites in Siem Reap Province, Cambodia, near the world-renowned Angkor Wat, while establishing a stable revenue model.\")}\n          </p>\n        </div>\n      </div>\n\n      {/* Mongolian Riding Feature Image - Mobile Optimized */}\n      <div className=\"relative z-10 w-full mb-4 md:mb-6\">\n        <img \n          src=\"/attached_assets/Riding1 (5)_1755062196060.jpg\" \n          alt={t(\"몽골 마상곡예 이미지\", \"Mongolian Equestrian Performance Image\")}\n          className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-white/30\"\n          style={{\n            objectPosition: 'center center'\n          }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n        {/* Image Caption */}\n        <div className=\"absolute bottom-3 left-3 right-3 bg-black/60 backdrop-blur-sm rounded-lg p-2\">\n          <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n            {t(\"몽골 전통 마상곡예의 역동적인 모습\", \"Dynamic Mongolian Traditional Equestrian Performance\")}\n          </p>\n        </div>\n      </div>\n\n      {/* Project Details */}\n      <div className=\"relative z-10 overflow-hidden rounded-lg shadow-xl\">\n        {/* Background Image for this section */}\n        <div \n          className=\"absolute inset-0 w-full h-full opacity-50\"\n          style={{\n            backgroundImage: `url('/business-overview-bg.png')`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat'\n          }}\n        />\n        \n        {/* Content overlay */}\n        <div className=\"relative bg-black/40 backdrop-blur-sm\">\n          <div className=\"p-4 md:p-8\">\n            <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-white drop-shadow-[2px_2px_4px_rgba(0,0,0,0.8)]\">\n              🎯 {t(\"프로젝트 상세\", \"Project Details\")}\n            </h2>\n            <div className=\"space-y-4 md:space-y-6\">\n              {projectDetails.map((detail, index) => (\n                <div key={index} className=\"border-l-4 border-amber-400 pl-3 md:pl-4 bg-white/80 backdrop-blur-sm p-3 md:p-4 rounded-r-lg\">\n                  <h3 className=\"font-bold text-base md:text-lg text-gray-900\">{detail.title}</h3>\n                  <p className=\"text-gray-900 mt-1 text-sm md:text-base font-bold\">{detail.content}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Performance Details */}\n      <div className=\"relative z-10 grid grid-cols-1 lg:grid-cols-3 gap-4 md:gap-6\">\n        {performanceDetails.map((section, index) => (\n          <Card key={index} className=\"h-full bg-white/70 backdrop-blur-md shadow-xl border border-white/30\">\n            <CardContent className=\"p-4 md:p-6\">\n              <div className=\"flex items-center mb-3 md:mb-4\">\n                <span className=\"text-2xl md:text-3xl mr-2 md:mr-3\">{section.icon}</span>\n                <h3 className=\"text-base md:text-xl font-bold text-gray-900\">{section.title}</h3>\n              </div>\n              <ul className=\"space-y-2 md:space-y-3\">\n                {section.details.map((detail, detailIndex) => (\n                  <li key={detailIndex} className=\"flex items-start\">\n                    <span className=\"text-amber-600 mr-2 mt-1 font-bold\">•</span>\n                    <span className=\"text-gray-900 text-sm md:text-base font-bold\">{detail}</span>\n                  </li>\n                ))}\n              </ul>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Second Mongolian Riding Feature Image - Mobile Optimized */}\n      <div className=\"relative z-10 w-full mb-4 md:mb-6\">\n        <img \n          src=\"/attached_assets/Riding1 (9)_1755062331594.jpg\" \n          alt={t(\"몽골 마상 곡예 공연\", \"Mongolian Equestrian Acrobatic Performance\")}\n          className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-white/30\"\n          style={{\n            objectPosition: 'center center'\n          }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n        {/* Image Caption */}\n        <div className=\"absolute bottom-3 left-3 right-3 bg-black/60 backdrop-blur-sm rounded-lg p-2\">\n          <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n            {t(\"몽골 기수의 놀라운 승마 기술과 곡예\", \"Amazing riding skills and acrobatics of Mongolian horsemen\")}\n          </p>\n        </div>\n      </div>\n\n      {/* Key Metrics */}\n      <Card className=\"relative z-10 bg-white/50 backdrop-blur-md shadow-xl border border-white/20\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            📈 {t(\"핵심 지표\", \"Key Metrics\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3 md:gap-4\">\n            {keyMetrics.map((metric, index) => (\n              <div key={index} className=\"bg-gradient-to-br from-amber-100 to-orange-200 border-2 border-amber-400 rounded-lg p-3 md:p-4 text-center shadow-md\">\n                <p className=\"text-xs md:text-sm font-bold mb-1 md:mb-2 text-gray-900\">{metric.label}</p>\n                <p className=\"text-lg md:text-2xl font-bold text-amber-800\">{metric.value}</p>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Competitive Advantages */}\n      <Card className=\"relative z-10 bg-white/50 backdrop-blur-md shadow-xl border border-white/20\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            🏆 {t(\"경쟁 우위\", \"Competitive Advantages\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6\">\n            <div className=\"bg-green-50 border-2 border-green-200 rounded-lg p-4 md:p-6\">\n              <h3 className=\"font-bold text-base md:text-lg text-green-900 mb-3\">\n                {t(\"차별화 요소\", \"Differentiation Factors\")}\n              </h3>\n              <ul className=\"space-y-2\">\n                <li className=\"flex items-start\">\n                  <span className=\"text-green-600 mr-2 mt-1 font-bold\">✓</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"동남아시아 유일의 몽골 마상곡예 공연\", \"Only Mongolian equestrian show in Southeast Asia\")}\n                  </span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-green-600 mr-2 mt-1 font-bold\">✓</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"전통과 현대가 결합된 독창적 콘텐츠\", \"Unique content combining tradition and modernity\")}\n                  </span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-green-600 mr-2 mt-1 font-bold\">✓</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"앙코르와트 관광과 완벽한 시너지\", \"Perfect synergy with Angkor Wat tourism\")}\n                  </span>\n                </li>\n              </ul>\n            </div>\n            <div className=\"bg-blue-50 border-2 border-blue-200 rounded-lg p-4 md:p-6\">\n              <h3 className=\"font-bold text-base md:text-lg text-blue-900 mb-3\">\n                {t(\"시장 기회\", \"Market Opportunities\")}\n              </h3>\n              <ul className=\"space-y-2\">\n                <li className=\"flex items-start\">\n                  <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"연간 700만 명의 시엠립 방문객\", \"7 million annual Siem Reap visitors\")}\n                  </span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"캄보디아 정부의 관광 산업 육성 정책\", \"Cambodian government's tourism industry development policy\")}\n                  </span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"포스트 코로나 체험형 관광 수요 증가\", \"Increasing demand for experiential tourism post-COVID\")}\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":15397},"client/src/pages/business-vision-page.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function BusinessVisionPage() {\n  const { t } = useLanguage();\n\n  const businessModel = [\n    {\n      category: t(\"핵심 사업\", \"Core Business\"),\n      icon: \"🎭\",\n      description: t(\"몽골 마상곡예 공연\", \"Mongolian equestrian performance\"),\n      revenue: \"70%\",\n      details: [\n        t(\"일일 2회 공연 (500명 수용)\", \"2 daily performances (500 capacity)\"),\n        t(\"몰입형 스토리텔링 공연\", \"Immersive storytelling performance\"),\n        t(\"전통 의상, 음악, 조명 효과\", \"Traditional costumes, music, lighting effects\")\n      ]\n    },\n    {\n      category: t(\"체험 서비스\", \"Experience Services\"),\n      icon: \"🐎\",\n      description: t(\"말 테마 체험 프로그램\", \"Horse-themed experience programs\"),\n      revenue: \"15%\",\n      details: [\n        t(\"승마 체험 및 교육\", \"Horse riding experiences and education\"),\n        t(\"전통 활쏘기 체험\", \"Traditional archery experience\"),\n        t(\"몽골 전사 의상 체험\", \"Mongolian warrior costume experience\")\n      ]\n    },\n    {\n      category: t(\"상품 판매\", \"Merchandise\"),\n      icon: \"🛍️\",\n      description: t(\"기념품 및 문화 상품\", \"Souvenirs and cultural products\"),\n      revenue: \"10%\",\n      details: [\n        t(\"몽골 전통 수공예품\", \"Mongolian traditional handicrafts\"),\n        t(\"공연 기념품\", \"Performance souvenirs\"),\n        t(\"문화 교육 자료\", \"Cultural educational materials\")\n      ]\n    },\n    {\n      category: t(\"F&B 서비스\", \"F&B Services\"),\n      icon: \"🍖\",\n      description: t(\"전통 몽골 음식 및 음료\", \"Traditional Mongolian food and beverages\"),\n      revenue: \"5%\",\n      details: [\n        t(\"몽골 전통 요리\", \"Traditional Mongolian cuisine\"),\n        t(\"말유주 및 전통 차\", \"Mare's milk wine and traditional tea\"),\n        t(\"야외 BBQ 체험\", \"Outdoor BBQ experience\")\n      ]\n    }\n  ];\n\n\n\n\n\n  return (\n    <div className=\"space-y-8 bg-black min-h-screen text-white p-8\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold text-white mb-4\">\n          🧭 {t(\"사업 비전 및 확장 계획\", \"Business Vision & Expansion Plan\")}\n        </h1>\n        <p className=\"text-xl text-gray-300 max-w-3xl mx-auto mb-8\">\n          {t(\"통합 비즈니스 모델을 통한 지속 가능한 성장 전략\", \n             \"Sustainable growth strategy through integrated business model\")}\n        </p>\n      </div>\n\n      {/* 통합 비즈니스 모델 이미지 - 첫 번째 이미지 */}\n      <div className=\"relative w-full mb-4 md:mb-6\">\n        <img \n          src=\"/attached_assets/63072608_l-e1568175792180-1024x594_1755069592258.jpg\" \n          alt={t(\"승마 교육과 체험\", \"Horse Riding Education and Experience\")}\n          className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-amber-300\"\n          style={{\n            objectPosition: 'center center'\n          }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n        <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n          <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n            {t(\"전문적인 승마 교육과 다양한 체험 프로그램으로 차별화된 서비스 제공\", \"Providing Differentiated Services Through Professional Horse Riding Education and Various Experience Programs\")}\n          </p>\n        </div>\n      </div>\n\n      {/* 비즈니스 모델 */}\n      <Card className=\"bg-gradient-to-br from-amber-50 to-orange-100 border-2 border-amber-300\">\n        <CardContent className=\"p-8\">\n          <h2 className=\"text-3xl font-bold mb-6 text-gray-900\">\n            💼 {t(\"통합 비즈니스 모델\", \"Integrated Business Model\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {businessModel.map((model, index) => (\n              <div key={index} className=\"bg-white border-2 border-amber-200 rounded-lg p-6 shadow-md\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-3xl mr-3\">{model.icon}</span>\n                    <div>\n                      <h3 className=\"text-xl font-bold text-gray-900\">{model.category}</h3>\n                      <p className=\"text-sm text-gray-800 font-medium\">{model.description}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className=\"text-3xl font-bold text-amber-700\">{model.revenue}</span>\n                    <p className=\"text-sm text-gray-800 font-semibold\">{t(\"수익 비중\", \"Revenue Share\")}</p>\n                  </div>\n                </div>\n                <ul className=\"space-y-2\">\n                  {model.details.map((detail, detailIndex) => (\n                    <li key={detailIndex} className=\"flex items-start\">\n                      <span className=\"text-amber-600 mr-2 mt-1 font-bold\">•</span>\n                      <span className=\"text-gray-800 font-medium\">{detail}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 전략적 입지 및 확장 비전 */}\n      <Card className=\"bg-gradient-to-br from-purple-50 to-blue-100 border-2 border-purple-300\">\n        <CardContent className=\"p-8\">\n          <h2 className=\"text-3xl font-bold mb-6 text-gray-900\">\n            🌏 {t(\"전략적 입지 및 확장 비전\", \"Strategic Location & Expansion Vision\")}\n          </h2>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* 입지 우수성 */}\n            <div className=\"bg-white border-2 border-blue-200 rounded-lg p-6 shadow-md\">\n              <div className=\"flex items-center mb-4\">\n                <span className=\"text-3xl mr-3\">📍</span>\n                <h3 className=\"text-xl font-bold text-gray-900\">{t(\"최적의 접근성\", \"Optimal Accessibility\")}</h3>\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start\">\n                  <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 font-medium\">{t(\"시내 중심가에서 차량 7분 거리\", \"7 minutes drive from city center\")}</span>\n                </div>\n                <div className=\"flex items-start\">\n                  <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 font-medium\">{t(\"펍스트리트 도보 10분, 관광 허브 중심지\", \"10-minute walk to Pub Street, heart of tourism hub\")}</span>\n                </div>\n                <div className=\"flex items-start\">\n                  <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 font-medium\">{t(\"주요 호텔 지구와 근접한 황금 입지\", \"Prime location near major hotel districts\")}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* 부지 확장성 */}\n            <div className=\"bg-white border-2 border-green-200 rounded-lg p-6 shadow-md\">\n              <div className=\"flex items-center mb-4\">\n                <span className=\"text-3xl mr-3\">🏞️</span>\n                <h3 className=\"text-xl font-bold text-gray-900\">{t(\"무한 확장 가능성\", \"Unlimited Expansion Potential\")}</h3>\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start\">\n                  <span className=\"text-green-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 font-medium\">{t(\"현재 3헥타(9천평) 대규모 부지\", \"Current 3-hectare (9,000 pyeong) large site\")}</span>\n                </div>\n                <div className=\"flex items-start\">\n                  <span className=\"text-green-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 font-medium\">{t(\"관광특구 지정으로 추가 확장 용이\", \"Easy additional expansion in designated tourism zone\")}</span>\n                </div>\n                <div className=\"flex items-start\">\n                  <span className=\"text-green-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 font-medium\">{t(\"다양한 테마파크 및 부대시설 건설 가능\", \"Capable of building various theme parks and facilities\")}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* K-Culture 융합전략 이미지들 - 두 번째, 세 번째 이미지 */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6 mb-4 md:mb-6\">\n        {/* 두 번째 이미지 - K-Pop */}\n        <div className=\"relative w-full\">\n          <img \n            src=\"/attached_assets/K-POP-LEAD-Final_1755069825483.webp\" \n            alt={t(\"K-Pop 문화 융합\", \"K-Pop Culture Integration\")}\n            className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-pink-300\"\n            style={{\n              objectPosition: 'center center'\n            }}\n          />\n          <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent rounded-lg\"></div>\n          <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n            <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n              {t(\"K-Pop과 몽골 전통 문화의 혁신적 융합\", \"Innovative Fusion of K-Pop and Mongolian Traditional Culture\")}\n            </p>\n          </div>\n        </div>\n\n        {/* 세 번째 이미지 - K-Beauty */}\n        <div className=\"relative w-full\">\n          <img \n            src=\"/attached_assets/news-p.v1.20250106.ef59f5881ad7444088f9e29fde8da7f4_P1_1755069907554.jpg\" \n            alt={t(\"K-뷰티 체험\", \"K-Beauty Experience\")}\n            className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-red-300\"\n            style={{\n              objectPosition: 'center center'\n            }}\n          />\n          <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n          <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n            <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n              {t(\"K-뷰티와 전통 메이크업의 특별한 체험 공간\", \"Special Experience Space for K-Beauty and Traditional Makeup\")}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* K-Culture 융합 전략 */}\n      <Card className=\"bg-gradient-to-br from-pink-50 to-red-100 border-2 border-pink-300\">\n        <CardContent className=\"p-8\">\n          <h2 className=\"text-3xl font-bold mb-6 text-gray-900\">\n            🎭 {t(\"K-Culture 융합 전략\", \"K-Culture Integration Strategy\")}\n          </h2>\n          <div className=\"bg-white border-2 border-pink-200 rounded-lg p-6 shadow-md mb-6\">\n            <div className=\"text-center mb-6\">\n              <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                {t(\"단순 유적지 관광을 넘어선 혁신적 문화 체험\", \"Innovative Cultural Experience Beyond Simple Heritage Tourism\")}\n              </h3>\n              <p className=\"text-gray-700 text-lg\">\n                {t(\"전통 몽골 문화와 현대 한류 문화의 만남\", \"Meeting of Traditional Mongolian Culture and Modern Hallyu Culture\")}\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {/* K-Pop 융합 */}\n              <div className=\"bg-gradient-to-r from-purple-100 to-pink-100 p-5 rounded-lg border border-purple-200\">\n                <div className=\"flex items-center mb-3\">\n                  <span className=\"text-2xl mr-3\">🎵</span>\n                  <h4 className=\"text-lg font-bold text-gray-900\">{t(\"K-Pop 콘텐츠 융합\", \"K-Pop Content Integration\")}</h4>\n                </div>\n                <ul className=\"space-y-2\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-pink-600 mr-2 mt-1\">♪</span>\n                    <span className=\"text-gray-800 text-sm\">{t(\"몽골 전통 음악과 K-Pop 퓨전 공연\", \"Fusion performances of Mongolian traditional music and K-Pop\")}</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-pink-600 mr-2 mt-1\">♪</span>\n                    <span className=\"text-gray-800 text-sm\">{t(\"K-Pop 아이돌과 몽골 전사 콜라보 쇼\", \"K-Pop idol and Mongolian warrior collaboration shows\")}</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-pink-600 mr-2 mt-1\">♪</span>\n                    <span className=\"text-gray-800 text-sm\">{t(\"한류 팬들을 위한 특별 이벤트\", \"Special events for Hallyu fans\")}</span>\n                  </li>\n                </ul>\n              </div>\n\n              {/* K-Culture 체험 */}\n              <div className=\"bg-gradient-to-r from-blue-100 to-indigo-100 p-5 rounded-lg border border-blue-200\">\n                <div className=\"flex items-center mb-3\">\n                  <span className=\"text-2xl mr-3\">🏛️</span>\n                  <h4 className=\"text-lg font-bold text-gray-900\">{t(\"K-Culture 체험 존\", \"K-Culture Experience Zone\")}</h4>\n                </div>\n                <ul className=\"space-y-2\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-blue-600 mr-2 mt-1\">✦</span>\n                    <span className=\"text-gray-800 text-sm\">{t(\"한복과 몽골 전통 의상 체험\", \"Hanbok and Mongolian traditional costume experience\")}</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-blue-600 mr-2 mt-1\">✦</span>\n                    <span className=\"text-gray-800 text-sm\">{t(\"K-뷰티 & 전통 메이크업 체험\", \"K-Beauty & traditional makeup experience\")}</span>\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-blue-600 mr-2 mt-1\">✦</span>\n                    <span className=\"text-gray-800 text-sm\">{t(\"한국 전통 차와 몽골 차 비교 시음\", \"Comparison tasting of Korean and Mongolian traditional teas\")}</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 차별화된 관광 경험 */}\n      <Card className=\"bg-gradient-to-br from-yellow-50 to-orange-100 border-2 border-yellow-300\">\n        <CardContent className=\"p-8\">\n          <h2 className=\"text-3xl font-bold mb-6 text-gray-900\">\n            ✨ {t(\"차별화된 관광 경험 창출\", \"Creating Differentiated Tourism Experience\")}\n          </h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n            {/* 기억에 남는 추억 */}\n            <div className=\"bg-white border-2 border-yellow-200 rounded-lg p-6 shadow-md text-center\">\n              <div className=\"w-16 h-16 bg-yellow-500 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <span className=\"text-white text-2xl\">📸</span>\n              </div>\n              <h3 className=\"text-lg font-bold text-gray-900 mb-3\">{t(\"인스타그래머블한 추억\", \"Instagram-worthy Memories\")}</h3>\n              <p className=\"text-gray-700 text-sm\">\n                {t(\"SNS에서 화제가 되는 독특한 콘텐츠로 입소문 마케팅 효과 극대화\", \"Maximize viral marketing with unique content that becomes a social media sensation\")}\n              </p>\n            </div>\n\n            {/* 문화 융합 */}\n            <div className=\"bg-white border-2 border-orange-200 rounded-lg p-6 shadow-md text-center\">\n              <div className=\"w-16 h-16 bg-orange-500 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <span className=\"text-white text-2xl\">🌍</span>\n              </div>\n              <h3 className=\"text-lg font-bold text-gray-900 mb-3\">{t(\"문화 융합의 혁신\", \"Innovation in Cultural Fusion\")}</h3>\n              <p className=\"text-gray-700 text-sm\">\n                {t(\"동서양 문화가 만나는 유일무이한 체험으로 관광객들에게 새로운 가치 제공\", \"Provide new value to tourists with unique experiences where Eastern and Western cultures meet\")}\n              </p>\n            </div>\n\n            {/* 재방문 유도 */}\n            <div className=\"bg-white border-2 border-red-200 rounded-lg p-6 shadow-md text-center\">\n              <div className=\"w-16 h-16 bg-red-500 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <span className=\"text-white text-2xl\">🔄</span>\n              </div>\n              <h3 className=\"text-lg font-bold text-gray-900 mb-3\">{t(\"지속적 재방문 유도\", \"Continuous Return Visits\")}</h3>\n              <p className=\"text-gray-700 text-sm\">\n                {t(\"계절별 테마 변경과 신규 콘텐츠 업데이트로 지속적인 관광객 유입 보장\", \"Ensure continuous tourist influx with seasonal theme changes and new content updates\")}\n              </p>\n            </div>\n          </div>\n\n          {/* 사업 확장 로드맵 */}\n          <div className=\"bg-gradient-to-r from-amber-100 to-yellow-100 p-6 rounded-lg border-2 border-amber-300\">\n            <h3 className=\"text-xl font-bold text-gray-900 mb-4 text-center\">\n              🚀 {t(\"단계별 사업 확장 로드맵\", \"Phased Business Expansion Roadmap\")}\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-red-500 rounded-full mx-auto mb-2 flex items-center justify-center\">\n                  <span className=\"text-white font-bold\">1</span>\n                </div>\n                <h4 className=\"font-bold text-gray-900 text-sm\">{t(\"1단계\", \"Phase 1\")}</h4>\n                <p className=\"text-gray-700 text-xs\">{t(\"마상 공연장 구축\", \"Build equestrian theater\")}</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-orange-500 rounded-full mx-auto mb-2 flex items-center justify-center\">\n                  <span className=\"text-white font-bold\">2</span>\n                </div>\n                <h4 className=\"font-bold text-gray-900 text-sm\">{t(\"2단계\", \"Phase 2\")}</h4>\n                <p className=\"text-gray-700 text-xs\">{t(\"K-Culture 융합관\", \"K-Culture fusion center\")}</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-yellow-500 rounded-full mx-auto mb-2 flex items-center justify-center\">\n                  <span className=\"text-white font-bold\">3</span>\n                </div>\n                <h4 className=\"font-bold text-gray-900 text-sm\">{t(\"3단계\", \"Phase 3\")}</h4>\n                <p className=\"text-gray-700 text-xs\">{t(\"체험형 테마파크\", \"Interactive theme park\")}</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-green-500 rounded-full mx-auto mb-2 flex items-center justify-center\">\n                  <span className=\"text-white font-bold\">4</span>\n                </div>\n                <h4 className=\"font-bold text-gray-900 text-sm\">{t(\"4단계\", \"Phase 4\")}</h4>\n                <p className=\"text-gray-700 text-xs\">{t(\"글로벌 브랜드화\", \"Global branding\")}</p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}","size_bytes":20285},"client/src/pages/home.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLanguage } from \"@/contexts/language-context\";\nimport { useEffect, useRef } from \"react\";\n\ninterface HomeProps {\n  onSectionChange: (section: string) => void;\n}\n\nexport default function Home({ onSectionChange }: HomeProps) {\n  const { t, language, toggleLanguage } = useLanguage();\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Simple floating stars - just points of different sizes\n    const stars: Array<{\n      x: number;\n      y: number;\n      vx: number;\n      vy: number;\n      size: number;\n      opacity: number;\n    }> = [];\n\n    const numStars = 200;\n\n    // Initialize stars\n    for (let i = 0; i < numStars; i++) {\n      stars.push({\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        vx: (Math.random() - 0.5) * 0.2, // Very slow movement\n        vy: (Math.random() - 0.5) * 0.2,\n        size: Math.random() * 2 + 1, // 1-3px dots\n        opacity: Math.random() * 0.8 + 0.2 // 0.2-1.0 opacity\n      });\n    }\n\n    let animationId: number;\n\n    const animate = () => {\n      // Clear canvas\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      // Update and draw stars\n      stars.forEach(star => {\n        // Update position\n        star.x += star.vx;\n        star.y += star.vy;\n\n        // Wrap around screen edges\n        if (star.x < 0) star.x = canvas.width;\n        if (star.x > canvas.width) star.x = 0;\n        if (star.y < 0) star.y = canvas.height;\n        if (star.y > canvas.height) star.y = 0;\n\n        // Draw simple circular dot\n        ctx.beginPath();\n        ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 255, 255, ${star.opacity})`;\n        ctx.fill();\n      });\n\n      animationId = requestAnimationFrame(animate);\n    };\n\n    // Initial fill\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n    animate();\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      cancelAnimationFrame(animationId);\n    };\n  }, []);\n\n  return (\n    <div className=\"relative min-h-screen text-white overflow-hidden\">\n      {/* Background Image - Mobile Optimized */}\n      <div \n        className=\"absolute inset-0 w-full h-full hidden md:block\"\n        style={{ \n          backgroundImage: `url('/riding-background.jpeg')`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center 10%', // Move image up\n          backgroundRepeat: 'no-repeat',\n          zIndex: 1\n        }}\n      />\n      \n      {/* Mobile Background Adjustment */}\n      <div \n        className=\"absolute inset-0 w-full h-full md:hidden\"\n        style={{ \n          backgroundImage: `url('/riding-background.jpeg')`,\n          backgroundSize: '150% auto', // Mobile: zoom in for better visibility\n          backgroundPosition: 'center 5%', // Focus on upper part of horse and rider\n          backgroundRepeat: 'no-repeat',\n          zIndex: 1\n        }}\n      />\n\n      {/* Subtle overlay for text readability only */}\n      <div className=\"absolute inset-0 bg-gradient-to-b from-black/40 via-transparent to-black/50 md:from-black/30 md:via-transparent md:to-black/40\" style={{ zIndex: 2 }} />\n\n      {/* Subtle Star Field Background */}\n      <canvas\n        ref={canvasRef}\n        className=\"absolute inset-0 w-full h-full opacity-20\"\n        style={{ zIndex: 3 }}\n      />\n\n      {/* Angkor Wat Silhouette - Very Subtle */}\n      <div \n        className=\"absolute bottom-0 left-0 right-0 h-40 opacity-10\"\n        style={{ \n          zIndex: 4,\n          background: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1200 200'%3E%3Cpath d='M0 200h1200V120c-50-20-100-40-150-50-30-10-60-15-90-15s-60 5-90 15c-50 10-100 30-150 50-50-20-100-40-150-50-30-10-60-15-90-15s-60 5-90 15c-50 10-100 30-150 50-50-20-100-40-150-50-30-10-60-15-90-15s-60 5-90 15C50 80 0 100 0 120V200z' fill='%23ffffff'/%3E%3C/svg%3E\") bottom center/cover no-repeat`,\n        }}\n      />\n\n      {/* Language Toggle - Desktop Only */}\n      <div className=\"absolute top-6 right-6 z-20 hidden md:block\">\n        <Button\n          variant=\"outline\"\n          onClick={toggleLanguage}\n          className=\"px-4 py-2 border border-white/30 bg-black/20 text-white hover:bg-white/10 backdrop-blur-sm\"\n        >\n          {language === 'ko' ? 'English' : '한국어'}\n        </Button>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"relative z-10 flex flex-col items-center justify-center min-h-screen px-4 md:px-6 text-center\">\n        {/* Logo */}\n        <div className=\"w-24 h-24 md:w-32 md:h-32 rounded-full mb-8 md:mb-12 overflow-hidden shadow-2xl border-4 border-white/20\">\n          <img \n            src=\"/attached_assets/20250313_172013_1754638755741.png\" \n            alt=\"Mongolian Equestrian Show\"\n            className=\"w-full h-full object-cover\"\n          />\n        </div>\n\n        {/* Title */}\n        <h1 className=\"text-4xl md:text-6xl lg:text-7xl font-bold mb-6 md:mb-8 text-white px-2 drop-shadow-[2px_2px_4px_rgba(0,0,0,0.8)]\">\n          {t(\"몽골 마상곡예\", \"Mongolian Equestrian\")}\n        </h1>\n        \n        <h2 className=\"text-xl md:text-2xl lg:text-3xl font-light mb-6 md:mb-8 text-slate-100 drop-shadow-[1px_1px_3px_rgba(0,0,0,0.7)]\">\n          {t(\"제안서\", \"Investment Proposal\")}\n        </h2>\n\n        {/* Subtitle */}\n        <p className=\"text-lg md:text-xl lg:text-2xl text-slate-200 max-w-4xl mx-auto mb-8 md:mb-12 leading-relaxed px-4 drop-shadow-[1px_1px_2px_rgba(0,0,0,0.7)]\">\n          {t(\"캄보디아 시엠립에서 펼쳐지는 특별한 기회를 소개합니다\", \n             \"Discover unique investment opportunities in Siem Reap, Cambodia\")}\n        </p>\n\n        {/* Key Highlights */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 md:gap-8 max-w-6xl mx-auto mb-8 md:mb-12 px-4\">\n          <div className=\"text-center group\">\n            <div className=\"w-16 h-16 md:w-20 md:h-20 bg-gradient-to-br from-amber-500 to-orange-500 rounded-full mx-auto mb-3 md:mb-4 flex items-center justify-center shadow-2xl group-hover:scale-110 transition-transform duration-300\">\n              <span className=\"text-slate-900 text-2xl md:text-3xl font-bold\">🏆</span>\n            </div>\n            <h3 className=\"font-semibold text-white text-sm md:text-lg mb-1 md:mb-2 drop-shadow-[1px_1px_2px_rgba(0,0,0,0.8)]\">{t(\"시장 독점\", \"Market Monopoly\")}</h3>\n            <p className=\"text-slate-200 text-xs md:text-base drop-shadow-[1px_1px_2px_rgba(0,0,0,0.7)]\">{t(\"동남아 유일\", \"Southeast Asia's Only\")}</p>\n          </div>\n          <div className=\"text-center group\">\n            <div className=\"w-16 h-16 md:w-20 md:h-20 bg-gradient-to-br from-emerald-500 to-teal-500 rounded-full mx-auto mb-3 md:mb-4 flex items-center justify-center shadow-2xl group-hover:scale-110 transition-transform duration-300\">\n              <span className=\"text-white text-2xl md:text-3xl font-bold\">💰</span>\n            </div>\n            <h3 className=\"font-semibold text-white text-sm md:text-lg mb-1 md:mb-2 drop-shadow-[1px_1px_2px_rgba(0,0,0,0.8)]\">{t(\"높은 수익성\", \"High Profitability\")}</h3>\n            <p className=\"text-slate-200 text-xs md:text-base drop-shadow-[1px_1px_2px_rgba(0,0,0,0.7)]\">ROI 67%+</p>\n          </div>\n          <div className=\"text-center group\">\n            <div className=\"w-16 h-16 md:w-20 md:h-20 bg-gradient-to-br from-blue-500 to-purple-500 rounded-full mx-auto mb-3 md:mb-4 flex items-center justify-center shadow-2xl group-hover:scale-110 transition-transform duration-300\">\n              <span className=\"text-white text-2xl md:text-3xl font-bold\">📍</span>\n            </div>\n            <h3 className=\"font-semibold text-white text-sm md:text-lg mb-1 md:mb-2 drop-shadow-[1px_1px_2px_rgba(0,0,0,0.8)]\">{t(\"최적 입지\", \"Optimal Location\")}</h3>\n            <p className=\"text-slate-200 text-xs md:text-base drop-shadow-[1px_1px_2px_rgba(0,0,0,0.7)]\">{t(\"앙코르와트 최대중심지\", \"Near Angkor Wat\")}</p>\n          </div>\n          <div className=\"text-center group\">\n            <div className=\"w-16 h-16 md:w-20 md:h-20 bg-gradient-to-br from-violet-500 to-pink-500 rounded-full mx-auto mb-3 md:mb-4 flex items-center justify-center shadow-2xl group-hover:scale-110 transition-transform duration-300\">\n              <span className=\"text-white text-2xl md:text-3xl font-bold\">🚀</span>\n            </div>\n            <h3 className=\"font-semibold text-white text-sm md:text-lg mb-1 md:mb-2 drop-shadow-[1px_1px_2px_rgba(0,0,0,0.8)]\">{t(\"확장 가능성\", \"Expansion Potential\")}</h3>\n            <p className=\"text-slate-200 text-xs md:text-base drop-shadow-[1px_1px_2px_rgba(0,0,0,0.7)]\">{t(\"시엠립 관광객\", \"Aall Tourist\")}</p>\n          </div>\n        </div>\n\n        {/* Navigation Guide */}\n        <div className=\"text-white text-base md:text-lg text-center px-4 drop-shadow-[1px_1px_2px_rgba(0,0,0,0.8)]\">\n          {t(\"☰ 메뉴를 통해 상세 내용을 확인하세요\", \"☰ Use menu to explore detailed sections\")}\n        </div>\n      </div>\n\n      {/* Navigation Guide and Contact */}\n      <div className=\"relative z-10 px-4 md:px-6 pb-12 md:pb-16\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Navigation Guide */}\n          <Card className=\"bg-black/60 border-white/30 backdrop-blur-md mb-6 md:mb-8\">\n            <CardContent className=\"p-4 md:p-8\">\n              <h2 className=\"text-xl md:text-2xl font-bold text-white mb-4 md:mb-6 text-center\">\n                📋 {t(\"사업 제안서 구성\", \"Business Proposal Structure\")}\n              </h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6\">\n                <button \n                  onClick={() => {\n                    onSectionChange(\"overview\");\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                  }}\n                  className=\"bg-white/10 hover:bg-white/20 rounded-lg p-4 md:p-6 backdrop-blur-sm transition-all duration-200 text-left cursor-pointer border border-transparent hover:border-white/30\"\n                >\n                  <h3 className=\"font-semibold text-white mb-2 md:mb-3 text-sm md:text-base\">📊 {t(\"사업 개요\", \"Business Overview\")}</h3>\n                  <p className=\"text-gray-300 text-xs md:text-sm\">\n                    {t(\"프로젝트 개요, 공연 내용, 핵심 지표 및 경쟁 우위 분석\", \n                       \"Project overview, performance content, key metrics and competitive advantages\")}\n                  </p>\n                </button>\n                <button \n                  onClick={() => {\n                    onSectionChange(\"investment\");\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                  }}\n                  className=\"bg-white/10 hover:bg-white/20 rounded-lg p-4 md:p-6 backdrop-blur-sm transition-all duration-200 text-left cursor-pointer border border-transparent hover:border-white/30\"\n                >\n                  <h3 className=\"font-semibold text-white mb-2 md:mb-3 text-sm md:text-base\">💎 {t(\"투자 포인트\", \"Investment Points\")}</h3>\n                  <p className=\"text-gray-300 text-xs md:text-sm\">\n                    {t(\"독점 시장 기회, 안정적 수익 구조, 높은 수익성 분석\", \n                       \"Exclusive market opportunity, stable revenue structure, high profitability analysis\")}\n                  </p>\n                </button>\n                <button \n                  onClick={() => {\n                    onSectionChange(\"revenue\");\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                  }}\n                  className=\"bg-white/10 hover:bg-white/20 rounded-lg p-4 md:p-6 backdrop-blur-sm transition-all duration-200 text-left cursor-pointer border border-transparent hover:border-white/30\"\n                >\n                  <h3 className=\"font-semibold text-white mb-2 md:mb-3 text-sm md:text-base\">🎟️ {t(\"수익 모델\", \"Revenue Model\")}</h3>\n                  <p className=\"text-gray-300 text-xs md:text-sm\">\n                    {t(\"티켓 판매 분석, 실시간 계산기, 상세한 수익 구조\", \n                       \"Ticket sales analysis, real-time calculator, detailed revenue structure\")}\n                  </p>\n                </button>\n                <button \n                  onClick={() => {\n                    onSectionChange(\"operations\");\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                  }}\n                  className=\"bg-white/10 hover:bg-white/20 rounded-lg p-4 md:p-6 backdrop-blur-sm transition-all duration-200 text-left cursor-pointer border border-transparent hover:border-white/30\"\n                >\n                  <h3 className=\"font-semibold text-white mb-2 md:mb-3 text-sm md:text-base\">🛠️ {t(\"운영비 전망\", \"Operations Forecast\")}</h3>\n                  <p className=\"text-gray-300 text-xs md:text-sm\">\n                    {t(\"상세 운영비 분석, 5년 수익 전망, 비용 최적화 전략\", \n                       \"Detailed operating cost analysis, 5-year revenue forecast, cost optimization strategies\")}\n                  </p>\n                </button>\n                <button \n                  onClick={() => {\n                    onSectionChange(\"risk\");\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                  }}\n                  className=\"bg-white/10 hover:bg-white/20 rounded-lg p-4 md:p-6 backdrop-blur-sm transition-all duration-200 text-left cursor-pointer border border-transparent hover:border-white/30 shadow-lg\"\n                >\n                  <h3 className=\"font-semibold text-white mb-2 md:mb-3 text-sm md:text-base drop-shadow-[2px_2px_4px_rgba(0,0,0,0.8)]\">🛡️ {t(\"리스크 관리\", \"Risk Management\")}</h3>\n                  <p className=\"text-gray-200 text-xs md:text-sm drop-shadow-[1px_1px_2px_rgba(0,0,0,0.8)]\">\n                    {t(\"위험 평가 매트릭스, 대응 전략, 보험 및 보장 체계\", \n                       \"Risk assessment matrix, response strategies, insurance and coverage systems\")}\n                  </p>\n                </button>\n                <button \n                  onClick={() => {\n                    onSectionChange(\"marketing\");\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                  }}\n                  className=\"bg-white/10 hover:bg-white/20 rounded-lg p-4 md:p-6 backdrop-blur-sm transition-all duration-200 text-left cursor-pointer border border-transparent hover:border-white/30\"\n                >\n                  <h3 className=\"font-semibold text-white mb-2 md:mb-3 text-sm md:text-base\">📢 {t(\"마케팅 전략\", \"Marketing Strategy\")}</h3>\n                  <p className=\"text-gray-300 text-xs md:text-sm\">\n                    {t(\"다채널 마케팅, 타겟 고객 분석, 브랜딩 및 성과 지표\", \n                       \"Multi-channel marketing, target customer analysis, branding and performance metrics\")}\n                  </p>\n                </button>\n                <button \n                  onClick={() => {\n                    onSectionChange(\"initial-investment\");\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                  }}\n                  className=\"bg-white/10 hover:bg-white/20 rounded-lg p-4 md:p-6 backdrop-blur-sm transition-all duration-200 text-left cursor-pointer border border-transparent hover:border-white/30\"\n                >\n                  <h3 className=\"font-semibold text-white mb-2 md:mb-3 text-sm md:text-base\">💰 {t(\"초기 투자\", \"Initial Investment\")}</h3>\n                  <p className=\"text-gray-300 text-xs md:text-sm\">\n                    {t(\"상세한 초기 투자 비용 분석 및 항목별 예산 계획\", \n                       \"Detailed initial investment cost analysis and budget planning by category\")}\n                  </p>\n                </button>\n                <button \n                  onClick={() => {\n                    onSectionChange(\"vision\");\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                  }}\n                  className=\"bg-white/10 hover:bg-white/20 rounded-lg p-4 md:p-6 backdrop-blur-sm transition-all duration-200 text-left cursor-pointer border border-transparent hover:border-white/30\"\n                >\n                  <h3 className=\"font-semibold text-white mb-2 md:mb-3 text-sm md:text-base\">🚀 {t(\"사업 비전\", \"Business Vision\")}</h3>\n                  <p className=\"text-gray-300 text-xs md:text-sm\">\n                    {t(\"장기 비전, 확장 계획 및 미래 성장 전략\", \n                       \"Long-term vision, expansion plans and future growth strategies\")}\n                  </p>\n                </button>\n                <button \n                  onClick={() => {\n                    onSectionChange(\"location\");\n                    window.scrollTo({ top: 0, behavior: 'smooth' });\n                  }}\n                  className=\"bg-white/10 hover:bg-white/20 rounded-lg p-4 md:p-6 backdrop-blur-sm transition-all duration-200 text-left cursor-pointer border border-transparent hover:border-white/30\"\n                >\n                  <h3 className=\"font-semibold text-white mb-2 md:mb-3 text-sm md:text-base\">📍 {t(\"시엠립 위치\", \"Siem Reap Location\")}</h3>\n                  <p className=\"text-gray-300 text-xs md:text-sm\">\n                    {t(\"최적의 입지 조건, 접근성 및 관광 인프라 분석\", \n                       \"Optimal location conditions, accessibility and tourism infrastructure analysis\")}\n                  </p>\n                </button>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Contact Information */}\n          <Card className=\"bg-black/40 border-mongolian-500/50 backdrop-blur-sm\">\n            <CardContent className=\"p-4 md:p-8\">\n              <div className=\"text-center\">\n                <h2 className=\"text-xl md:text-2xl font-bold text-white mb-4 md:mb-6\">\n                  📞 {t(\"문의\", \"Investment Inquiry\")}\n                </h2>\n                <p className=\"text-base md:text-lg text-gray-300 mb-6 md:mb-8 px-2\">\n                  {t(\"더 자세한 정보나 문의를 원하시면 언제든 연락주세요.\", \n                     \"Contact us anytime for more detailed information or investment consultation.\")}\n                </p>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 md:gap-6 max-w-2xl mx-auto\">\n                  <button \n                    onClick={() => window.open('mailto:cambodia.bae@gmail.com', '_blank')}\n                    className=\"text-center bg-white/10 hover:bg-white/20 rounded-lg p-4 transition-all duration-200 cursor-pointer border border-transparent hover:border-white/30\"\n                  >\n                    <div className=\"w-10 h-10 md:w-12 md:h-12 bg-blue-500 rounded-full mx-auto mb-2 md:mb-3 flex items-center justify-center\">\n                      <span className=\"text-white text-base md:text-lg\">📧</span>\n                    </div>\n                    <h3 className=\"font-semibold text-white text-sm md:text-base\">{t(\"이메일\", \"Email\")}</h3>\n                    <p className=\"text-xs md:text-sm text-gray-300\">cambodia.bae@gmail.com</p>\n                  </button>\n                  <button \n                    onClick={() => window.open('tel:+855095779873', '_self')}\n                    className=\"text-center bg-white/10 hover:bg-white/20 rounded-lg p-4 transition-all duration-200 cursor-pointer border border-transparent hover:border-white/30\"\n                  >\n                    <div className=\"w-10 h-10 md:w-12 md:h-12 bg-green-500 rounded-full mx-auto mb-2 md:mb-3 flex items-center justify-center\">\n                      <span className=\"text-white text-base md:text-lg\">📱</span>\n                    </div>\n                    <h3 className=\"font-semibold text-white text-sm md:text-base\">{t(\"전화\", \"Phone\")}</h3>\n                    <p className=\"text-xs md:text-sm text-gray-300\">+855 095 779 873</p>\n                  </button>\n                  <button \n                    onClick={() => {\n                      onSectionChange(\"location\");\n                      // 페이지 이동 후 구글 맵 섹션으로 스크롤\n                      setTimeout(() => {\n                        const mapElement = document.getElementById('google-map-section');\n                        if (mapElement) {\n                          mapElement.scrollIntoView({ behavior: 'smooth' });\n                        }\n                      }, 500);\n                    }}\n                    className=\"text-center bg-white/10 hover:bg-white/20 rounded-lg p-4 transition-all duration-200 cursor-pointer border border-transparent hover:border-white/30\"\n                  >\n                    <div className=\"w-10 h-10 md:w-12 md:h-12 bg-orange-500 rounded-full mx-auto mb-2 md:mb-3 flex items-center justify-center\">\n                      <span className=\"text-white text-base md:text-lg\">📍</span>\n                    </div>\n                    <h3 className=\"font-semibold text-white text-sm md:text-base\">{t(\"위치\", \"Location\")}</h3>\n                    <p className=\"text-xs md:text-sm text-gray-300\">{t(\"시엠립, 캄보디아\", \"Siem Reap, Cambodia\")}</p>\n                  </button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":22067},"client/src/pages/initial-investment-page.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function InitialInvestmentPage() {\n  const { t } = useLanguage();\n\n  return (\n    <div className=\"space-y-6 md:space-y-8 p-4 md:p-8\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl md:text-4xl font-bold text-yellow-600 mb-3 md:mb-4\">\n          💰 {t(\"초기 투자내역\", \"Initial Investment Breakdown\")}\n        </h1>\n        <p className=\"text-base md:text-xl text-yellow-600 max-w-3xl mx-auto px-2\">\n          {t(\"몽골 마상곡예 공연장 설립을 위한 상세한 초기 투자 비용 분석\", \n             \"Detailed initial investment cost analysis for establishing Mongolian equestrian performance venue\")}\n        </p>\n      </div>\n\n      {/* 투자 요약 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <div className=\"text-center mb-6 md:mb-8\">\n            <div className=\"inline-block bg-green-100 text-green-800 px-4 md:px-6 py-2 md:py-3 rounded-full font-bold text-xl md:text-2xl mb-3 md:mb-4 shadow-md\">\n              {t(\"총 투자금: $780,000\", \"Total Investment: $780,000\")}\n            </div>\n            <p className=\"text-base md:text-lg text-gray-700 px-2\">\n              {t(\"예비비용 포함, 완전한 시설 구축을 위한 투자액\", \"Including contingency costs, investment for complete facility construction\")}\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* First Feature Image - Mongolian Arena Design - Mobile Optimized */}\n      <div className=\"relative w-full mb-4 md:mb-6\">\n        <img \n          src=\"/attached_assets/DALL·E 2025-03-13 09.45.06 - A 3D-rendered outdoor Mongolian equestrian dressage performance arena. The arena includes a seating area for 500 spectators, a parking lot with space _1755064974276.webp\" \n          alt={t(\"몽골 마상곡예 공연장 3D 설계도\", \"Mongolian Equestrian Performance Arena 3D Design\")}\n          className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-gray-300\"\n          style={{\n            objectPosition: 'center center'\n          }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent rounded-lg\"></div>\n        {/* Image Caption */}\n        <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n          <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n            {t(\"몽골 마상곡예 공연장 3D 설계 - 500석 관람석과 주차장 완비\", \"Mongolian Equestrian Arena 3D Design - 500 Seats and Complete Parking\")}\n          </p>\n        </div>\n      </div>\n\n      {/* 상세 투자내역 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <div className=\"text-center mb-6 md:mb-8\">\n            <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-3 md:mb-4\">\n              📋 {t(\"상세 투자 항목\", \"Detailed Investment Items\")}\n            </h2>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-xl p-6 shadow-lg border-2 border-gray-200\">\n            {/* Desktop Table */}\n            <div className=\"hidden md:block overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"bg-gradient-to-r from-green-400 to-green-500 text-white\">\n                    <th className=\"px-6 py-4 text-left font-bold text-lg rounded-tl-lg\">\n                      {t(\"항목\", \"Category\")}\n                    </th>\n                    <th className=\"px-6 py-4 text-center font-bold text-lg\">\n                      {t(\"비용 (USD)\", \"Cost (USD)\")}\n                    </th>\n                    <th className=\"px-6 py-4 text-left font-bold text-lg rounded-tr-lg\">\n                      {t(\"비고\", \"Notes\")}\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-200\">\n                  <tr className=\"hover:bg-green-50 transition-colors\">\n                    <td className=\"px-6 py-4 font-semibold text-gray-800\">\n                      {t(\"토지 임대 보증금 (6개월)\", \"Land Rental Deposit (6 months)\")}\n                    </td>\n                    <td className=\"px-6 py-4 text-center font-bold text-lg text-green-600\">\n                      $30,000\n                    </td>\n                    <td className=\"px-6 py-4 text-gray-600\">\n                      {t(\"월 $5,000 × 6개월(기본), 시설 증설가능,임대료 상황 조정필요\", \"Monthly $5,000 × 6 months (basic), rental adjustment needed for facility expansion\")}\n                    </td>\n                  </tr>\n                  <tr className=\"hover:bg-green-50 transition-colors bg-gray-50\">\n                    <td className=\"px-6 py-4 font-semibold text-gray-800\">\n                      {t(\"마장마술 경기장 조성\", \"Dressage Arena Construction\")}\n                    </td>\n                    <td className=\"px-6 py-4 text-center font-bold text-lg text-green-600\">\n                      $140,000\n                    </td>\n                    <td className=\"px-6 py-4 text-gray-600\">\n                      {t(\"바닥 정리, 펜스 포함\", \"Floor preparation, fencing included\")}\n                    </td>\n                  </tr>\n                  <tr className=\"hover:bg-green-50 transition-colors\">\n                    <td className=\"px-6 py-4 font-semibold text-gray-800\">\n                      {t(\"관람석 (1,000석, 철제 구조물 기반)\", \"Grandstand (1,000 seats, steel structure base)\")}\n                    </td>\n                    <td className=\"px-6 py-4 text-center font-bold text-lg text-green-600\">\n                      $200,000\n                    </td>\n                    <td className=\"px-6 py-4 text-gray-600\">\n                      {t(\"순각 각종 등 고려/ 좌석 팬 시설상가 고려, 관람객 소피\", \"Various considerations for seating/fan facility considerations, audience comfort\")}\n                    </td>\n                  </tr>\n                  <tr className=\"hover:bg-green-50 transition-colors bg-gray-50\">\n                    <td className=\"px-6 py-4 font-semibold text-gray-800\">\n                      {t(\"마구간 및 말 관리 시설\", \"Stables and Horse Management Facilities\")}\n                    </td>\n                    <td className=\"px-6 py-4 text-center font-bold text-lg text-green-600\">\n                      $100,000\n                    </td>\n                    <td className=\"px-6 py-4 text-gray-600\">\n                      {t(\"10~20마리 수용 가능\", \"Capacity for 10-20 horses\")}\n                    </td>\n                  </tr>\n                  <tr className=\"hover:bg-green-50 transition-colors\">\n                    <td className=\"px-6 py-4 font-semibold text-gray-800\">\n                      {t(\"조명 및 음향 시스템\", \"Lighting and Sound System\")}\n                    </td>\n                    <td className=\"px-6 py-4 text-center font-bold text-lg text-green-600\">\n                      $50,000\n                    </td>\n                    <td className=\"px-6 py-4 text-gray-600\">\n                      {t(\"공연 필수 장비\", \"Essential performance equipment\")}\n                    </td>\n                  </tr>\n                  <tr className=\"hover:bg-green-50 transition-colors bg-gray-50\">\n                    <td className=\"px-6 py-4 font-semibold text-gray-800\">\n                      {t(\"기본 인프라 (전기, 수도, 배수 등)\", \"Basic Infrastructure (electricity, water, drainage, etc.)\")}\n                    </td>\n                    <td className=\"px-6 py-4 text-center font-bold text-lg text-green-600\">\n                      $50,000\n                    </td>\n                    <td className=\"px-6 py-4 text-gray-600\">\n                      {t(\"필수 기반 시설\", \"Essential basic facilities\")}\n                    </td>\n                  </tr>\n                  <tr className=\"hover:bg-green-50 transition-colors\">\n                    <td className=\"px-6 py-4 font-semibold text-gray-800\">\n                      {t(\"주차장 및 편의시설 (화장실, 매점 등)\", \"Parking and Convenience Facilities (restrooms, shops, etc.)\")}\n                    </td>\n                    <td className=\"px-6 py-4 text-center font-bold text-lg text-green-600\">\n                      $80,000\n                    </td>\n                    <td className=\"px-6 py-4 text-gray-600\">\n                      {t(\"기본 시설\", \"Basic facilities\")}\n                    </td>\n                  </tr>\n                  <tr className=\"hover:bg-green-50 transition-colors bg-gray-50\">\n                    <td className=\"px-6 py-4 font-semibold text-gray-800\">\n                      {t(\"운영 준비 비용 (허가, 인건비, 마케팅 등)\", \"Operational Preparation Costs (permits, personnel, marketing, etc.)\")}\n                    </td>\n                    <td className=\"px-6 py-4 text-center font-bold text-lg text-green-600\">\n                      $80,000\n                    </td>\n                    <td className=\"px-6 py-4 text-gray-600\">\n                      {t(\"직원 채용, 홍보\", \"Staff recruitment, promotion\")}\n                    </td>\n                  </tr>\n                  <tr className=\"hover:bg-green-50 transition-colors\">\n                    <td className=\"px-6 py-4 font-semibold text-gray-800\">\n                      {t(\"예비비 (총 투자금의 5%)\", \"Contingency (5% of total investment)\")}\n                    </td>\n                    <td className=\"px-6 py-4 text-center font-bold text-lg text-green-600\">\n                      $50,000\n                    </td>\n                    <td className=\"px-6 py-4 text-gray-600\">\n                      {t(\"예상 외 추가 비용 대비\", \"Preparation for unexpected additional costs\")}\n                    </td>\n                  </tr>\n                  <tr className=\"bg-gradient-to-r from-green-500 to-green-600 text-white font-bold\">\n                    <td className=\"px-6 py-4 text-lg rounded-bl-lg\">\n                      {t(\"총 투자금\", \"Total Investment\")}\n                    </td>\n                    <td className=\"px-6 py-4 text-center text-2xl\">\n                      $780,000\n                    </td>\n                    <td className=\"px-6 py-4 rounded-br-lg\">\n                      {t(\"완전한 시설 구축 비용\", \"Complete facility construction cost\")}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            \n            {/* Mobile Card Layout */}\n            <div className=\"md:hidden space-y-4\">\n              {[\n                {\n                  title: t(\"토지 임대 보증금 (6개월)\", \"Land Rental Deposit (6 months)\"),\n                  amount: \"$30,000\",\n                  note: t(\"월 $5,000 × 6개월(기본)\", \"Monthly $5,000 × 6 months (basic)\")\n                },\n                {\n                  title: t(\"마장마술 경기장 조성\", \"Dressage Arena Construction\"),\n                  amount: \"$140,000\",\n                  note: t(\"바닥 정리, 펜스 포함\", \"Floor preparation, fencing included\")\n                },\n                {\n                  title: t(\"관람석 (1,000석)\", \"Grandstand (1,000 seats)\"),\n                  amount: \"$200,000\",\n                  note: t(\"철제 구조물 기반\", \"Steel structure base\")\n                },\n                {\n                  title: t(\"마구간 및 말 관리 시설\", \"Stables and Horse Management Facilities\"),\n                  amount: \"$100,000\",\n                  note: t(\"10~20마리 수용 가능\", \"Capacity for 10-20 horses\")\n                },\n                {\n                  title: t(\"조명 및 음향 시스템\", \"Lighting and Sound System\"),\n                  amount: \"$50,000\",\n                  note: t(\"공연 필수 장비\", \"Essential performance equipment\")\n                },\n                {\n                  title: t(\"기본 인프라\", \"Basic Infrastructure\"),\n                  amount: \"$50,000\",\n                  note: t(\"전기, 수도, 배수 등\", \"Electricity, water, drainage, etc.\")\n                },\n                {\n                  title: t(\"주차장 및 편의시설\", \"Parking and Convenience Facilities\"),\n                  amount: \"$80,000\",\n                  note: t(\"화장실, 매점 등\", \"Restrooms, shops, etc.\")\n                },\n                {\n                  title: t(\"운영 준비 비용\", \"Operational Preparation Costs\"),\n                  amount: \"$80,000\",\n                  note: t(\"허가, 인건비, 마케팅 등\", \"Permits, personnel, marketing, etc.\")\n                },\n                {\n                  title: t(\"예비비 (5%)\", \"Contingency (5%)\"),\n                  amount: \"$50,000\",\n                  note: t(\"예상 외 추가 비용 대비\", \"For unexpected additional costs\")\n                }\n              ].map((item, index) => (\n                <div key={index} className=\"bg-gradient-to-r from-green-50 to-emerald-50 rounded-lg p-4 border border-green-200 shadow-sm\">\n                  <div className=\"text-center\">\n                    <h3 className=\"font-semibold text-gray-800 text-base mb-2\">\n                      {item.title}\n                    </h3>\n                    <div className=\"text-2xl font-bold text-green-600 mb-2\">\n                      {item.amount}\n                    </div>\n                    <p className=\"text-sm text-gray-600\">\n                      {item.note}\n                    </p>\n                  </div>\n                </div>\n              ))}\n              \n              {/* Mobile Total */}\n              <div className=\"bg-gradient-to-r from-green-500 to-green-600 rounded-lg p-6 text-white shadow-lg\">\n                <div className=\"text-center\">\n                  <h3 className=\"font-bold text-xl mb-3\">\n                    {t(\"총 투자금\", \"Total Investment\")}\n                  </h3>\n                  <div className=\"text-3xl font-bold mb-2\">\n                    $780,000\n                  </div>\n                  <p className=\"text-green-100\">\n                    {t(\"완전한 시설 구축 비용\", \"Complete facility construction cost\")}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Second Feature Image - Angkor Wat Location - Mobile Optimized */}\n      <div className=\"relative w-full mb-4 md:mb-6\">\n        <img \n          src=\"/attached_assets/7e0e8ab8-04e2-4677-b36b-89b6109b880f_1755065052157.webp\" \n          alt={t(\"앙코르와트 인근 투자 지역\", \"Investment Area Near Angkor Wat\")}\n          className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-gray-300\"\n          style={{\n            objectPosition: 'center center'\n          }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n        {/* Image Caption */}\n        <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n          <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n            {t(\"앙코르와트 인근 - 세계적 관광 명소와의 최적 입지\", \"Near Angkor Wat - Optimal Location with World-Class Tourist Attraction\")}\n          </p>\n        </div>\n      </div>\n\n      {/* 투자 혜택 요약 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900 text-center\">\n            🎯 {t(\"투자 혜택 요약\", \"Investment Benefits Summary\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"bg-green-50 rounded-lg p-6 text-center shadow-md border border-green-200\">\n              <div className=\"w-16 h-16 bg-green-500 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <span className=\"text-white text-2xl font-bold\">⚡</span>\n              </div>\n              <h3 className=\"font-bold text-lg text-gray-900 mb-2\">\n                {t(\"빠른 회수\", \"Quick Recovery\")}\n              </h3>\n              <p className=\"text-gray-600\">\n                {t(\"투자금 회수 예상 기간: 1.5년\", \"Expected investment recovery period: 1.5 years\")}\n              </p>\n            </div>\n            <div className=\"bg-orange-50 rounded-lg p-6 text-center shadow-md border border-orange-200\">\n              <div className=\"w-16 h-16 bg-orange-500 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <span className=\"text-white text-2xl font-bold\">📈</span>\n              </div>\n              <h3 className=\"font-bold text-lg text-gray-900 mb-2\">\n                {t(\"높은 수익률\", \"High Returns\")}\n              </h3>\n              <p className=\"text-gray-600\">\n                {t(\"연간 ROI: 67% ~ 100%\", \"Annual ROI: 67% ~ 100%\")}\n              </p>\n            </div>\n            <div className=\"bg-blue-50 rounded-lg p-6 text-center shadow-md border border-blue-200\">\n              <div className=\"w-16 h-16 bg-blue-500 rounded-full mx-auto mb-4 flex items-center justify-center\">\n                <span className=\"text-white text-2xl font-bold\">🛡️</span>\n              </div>\n              <h3 className=\"font-bold text-lg text-gray-900 mb-2\">\n                {t(\"안정성\", \"Stability\")}\n              </h3>\n              <p className=\"text-gray-600\">\n                {t(\"독점 시장과 정부 지원\", \"Monopoly market and government support\")}\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 투자 단계별 자금 활용 계획 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            📊 {t(\"투자 단계별 자금 활용 계획\", \"Phased Investment Fund Utilization Plan\")}\n          </h2>\n          <div className=\"space-y-6\">\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"w-12 h-12 bg-green-500 rounded-full flex items-center justify-center text-white font-bold text-lg flex-shrink-0\">1</div>\n              <div className=\"flex-1\">\n                <h3 className=\"font-semibold text-lg text-gray-900 mb-2\">{t(\"1단계: 토지 확보 및 기반 시설\", \"Phase 1: Land Acquisition & Infrastructure\")}</h3>\n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <p className=\"text-gray-700 mb-2\"><strong>{t(\"투자금\", \"Investment\")}:</strong> $220,000 (28%)</p>\n                  <ul className=\"text-gray-600 space-y-1\">\n                    <li>• {t(\"토지 임대 보증금: $30,000\", \"Land rental deposit: $30,000\")}</li>\n                    <li>• {t(\"마장마술 경기장 조성: $140,000\", \"Dressage arena construction: $140,000\")}</li>\n                    <li>• {t(\"기본 인프라: $50,000\", \"Basic infrastructure: $50,000\")}</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"w-12 h-12 bg-orange-500 rounded-full flex items-center justify-center text-white font-bold text-lg flex-shrink-0\">2</div>\n              <div className=\"flex-1\">\n                <h3 className=\"font-semibold text-lg text-gray-900 mb-2\">{t(\"2단계: 관람 시설 및 공연 설비\", \"Phase 2: Viewing Facilities & Performance Equipment\")}</h3>\n                <div className=\"bg-orange-50 p-4 rounded-lg\">\n                  <p className=\"text-gray-700 mb-2\"><strong>{t(\"투자금\", \"Investment\")}:</strong> $350,000 (45%)</p>\n                  <ul className=\"text-gray-600 space-y-1\">\n                    <li>• {t(\"관람석 (1,000석): $200,000\", \"Grandstand (1,000 seats): $200,000\")}</li>\n                    <li>• {t(\"마구간 및 말 관리 시설: $100,000\", \"Stables & horse facilities: $100,000\")}</li>\n                    <li>• {t(\"조명 및 음향 시스템: $50,000\", \"Lighting & sound system: $50,000\")}</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-4\">\n              <div className=\"w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold text-lg flex-shrink-0\">3</div>\n              <div className=\"flex-1\">\n                <h3 className=\"font-semibold text-lg text-gray-900 mb-2\">{t(\"3단계: 편의시설 및 운영 준비\", \"Phase 3: Convenience Facilities & Operations Preparation\")}</h3>\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <p className=\"text-gray-700 mb-2\"><strong>{t(\"투자금\", \"Investment\")}:</strong> $210,000 (27%)</p>\n                  <ul className=\"text-gray-600 space-y-1\">\n                    <li>• {t(\"주차장 및 편의시설: $80,000\", \"Parking & convenience facilities: $80,000\")}</li>\n                    <li>• {t(\"운영 준비 비용: $80,000\", \"Operational preparation: $80,000\")}</li>\n                    <li>• {t(\"예비비: $50,000\", \"Contingency: $50,000\")}</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":21604},"client/src/pages/investment-points-page.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function InvestmentPointsPage() {\n  const { t } = useLanguage();\n\n  const investmentHighlights = [\n    {\n      icon: \"🎯\",\n      title: t(\"독점적 시장 기회\", \"Exclusive Market Opportunity\"),\n      description: t(\"동남아시아 유일의 몽골 마상곡예 공연으로 경쟁자 없는 블루오션 시장\", \"Blue ocean market with no competitors as the only Mongolian equestrian show in Southeast Asia\"),\n      details: [\n        {\n          subtitle: t(\"시장 독점성\", \"Market Monopoly\"),\n          points: [\n            t(\"동남아시아 전체에서 유일무이한 콘텐츠\", \"Unique content across all of Southeast Asia\"),\n            t(\"타 관광지와의 차별화된 경험 제공\", \"Differentiated experience from other tourist attractions\"),\n            t(\"선점 효과로 인한 브랜드 인지도 확보\", \"Brand recognition secured through first-mover advantage\")\n          ]\n        },\n        {\n          subtitle: t(\"정부 지원\", \"Government Support\"),\n          points: [\n            t(\"캄보디아 정부의 관광 투자 우대 정책\", \"Cambodia's preferential tourism investment policies\"),\n            t(\"외국인 투자 유치를 위한 각종 혜택\", \"Various benefits for attracting foreign investment\"),\n            t(\"문화 콘텐츠 산업 육성 의지\", \"Government commitment to cultural content industry development\")\n          ]\n        }\n      ]\n    },\n    {\n      icon: \"💰\",\n      title: t(\"안정적 수익 구조\", \"Stable Revenue Structure\"),\n      description: t(\"다양한 수익원을 통한 안정적이고 지속가능한 비즈니스 모델\", \"Stable and sustainable business model through diversified revenue streams\"),\n      details: [\n        {\n          subtitle: t(\"다중 수익원\", \"Multiple Revenue Streams\"),\n          points: [\n            t(\"티켓 판매 (85%): 메인 수익 원\", \"Ticket sales (85%): Primary revenue source\"),\n            t(\"체험 프로그램 (8%): 승마, 활쏘기 등 공연 후 필요한 관광객\", \"Experience programs (8%): Horse riding, archery for tourists after performances\"),\n            t(\"기념품 판매 (4%): 몽골 전통 상품, 경기장 외 매장\", \"Souvenir sales (4%): Traditional Mongolian products, stores outside venue\"),\n            t(\"F&B 운영 (3%): 전통 음식 및 음료\", \"F&B operations (3%): Traditional food and beverages\")\n          ]\n        },\n        {\n          subtitle: t(\"고객 확보 전략\", \"Customer Acquisition Strategy\"),\n          points: [\n            t(\"여행사 중 대형 패키지 가능한 여행사 컨텍, 옵션 포함으로 안정적 고객 유치\", \"Contact with travel agencies capable of large packages, stable customer attraction through optional inclusions\"),\n            t(\"호텔 및 리조트와의 제휴 마케팅\", \"Partnership marketing with hotels and resorts\"),\n            t(\"온라인 예약 시스템을 통한 개별 고객 확보\", \"Individual customer acquisition through online booking system\"),\n            t(\"대중 교통인 택시, 뚝뚝 기사 커미션 포함 고객유치\", \"Customer acquisition including taxi and tuk-tuk driver commissions for public transportation\")\n          ]\n        }\n      ]\n    },\n    {\n      icon: \"📈\",\n      title: t(\"높은 수익성\", \"High Profitability\"),\n      description: t(\"투자 대비 뛰어난 수익률과 빠른 회수 기간\", \"Excellent ROI and fast payback period\"),\n      details: [\n        {\n          subtitle: t(\"수익 전망\", \"Revenue Forecast\"),\n          points: [\n            t(\"연간 순이익: $2.1M ~ $3.3M (보수적 추정)\", \"Annual net profit: $2.1M ~ $3.3M (conservative estimate)\"),\n            t(\"투자 회수 기간: 약 1.5년\", \"Investment payback period: Approximately 1.5 years\"),\n            t(\"연간 ROI: 67% ~ 100%\", \"Annual ROI: 67% ~ 100%\")\n          ]\n        },\n        {\n          subtitle: t(\"비용 효율성\", \"Cost Efficiency\"),\n          points: [\n            t(\"상대적으로 낮은 초기 투자 비용\", \"Relatively low initial investment cost\"),\n            t(\"효율적인 운영비 구조\", \"Efficient operating cost structure\"),\n            t(\"규모의 경제 실현 가능\", \"Economies of scale achievable\")\n          ]\n        }\n      ]\n    },\n    {\n      icon: \"🚀\",\n      title: t(\"확장 가능성\", \"Expansion Potential\"),\n      description: t(\"다양한 부가 사업과 지역 확장을 통한 성장 기회\", \"Growth opportunities through various ancillary businesses and regional expansion\"),\n      details: [\n        {\n          subtitle: t(\"부가 사업 기회\", \"Ancillary Business Opportunities\"),\n          points: [\n            t(\"말 테마 체험존: 승마 교육, 포토존\", \"Horse-themed experience zone: Riding education, photo zones\"),\n            t(\"전통 야시장: 한국 음식/화장품,수공예품\", \"Traditional night market: Korean food/Cosmetics, handicrafts\"),\n            t(\"문화 박물관: 한국/캄보디아/몽골 역사 및 문화 전시\", \"Cultural museum: Korea,Cambodia,Mongolian history and culture exhibition\")\n          ]\n        },\n        {\n          subtitle: t(\"사업 확장\", \"Business Expansion\"),\n          points: [\n            t(\"광광객이 모일만한 멋진장소 확장,시장수요 마추어 확장\", \"Expansion to major Tour Business destinations like Wonderful and unforgettabl\"),\n            t(\"한국에서 관광객 인기상품 판매\", \"Selling popular products to tourists in Korea.\"),\n            t(\"문화 콘텐츠 브랜드로 성장\", \"Growth as a cultural content brand across Asia\")\n          ]\n        }\n      ]\n    }\n  ];\n\n  const financialHighlights = [\n    {\n      metric: t(\"예상 연간 매출\", \"Expected Annual Revenue\"),\n      value: \"$5.04M\",\n      description: t(\"티켓 판매 기준\", \"Based on ticket sales\"),\n      color: \"bg-mongolian-500\"\n    },\n    {\n      metric: t(\"예상 연간 순이익\", \"Expected Annual Net Profit\"),\n      value: \"$2.1M+\",\n      description: t(\"보수적 추정\", \"Conservative estimate\"),\n      color: \"bg-green-500\"\n    },\n    {\n      metric: t(\"투자 회수 기간\", \"Payback Period\"),\n      value: \"1.5년\",\n      description: t(\"운영 안정화 후\", \"After operational stabilization\"),\n      color: \"bg-blue-500\"\n    },\n    {\n      metric: t(\"연간 ROI\", \"Annual ROI\"),\n      value: \"67%+\",\n      description: t(\"투자 대비 수익률\", \"Return on investment\"),\n      color: \"bg-orange-500\"\n    }\n  ];\n\n  return (\n    <div className=\"relative space-y-6 md:space-y-8 min-h-screen text-white p-4 md:p-8\">\n      {/* Background Image - Mobile Optimized */}\n      <div \n        className=\"absolute inset-0 w-full h-full opacity-70 hidden md:block\"\n        style={{\n          backgroundImage: `url('/investment-points-bg.jpeg')`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center 20%',\n          backgroundRepeat: 'no-repeat',\n          zIndex: 1\n        }}\n      />\n      \n      {/* Mobile Background */}\n      <div \n        className=\"absolute inset-0 w-full h-full opacity-80 md:hidden\"\n        style={{\n          backgroundImage: `url('/investment-points-bg.jpeg')`,\n          backgroundSize: '120% auto',\n          backgroundPosition: 'center 15%',\n          backgroundRepeat: 'no-repeat',\n          zIndex: 1\n        }}\n      />\n      \n      {/* Light overlay for text readability */}\n      <div \n        className=\"absolute inset-0 bg-gradient-to-b from-white/20 via-transparent to-white/30\"\n        style={{ zIndex: 2 }}\n      />\n      <div className=\"relative z-10 text-center\">\n        <h1 className=\"text-2xl md:text-4xl font-bold mb-3 md:mb-4 text-white drop-shadow-[2px_2px_4px_rgba(0,0,0,0.8)]\">\n          💎 {t(\"투자 포인트\", \"Investment Highlights\")}\n        </h1>\n        <p className=\"text-base md:text-xl text-white max-w-3xl mx-auto px-2 drop-shadow-[1px_1px_3px_rgba(0,0,0,0.8)]\">\n          {t(\"검증된 비즈니스 모델과 독점적 시장 기회를 통한 안정적이고 수익성 높은 투자\", \n             \"Stable and highly profitable investment through proven business model and exclusive market opportunity\")}\n        </p>\n      </div>\n\n      {/* Financial Highlights */}\n      <Card className=\"relative z-10 bg-white/30 backdrop-blur-md shadow-xl border border-white/20\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900 text-center drop-shadow-[1px_1px_2px_rgba(255,255,255,0.8)]\">\n            📊 {t(\"핵심 재무 지표\", \"Key Financial Metrics\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6\">\n            {financialHighlights.map((item, index) => (\n              <div key={index} className=\"text-center bg-gradient-to-br from-amber-100/40 to-orange-200/40 backdrop-blur-sm border-2 border-amber-400/50 rounded-lg p-4 md:p-6 shadow-lg\">\n                <div className=\"w-16 h-16 md:w-20 md:h-20 bg-gradient-to-br from-amber-600 to-orange-600 rounded-full mx-auto mb-3 md:mb-4 flex items-center justify-center\">\n                  <span className=\"text-white text-lg md:text-2xl font-bold\">\n                    {item.value.includes('$') ? '$' : item.value.includes('%') ? '%' : item.value.includes('년') ? '년' : '💰'}\n                  </span>\n                </div>\n                <h3 className=\"font-bold text-sm md:text-lg text-gray-900 mb-1 md:mb-2 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{item.metric}</h3>\n                <p className=\"text-xl md:text-3xl font-bold text-amber-900 mb-1 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{item.value}</p>\n                <p className=\"text-xs md:text-sm text-gray-800 font-bold drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{item.description}</p>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Investment Feature Image - Mobile Optimized */}\n      <div className=\"relative z-10 w-full mb-4 md:mb-6\">\n        <img \n          src=\"/investment-points-bg.jpeg\" \n          alt={t(\"투자 포인트 이미지\", \"Investment Points Image\")}\n          className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-white/30\"\n          style={{\n            objectPosition: 'center 20%'\n          }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent rounded-lg\"></div>\n      </div>\n\n      {/* Investment Highlights */}\n      <div className=\"relative z-10 space-y-4 md:space-y-6\">\n        {investmentHighlights.map((highlight, index) => (\n          <Card key={index} className=\"bg-white/30 backdrop-blur-md shadow-xl border border-white/20 overflow-hidden\">\n            <CardContent className=\"p-4 md:p-8\">\n              <div className=\"flex items-start space-x-3 md:space-x-4 mb-4 md:mb-6\">\n                <div className=\"w-12 h-12 md:w-16 md:h-16 bg-gradient-to-br from-amber-600 to-orange-600 rounded-xl flex items-center justify-center flex-shrink-0\">\n                  <span className=\"text-2xl md:text-3xl text-white\">{highlight.icon}</span>\n                </div>\n                <div>\n                  <h2 className=\"text-base md:text-2xl font-bold text-gray-900 mb-1 md:mb-2 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{highlight.title}</h2>\n                  <p className=\"text-sm md:text-base text-gray-800 font-bold drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{highlight.description}</p>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6\">\n                {highlight.details.map((detail, detailIndex) => (\n                  <div key={detailIndex} className=\"bg-white/40 backdrop-blur-sm border-2 border-white/30 rounded-lg p-4 md:p-6\">\n                    <h3 className=\"text-sm md:text-lg font-bold text-gray-900 mb-3 md:mb-4 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{detail.subtitle}</h3>\n                    <ul className=\"space-y-2 md:space-y-3\">\n                      {detail.points.map((point, pointIndex) => (\n                        <li key={pointIndex} className=\"flex items-start\">\n                          <span className=\"text-amber-600 mr-2 mt-1 flex-shrink-0 font-bold\">•</span>\n                          <span className=\"text-gray-900 text-sm md:text-base font-bold drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{point}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Investment Timeline */}\n      <Card className=\"relative z-10 bg-white/30 backdrop-blur-md shadow-xl border border-white/20\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900 drop-shadow-[1px_1px_2px_rgba(255,255,255,0.8)]\">\n            ⏰ {t(\"투자 일정\", \"Investment Timeline\")}\n          </h2>\n          <div className=\"space-y-4 md:space-y-6\">\n            <div className=\"flex items-start space-x-3 md:space-x-4 bg-amber-50/40 backdrop-blur-sm border-2 border-amber-300/50 rounded-lg p-3 md:p-4\">\n              <div className=\"w-6 h-6 md:w-8 md:h-8 bg-gradient-to-br from-amber-600 to-orange-600 rounded-full flex items-center justify-center text-white text-sm md:text-base font-bold\">1</div>\n              <div>\n                <h3 className=\"font-bold text-sm md:text-lg text-gray-900 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"투자 유치 및 계약\", \"Investment Attraction & Contract\")}</h3>\n                <p className=\"text-gray-800 text-xs md:text-base font-bold drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"0-3개월: 투자 확정, 법적 절차 완료\", \"0-3 months: Investor confirmation, legal procedures completion\")}</p>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-3 md:space-x-4 bg-blue-50/40 backdrop-blur-sm border-2 border-blue-300/50 rounded-lg p-3 md:p-4\">\n              <div className=\"w-6 h-6 md:w-8 md:h-8 bg-gradient-to-br from-blue-600 to-indigo-600 rounded-full flex items-center justify-center text-white text-sm md:text-base font-bold\">2</div>\n              <div>\n                <h3 className=\"font-bold text-sm md:text-lg text-gray-900 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"시설 구축\", \"Facility Construction\")}</h3>\n                <p className=\"text-gray-800 text-xs md:text-base font-bold drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"3-9개월: 공연장 건설, 마필 도입, 스태프 훈련, 여행사 접촉 팩키지상담\", \"3-9 months: Theater construction, horse import, staff training, contact tour agency\")}</p>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-3 md:space-x-4 bg-green-50/40 backdrop-blur-sm border-2 border-green-300/50 rounded-lg p-3 md:p-4\">\n              <div className=\"w-6 h-6 md:w-8 md:h-8 bg-gradient-to-br from-emerald-600 to-teal-600 rounded-full flex items-center justify-center text-white text-sm md:text-base font-bold\">3</div>\n              <div>\n                <h3 className=\"font-bold text-sm md:text-lg text-gray-900 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"운영 시작\", \"Operations Launch\")}</h3>\n                <p className=\"text-gray-800 text-xs md:text-base font-bold drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"9-12개월: 정식 오픈, 마케팅 런칭, 수익 창출 시작\", \"9-12 months: Official opening, marketing launch, revenue generation start\")}</p>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-3 md:space-x-4 bg-purple-50/40 backdrop-blur-sm border-2 border-purple-300/50 rounded-lg p-3 md:p-4\">\n              <div className=\"w-6 h-6 md:w-8 md:h-8 bg-gradient-to-br from-violet-600 to-purple-600 rounded-full flex items-center justify-center text-white text-sm md:text-base font-bold\">4</div>\n              <div>\n                <h3 className=\"font-bold text-sm md:text-lg text-gray-900 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"투자 회수\", \"Investment Recovery\")}</h3>\n                <p className=\"text-gray-800 text-xs md:text-base font-bold drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"12-29개월: 안정적 운영, 투자금 회수 완료\", \"12-29 months: Stable operations, investment recovery completion\")}</p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n\n    </div>\n  );\n}","size_bytes":16715},"client/src/pages/marketing-strategy-page.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function MarketingStrategyPage() {\n  const { t } = useLanguage();\n\n  const marketingChannels = [\n    {\n      channel: t(\"디지털 마케팅\", \"Digital Marketing\"),\n      icon: \"📱\",\n      budget: 30,\n      color: \"#3B82F6\",\n      strategies: [\n        t(\"소셜미디어 광고 (Facebook, Instagram, TikTok)\", \"Social media advertising (Facebook, Instagram, TikTok)\"),\n        t(\"구글 광고 및 SEO 최적화\", \"Google Ads and SEO optimization\"),\n        t(\"유튜브 공연 영상 및 체험 콘텐츠\", \"YouTube performance videos and experience content\"),\n        t(\"인플루언서 마케팅 (여행 블로거)\", \"Influencer marketing (travel bloggers)\")\n      ],\n      roi: \"400%\",\n      reach: \"50,000명/월\"\n    },\n    {\n      channel: t(\"여행사 제휴\", \"Travel Agency Partnership\"),\n      icon: \"🤝\",\n      budget: 25,\n      color: \"#10B981\",\n      strategies: [\n        t(\"현지 여행사와 패키지 상품 개발\", \"Package development with local travel agencies\"),\n        t(\"국제 여행사 B2B 세일즈\", \"International travel agency B2B sales\"),\n        t(\"온라인 여행 플랫폼 입점\", \"Listing on online travel platforms\"),\n        t(\"여행 전시회 및 컨벤션 참가\", \"Travel fair and convention participation\")\n      ],\n      roi: \"350%\",\n      reach: \"25,000명/월\"\n    },\n    {\n      channel: t(\"호텔 파트너십\", \"Hotel Partnership\"),\n      icon: \"🏨\",\n      budget: 20,\n      color: \"#F59E0B\",\n      strategies: [\n        t(\"리조트 및 호텔 콘시어지 서비스\", \"Resort and hotel concierge services\"),\n        t(\"VIP 고객 전용 패키지\", \"VIP customer exclusive packages\"),\n        t(\"호텔 로비 프로모션 부스\", \"Hotel lobby promotion booths\"),\n        t(\"패키지 할인 및 크로스 프로모션\", \"Package discounts and cross-promotion\")\n      ],\n      roi: \"300%\",\n      reach: \"15,000명/월\"\n    },\n    {\n      channel: t(\"현지 마케팅\", \"Local Marketing\"),\n      icon: \"🎪\",\n      budget: 15,\n      color: \"#EF4444\",\n      strategies: [\n        t(\"앙코르와트 주변 안내소 홍보\", \"Promotion at Angkor Wat area information centers\"),\n        t(\"현지 이벤트 및 축제 참가\", \"Participation in local events and festivals\"),\n        t(\"학교 및 단체 방문 프로그램\", \"School and group visit programs\"),\n        t(\"현지 미디어 및 신문 광고\", \"Local media and newspaper advertising\")\n      ],\n      roi: \"250%\",\n      reach: \"8,000명/월\"\n    },\n    {\n      channel: t(\"PR 및 브랜딩\", \"PR & Branding\"),\n      icon: \"📺\",\n      budget: 10,\n      color: \"#8B5CF6\",\n      strategies: [\n        t(\"국제 여행 매체 보도자료\", \"International travel media press releases\"),\n        t(\"다큐멘터리 및 TV 프로그램 협찬\", \"Documentary and TV program sponsorship\"),\n        t(\"문화 교류 행사 및 외교관 초청\", \"Cultural exchange events and diplomat invitations\"),\n        t(\"어워드 및 인증 획득\", \"Awards and certification acquisition\")\n      ],\n      roi: \"200%\",\n      reach: \"100,000명/월\"\n    }\n  ];\n\n  const targetSegments = [\n    {\n      segment: t(\"국제 관광객\", \"International Tourists\"),\n      percentage: 60,\n      description: t(\"앙코르와트 방문 외국인\", \"Foreign visitors to Angkor Wat\"),\n      characteristics: [\n        t(\"연령: 25-55세\", \"Age: 25-55 years\"),\n        t(\"소득: 중상위층\", \"Income: Middle to upper class\"),\n        t(\"관심: 문화, 모험, 사진\", \"Interests: Culture, adventure, photography\"),\n        t(\"체류: 3-7일\", \"Stay: 3-7 days\")\n      ],\n      marketingFocus: [\n        t(\"온라인 예약 시스템\", \"Online booking system\"),\n        t(\"다국어 서비스\", \"Multilingual services\"),\n        t(\"소셜미디어 마케팅\", \"Social media marketing\"),\n        t(\"여행사 제휴\", \"Travel agency partnerships\")\n      ]\n    },\n    {\n      segment: t(\"현지 및 지역 고객\", \"Local & Regional Customers\"),\n      percentage: 25,\n      description: t(\"캄보디아 및 동남아 거주자\", \"Cambodia and Southeast Asia residents\"),\n      characteristics: [\n        t(\"연령: 20-45세\", \"Age: 20-45 years\"),\n        t(\"가족 단위 방문\", \"Family visits\"),\n        t(\"주말 및 휴일 이용\", \"Weekend and holiday usage\"),\n        t(\"할인 혜택 선호\", \"Prefer discount benefits\")\n      ],\n      marketingFocus: [\n        t(\"현지 언어 서비스\", \"Local language services\"),\n        t(\"가족 패키지 상품\", \"Family package deals\"),\n        t(\"현지 미디어 광고\", \"Local media advertising\"),\n        t(\"커뮤니티 이벤트\", \"Community events\")\n      ]\n    },\n    {\n      segment: t(\"기업 및 단체\", \"Corporate & Groups\"),\n      percentage: 15,\n      description: t(\"기업 행사, 인센티브 여행\", \"Corporate events, incentive travel\"),\n      characteristics: [\n        t(\"대규모 단체 (50명+)\", \"Large groups (50+ people)\"),\n        t(\"기업 예산 활용\", \"Corporate budget utilization\"),\n        t(\"팀빌딩 목적\", \"Team building purposes\"),\n        t(\"특별 서비스 요구\", \"Special service requirements\")\n      ],\n      marketingFocus: [\n        t(\"B2B 영업 활동\", \"B2B sales activities\"),\n        t(\"맞춤형 패키지\", \"Customized packages\"),\n        t(\"기업 할인 프로그램\", \"Corporate discount programs\"),\n        t(\"전용 공간 제공\", \"Dedicated space provision\")\n      ]\n    }\n  ];\n\n  const monthlyMarketingBudget = [\n    { month: t('1월', 'Jan'), budget: 4000, roi: 3.8, leads: 180 },\n    { month: t('2월', 'Feb'), budget: 4200, roi: 4.1, leads: 195 },\n    { month: t('3월', 'Mar'), budget: 4500, roi: 4.3, leads: 220 },\n    { month: t('4월', 'Apr'), budget: 5000, roi: 4.5, leads: 250 },\n    { month: t('5월', 'May'), budget: 5200, roi: 4.7, leads: 275 },\n    { month: t('6월', 'Jun'), budget: 4800, roi: 4.4, leads: 245 },\n    { month: t('7월', 'Jul'), budget: 5500, roi: 4.8, leads: 290 },\n    { month: t('8월', 'Aug'), budget: 5800, roi: 5.0, leads: 310 },\n    { month: t('9월', 'Sep'), budget: 5300, roi: 4.6, leads: 265 },\n    { month: t('10월', 'Oct'), budget: 5100, roi: 4.5, leads: 255 },\n    { month: t('11월', 'Nov'), budget: 4900, roi: 4.3, leads: 240 },\n    { month: t('12월', 'Dec'), budget: 4700, roi: 4.2, leads: 225 }\n  ];\n\n  const digitalMarketingMetrics = [\n    {\n      platform: \"Facebook & Instagram\",\n      monthlyReach: \"35,000\",\n      engagement: \"6.8%\",\n      cost: \"$800/월\",\n      conversions: \"120\"\n    },\n    {\n      platform: \"Google Ads\",\n      monthlyReach: \"25,000\",\n      engagement: \"3.2%\",\n      cost: \"$1,200/월\",\n      conversions: \"85\"\n    },\n    {\n      platform: \"YouTube\",\n      monthlyReach: \"50,000\",\n      engagement: \"4.5%\",\n      cost: \"$600/월\",\n      conversions: \"95\"\n    },\n    {\n      platform: \"TikTok\",\n      monthlyReach: \"40,000\",\n      engagement: \"8.2%\",\n      cost: \"$500/월\",\n      conversions: \"110\"\n    }\n  ];\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  return (\n    <div className=\"space-y-6 md:space-y-8 bg-black min-h-screen text-white p-4 md:p-8\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl md:text-4xl font-bold text-white mb-3 md:mb-4\">\n          📢 {t(\"마케팅 전략\", \"Marketing Strategy\")}\n        </h1>\n        <p className=\"text-base md:text-xl text-gray-200 max-w-3xl mx-auto px-2\">\n          {t(\"다채널 마케팅 접근법을 통한 효과적인 고객 유치 및 브랜드 인지도 구축\", \n             \"Effective customer acquisition and brand awareness building through multi-channel marketing approach\")}\n        </p>\n      </div>\n\n      {/* 마케팅 예산 배분 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            💰 {t(\"마케팅 예산 배분\", \"Marketing Budget Allocation\")}\n          </h2>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={marketingChannels}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={100}\n                    dataKey=\"budget\"\n                    strokeWidth={0}\n                  >\n                    {marketingChannels.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip formatter={(value) => [`${value}%`, t(\"예산 비중\", \"Budget Share\")]} />\n                  <Legend />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n            <div className=\"space-y-3 md:space-y-4\">\n              {marketingChannels.map((channel, index) => (\n                <div key={index} className=\"flex items-center justify-between p-3 md:p-4 bg-gray-100 rounded-lg border border-gray-200\">\n                  <div className=\"flex items-center\">\n                    <span className=\"text-xl md:text-2xl mr-2 md:mr-3\">{channel.icon}</span>\n                    <div>\n                      <h3 className=\"font-semibold text-gray-900 text-sm md:text-base\">{channel.channel}</h3>\n                      <p className=\"text-xs md:text-sm text-gray-700\">{t(\"월 도달\", \"Monthly Reach\")}: {channel.reach}</p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"font-bold text-gray-900 text-sm md:text-base\">{channel.budget}%</p>\n                    <p className=\"text-xs md:text-sm text-green-700 font-medium\">ROI: {channel.roi}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 마케팅 채널별 상세 전략 */}\n      <div className=\"space-y-4 md:space-y-6\">\n        {marketingChannels.map((channel, index) => (\n          <Card key={index} className=\"bg-white shadow-xl\">\n            <CardContent className=\"p-4 md:p-8\">\n              {/* 디지털 마케팅 이미지 - 첫 번째 이미지 */}\n              {index === 0 && (\n                <div className=\"relative w-full mb-4 md:mb-6\">\n                  <img \n                    src=\"/attached_assets/how-to-become-a-digital-marketer_1755068964025.webp\" \n                    alt={t(\"디지털 마케팅 전략\", \"Digital Marketing Strategy\")}\n                    className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-blue-300\"\n                    style={{\n                      objectPosition: 'center center'\n                    }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n                  <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n                    <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                      {t(\"혁신적인 디지털 마케팅으로 전 세계 고객에게 다가가기\", \"Reaching Global Customers Through Innovative Digital Marketing\")}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {/* 호텔 파트너십 이미지 - 두 번째 이미지 */}\n              {index === 2 && (\n                <div className=\"relative w-full mb-4 md:mb-6\">\n                  <img \n                    src=\"/attached_assets/jaz-tour-khalef-thalasso_1755069044918.jpg\" \n                    alt={t(\"럭셔리 호텔 파트너십\", \"Luxury Hotel Partnership\")}\n                    className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-yellow-300\"\n                    style={{\n                      objectPosition: 'center center'\n                    }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n                  <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n                    <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                      {t(\"프리미엄 리조트와의 전략적 파트너십으로 VIP 고객 유치\", \"Attracting VIP Customers Through Strategic Premium Resort Partnerships\")}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex items-center mb-4 md:mb-6\">\n                <div className=\"w-10 h-10 md:w-12 md:h-12 bg-gray-200 rounded-xl flex items-center justify-center mr-3 md:mr-4\">\n                  <span className=\"text-xl md:text-2xl\">{channel.icon}</span>\n                </div>\n                <div>\n                  <h2 className=\"text-xl md:text-2xl font-bold text-gray-900\">{channel.channel}</h2>\n                  <div className=\"flex flex-wrap gap-2 md:gap-4 text-xs md:text-sm text-gray-700 mt-1\">\n                    <span className=\"font-medium\">{t(\"예산 비중\", \"Budget Share\")}: {channel.budget}%</span>\n                    <span className=\"font-medium\">ROI: {channel.roi}</span>\n                    <span className=\"font-medium\">{t(\"월 도달\", \"Monthly Reach\")}: {channel.reach}</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 md:gap-4\">\n                {channel.strategies.map((strategy, strategyIndex) => (\n                  <div key={strategyIndex} className=\"flex items-start\">\n                    <span className=\"text-green-600 mr-2 mt-1 font-bold\">✓</span>\n                    <span className=\"text-gray-800 text-sm md:text-base\">{strategy}</span>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* 타겟 고객 세분화 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          {/* 타겟 고객 세분화 이미지 - 세 번째 이미지 */}\n          <div className=\"relative w-full mb-4 md:mb-6\">\n            <img \n              src=\"/attached_assets/istockphoto-1850391734-612x612_1755069264743.jpg\" \n              alt={t(\"다양한 고객층 타겟팅\", \"Diverse Customer Targeting\")}\n              className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-green-300\"\n              style={{\n                objectPosition: 'center center'\n              }}\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n            <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n              <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                {t(\"다양한 고객층을 위한 맞춤형 마케팅 전략\", \"Customized Marketing Strategies for Diverse Customer Segments\")}\n              </p>\n            </div>\n          </div>\n\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            🎯 {t(\"타겟 고객 세분화\", \"Target Customer Segmentation\")}\n          </h2>\n          <div className=\"space-y-4 md:space-y-6\">\n            {targetSegments.map((segment, index) => (\n              <div key={index} className=\"border-2 border-gray-300 rounded-lg p-4 md:p-6 bg-gray-50\">\n                <div className=\"flex flex-col md:flex-row md:justify-between md:items-start mb-4\">\n                  <div className=\"mb-3 md:mb-0\">\n                    <h3 className=\"text-lg md:text-xl font-bold text-gray-900\">{segment.segment}</h3>\n                    <p className=\"text-gray-700 font-medium\">{segment.description}</p>\n                  </div>\n                  <div className=\"text-center md:text-right\">\n                    <span className=\"text-2xl md:text-3xl font-bold text-blue-700\">{segment.percentage}%</span>\n                    <p className=\"text-sm text-gray-700 font-medium\">{t(\"시장 점유\", \"Market Share\")}</p>\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 md:gap-6\">\n                  <div>\n                    <h4 className=\"font-bold text-gray-900 mb-3\">{t(\"고객 특성\", \"Customer Characteristics\")}</h4>\n                    <ul className=\"space-y-2\">\n                      {segment.characteristics.map((char, charIndex) => (\n                        <li key={charIndex} className=\"flex items-start\">\n                          <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                          <span className=\"text-gray-800 text-sm md:text-base\">{char}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  <div>\n                    <h4 className=\"font-bold text-gray-900 mb-3\">{t(\"마케팅 집중 영역\", \"Marketing Focus Areas\")}</h4>\n                    <ul className=\"space-y-2\">\n                      {segment.marketingFocus.map((focus, focusIndex) => (\n                        <li key={focusIndex} className=\"flex items-start\">\n                          <span className=\"text-green-600 mr-2 mt-1 font-bold\">✓</span>\n                          <span className=\"text-gray-800 text-sm md:text-base\">{focus}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 디지털 마케팅 성과 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            📱 {t(\"디지털 마케팅 성과 분석\", \"Digital Marketing Performance Analysis\")}\n          </h2>\n          <div className=\"overflow-x-auto bg-gray-100 rounded-lg\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300 bg-gray-200\">\n                  <th className=\"text-left p-3 font-bold text-gray-900\">{t(\"플랫폼\", \"Platform\")}</th>\n                  <th className=\"text-center p-3 font-bold text-gray-900\">{t(\"월간 도달\", \"Monthly Reach\")}</th>\n                  <th className=\"text-center p-3 font-bold text-gray-900\">{t(\"참여율\", \"Engagement\")}</th>\n                  <th className=\"text-center p-3 font-bold text-gray-900\">{t(\"비용\", \"Cost\")}</th>\n                  <th className=\"text-center p-3 font-bold text-gray-900\">{t(\"전환수\", \"Conversions\")}</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white\">\n                {digitalMarketingMetrics.map((metric, index) => (\n                  <tr key={index} className=\"border-b border-gray-200\">\n                    <td className=\"p-3 font-semibold text-gray-900\">{metric.platform}</td>\n                    <td className=\"p-3 text-center font-medium text-gray-800\">{metric.monthlyReach}</td>\n                    <td className=\"p-3 text-center text-green-700 font-bold\">{metric.engagement}</td>\n                    <td className=\"p-3 text-center text-red-700 font-medium\">{metric.cost}</td>\n                    <td className=\"p-3 text-center text-blue-700 font-bold\">{metric.conversions}</td>\n                  </tr>\n                ))}\n                <tr className=\"bg-gray-200 font-bold\">\n                  <td className=\"p-3 text-gray-900\">{t(\"총계\", \"Total\")}</td>\n                  <td className=\"p-3 text-center text-gray-900\">150,000</td>\n                  <td className=\"p-3 text-center text-gray-900\">5.7%</td>\n                  <td className=\"p-3 text-center text-red-700\">$3,100/월</td>\n                  <td className=\"p-3 text-center text-blue-700\">410</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 월별 마케팅 성과 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            📈 {t(\"월별 마케팅 성과 전망\", \"Monthly Marketing Performance Forecast\")}\n          </h2>\n          <div className=\"h-80 mb-6\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart data={monthlyMarketingBudget}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis yAxisId=\"left\" />\n                <YAxis yAxisId=\"right\" orientation=\"right\" />\n                <Tooltip \n                  formatter={(value, name) => {\n                    if (name === 'budget') return [formatCurrency(Number(value)), t(\"예산\", \"Budget\")];\n                    if (name === 'roi') return [`${value}x`, \"ROI\"];\n                    if (name === 'leads') return [`${value}명`, t(\"리드\", \"Leads\")];\n                    return [value, name];\n                  }}\n                />\n                <Legend />\n                <Bar yAxisId=\"left\" dataKey=\"budget\" fill=\"#3B82F6\" name={t(\"예산\", \"Budget\")} />\n                <Bar yAxisId=\"right\" dataKey=\"leads\" fill=\"#10B981\" name={t(\"리드 수\", \"Leads\")} />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 text-center\">\n            <div className=\"bg-blue-50 p-6 rounded-lg\">\n              <h3 className=\"text-lg font-semibold text-blue-800 mb-2\">{t(\"연간 마케팅 예산\", \"Annual Marketing Budget\")}</h3>\n              <p className=\"text-3xl font-bold text-blue-900\">$60,000</p>\n              <p className=\"text-sm text-blue-600\">{t(\"총 수익의 1.2%\", \"1.2% of total revenue\")}</p>\n            </div>\n            <div className=\"bg-green-50 p-6 rounded-lg\">\n              <h3 className=\"text-lg font-semibold text-green-800 mb-2\">{t(\"예상 연간 리드\", \"Expected Annual Leads\")}</h3>\n              <p className=\"text-3xl font-bold text-green-900\">3,000명</p>\n              <p className=\"text-sm text-green-600\">{t(\"전환율 25%\", \"25% conversion rate\")}</p>\n            </div>\n            <div className=\"bg-orange-50 p-6 rounded-lg\">\n              <h3 className=\"text-lg font-semibold text-orange-800 mb-2\">{t(\"평균 마케팅 ROI\", \"Average Marketing ROI\")}</h3>\n              <p className=\"text-3xl font-bold text-orange-900\">4.5x</p>\n              <p className=\"text-sm text-orange-600\">{t(\"업계 평균 대비 우수\", \"Above industry average\")}</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 브랜딩 및 포지셔닝 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            🎨 {t(\"브랜딩 및 포지셔닝 전략\", \"Branding & Positioning Strategy\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8\">\n            <div>\n              <h3 className=\"text-lg md:text-xl font-bold text-gray-900 mb-3 md:mb-4\">{t(\"브랜드 아이덴티티\", \"Brand Identity\")}</h3>\n              <div className=\"space-y-3 md:space-y-4\">\n                <div className=\"border-l-4 border-orange-500 pl-4 bg-orange-50 p-3 rounded-r-lg\">\n                  <h4 className=\"font-bold text-gray-900 text-sm md:text-base\">{t(\"브랜드 미션\", \"Brand Mission\")}</h4>\n                  <p className=\"text-gray-800 text-sm md:text-base mt-1\">\n                    {t(\"전통 몽골 마상 문화를 현대적으로 재해석하여 캄보디아 관광의 새로운 경험을 제공\", \n                       \"Providing new tourism experiences in Cambodia by reinterpreting traditional Mongolian equestrian culture in a modern way\")}\n                  </p>\n                </div>\n                <div className=\"border-l-4 border-amber-500 pl-4 bg-amber-50 p-3 rounded-r-lg\">\n                  <h4 className=\"font-bold text-gray-900 text-sm md:text-base\">{t(\"브랜드 비전\", \"Brand Vision\")}</h4>\n                  <p className=\"text-gray-800 text-sm md:text-base mt-1\">\n                    {t(\"동남아시아 대표 문화 체험 콘텐츠로 성장하여 글로벌 브랜드 구축\", \n                       \"Growing as Southeast Asia's leading cultural experience content and building a global brand\")}\n                  </p>\n                </div>\n                <div className=\"border-l-4 border-green-500 pl-4 bg-green-50 p-3 rounded-r-lg\">\n                  <h4 className=\"font-bold text-gray-900 text-sm md:text-base\">{t(\"브랜드 가치\", \"Brand Values\")}</h4>\n                  <p className=\"text-gray-800 text-sm md:text-base mt-1 font-medium\">\n                    {t(\"전통성, 모험성, 안전성, 감동\", \"Tradition, Adventure, Safety, Inspiration\")}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h3 className=\"text-lg md:text-xl font-bold text-gray-900 mb-3 md:mb-4\">{t(\"마케팅 메시지\", \"Marketing Messages\")}</h3>\n              <div className=\"space-y-3\">\n                <div className=\"bg-orange-100 p-4 rounded-lg border border-orange-200\">\n                  <h4 className=\"font-bold text-orange-900 text-sm md:text-base\">{t(\"주요 메시지\", \"Primary Message\")}</h4>\n                  <p className=\"text-orange-800 text-sm md:text-base mt-1 font-medium\">\n                    {t(\"앙코르와트에서 만나는 몽골 전사의 웅장한 이야기\", \"The magnificent story of Mongolian warriors at Angkor Wat\")}\n                  </p>\n                </div>\n                <div className=\"bg-amber-100 p-4 rounded-lg border border-amber-200\">\n                  <h4 className=\"font-bold text-amber-900 text-sm md:text-base\">{t(\"감정적 어필\", \"Emotional Appeal\")}</h4>\n                  <p className=\"text-amber-800 text-sm md:text-base mt-1 font-medium\">\n                    {t(\"천년의 전통이 살아 숨쉬는 감동적인 순간\", \"Moving moments where thousand-year traditions come alive\")}\n                  </p>\n                </div>\n                <div className=\"bg-blue-100 p-4 rounded-lg border border-blue-200\">\n                  <h4 className=\"font-bold text-blue-900 text-sm md:text-base\">{t(\"차별화 포인트\", \"Differentiation Point\")}</h4>\n                  <p className=\"text-blue-800 text-sm md:text-base mt-1 font-medium\">\n                    {t(\"동남아시아 유일, 세계적 수준의 마상 공연\", \"Southeast Asia's only world-class equestrian performance\")}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 성공 지표 (KPI) */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            🎯 {t(\"마케팅 성공 지표 (KPI)\", \"Marketing Success Indicators (KPIs)\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6\">\n            <div className=\"text-center bg-blue-50 p-4 md:p-6 rounded-lg border border-blue-200\">\n              <div className=\"w-12 h-12 md:w-16 md:h-16 bg-blue-600 rounded-full mx-auto mb-3 md:mb-4 flex items-center justify-center\">\n                <span className=\"text-white text-xl md:text-2xl font-bold\">👥</span>\n              </div>\n              <h3 className=\"font-bold text-gray-900 text-sm md:text-base mb-2\">{t(\"브랜드 인지도\", \"Brand Awareness\")}</h3>\n              <p className=\"text-2xl md:text-3xl font-bold text-blue-700\">75%</p>\n              <p className=\"text-xs md:text-sm text-gray-700 font-medium mt-1\">{t(\"타겟 고객층 내\", \"Within target audience\")}</p>\n            </div>\n            <div className=\"text-center bg-green-50 p-4 md:p-6 rounded-lg border border-green-200\">\n              <div className=\"w-12 h-12 md:w-16 md:h-16 bg-green-600 rounded-full mx-auto mb-3 md:mb-4 flex items-center justify-center\">\n                <span className=\"text-white text-xl md:text-2xl font-bold\">📈</span>\n              </div>\n              <h3 className=\"font-bold text-gray-900 text-sm md:text-base mb-2\">{t(\"고객 획득 비용\", \"Customer Acquisition Cost\")}</h3>\n              <p className=\"text-2xl md:text-3xl font-bold text-green-700\">$8</p>\n              <p className=\"text-xs md:text-sm text-gray-700 font-medium mt-1\">{t(\"고객당\", \"Per customer\")}</p>\n            </div>\n            <div className=\"text-center bg-orange-50 p-4 md:p-6 rounded-lg border border-orange-200\">\n              <div className=\"w-12 h-12 md:w-16 md:h-16 bg-orange-600 rounded-full mx-auto mb-3 md:mb-4 flex items-center justify-center\">\n                <span className=\"text-white text-xl md:text-2xl font-bold\">❤️</span>\n              </div>\n              <h3 className=\"font-bold text-gray-900 text-sm md:text-base mb-2\">{t(\"고객 만족도\", \"Customer Satisfaction\")}</h3>\n              <p className=\"text-2xl md:text-3xl font-bold text-orange-700\">4.8/5</p>\n              <p className=\"text-xs md:text-sm text-gray-700 font-medium mt-1\">{t(\"리뷰 평균\", \"Average review\")}</p>\n            </div>\n            <div className=\"text-center bg-purple-50 p-4 md:p-6 rounded-lg border border-purple-200\">\n              <div className=\"w-12 h-12 md:w-16 md:h-16 bg-purple-600 rounded-full mx-auto mb-3 md:mb-4 flex items-center justify-center\">\n                <span className=\"text-white text-xl md:text-2xl font-bold\">🔄</span>\n              </div>\n              <h3 className=\"font-bold text-gray-900 text-sm md:text-base mb-2\">{t(\"재방문율\", \"Return Rate\")}</h3>\n              <p className=\"text-2xl md:text-3xl font-bold text-purple-700\">35%</p>\n              <p className=\"text-xs md:text-sm text-gray-700 font-medium mt-1\">{t(\"6개월 내\", \"Within 6 months\")}</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":30675},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/operations-forecast-page.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function OperationsForecastPage() {\n  const { t } = useLanguage();\n\n  const operatingCosts = [\n    {\n      category: t(\"인건비\", \"Labor Costs\"),\n      items: [\n        { item: t(\"몽골 기수진 (10명)\", \"Mongolian Riders (10)\"), monthly: 12000, annual: 144000 },\n        { item: t(\"현지 스태프 (15명)\", \"Local Staff (15)\"), monthly: 6000, annual: 72000 },\n        { item: t(\"관리진 (5명)\", \"Management (5)\"), monthly: 2000, annual: 24000 }\n      ],\n      total: { monthly: 20000, annual: 240000 }\n    },\n    {\n      category: t(\"마필 관리비\", \"Horse Care\"),\n      items: [\n        { item: t(\"사료 및 영양제\", \"Feed & Supplements\"), monthly: 4000, annual: 48000 },\n        { item: t(\"수의사 및 건강관리\", \"Veterinary & Health\"), monthly: 3000, annual: 36000 },\n        { item: t(\"마구간 유지보수\", \"Stable Maintenance\"), monthly: 2000, annual: 24000 },\n        { item: t(\"기타 마필 관련\", \"Other Horse-related\"), monthly: 1000, annual: 12000 }\n      ],\n      total: { monthly: 10000, annual: 120000 }\n    },\n    {\n      category: t(\"시설 운영비\", \"Facility Operations\"),\n      items: [\n        { item: t(\"공연장 임대료\", \"Venue Rent\"), monthly: 12500, annual: 150000 },\n        { item: t(\"조명/음향 운영\", \"Lighting/Sound Operations\"), monthly: 5000, annual: 60000 },\n        { item: t(\"전기/수도/통신\", \"Utilities\"), monthly: 3000, annual: 36000 },\n        { item: t(\"청소 및 유지보수\", \"Cleaning & Maintenance\"), monthly: 2500, annual: 30000 }\n      ],\n      total: { monthly: 23000, annual: 276000 }\n    },\n    {\n      category: t(\"마케팅 및 기타\", \"Marketing & Others\"),\n      items: [\n        { item: t(\"마케팅 및 홍보\", \"Marketing & PR\"), monthly: 5000, annual: 60000 },\n        { item: t(\"보험료\", \"Insurance\"), monthly: 2000, annual: 24000 },\n        { item: t(\"세금 및 라이센스\", \"Taxes & Licenses\"), monthly: 2000, annual: 24000 },\n        { item: t(\"예비비\", \"Reserve Fund\"), monthly: 3000, annual: 36000 }\n      ],\n      total: { monthly: 12000, annual: 144000 }\n    }\n  ];\n\n  const totalMonthlyCosts = operatingCosts.reduce((sum, category) => sum + category.total.monthly, 0);\n  const totalAnnualCosts = operatingCosts.reduce((sum, category) => sum + category.total.annual, 0);\n\n  const monthlyRevenueProjection = [\n    { month: '1월', revenue: 350000, costs: 65000, netProfit: 285000, cumulative: 285000 },\n    { month: '2월', revenue: 380000, costs: 65000, netProfit: 315000, cumulative: 600000 },\n    { month: '3월', revenue: 420000, costs: 65000, netProfit: 355000, cumulative: 955000 },\n    { month: '4월', revenue: 450000, costs: 65000, netProfit: 385000, cumulative: 1340000 },\n    { month: '5월', revenue: 480000, costs: 65000, netProfit: 415000, cumulative: 1755000 },\n    { month: '6월', revenue: 460000, costs: 65000, netProfit: 395000, cumulative: 2150000 },\n    { month: '7월', revenue: 500000, costs: 65000, netProfit: 435000, cumulative: 2585000 },\n    { month: '8월', revenue: 520000, costs: 65000, netProfit: 455000, cumulative: 3040000 },\n    { month: '9월', revenue: 490000, costs: 65000, netProfit: 425000, cumulative: 3465000 },\n    { month: '10월', revenue: 470000, costs: 65000, netProfit: 405000, cumulative: 3870000 },\n    { month: '11월', revenue: 450000, costs: 65000, netProfit: 385000, cumulative: 4255000 },\n    { month: '12월', revenue: 430000, costs: 65000, netProfit: 365000, cumulative: 4620000 }\n  ];\n\n  const yearlyProjection = [\n    { year: t('1년차', 'Year 1'), revenue: 5400000, costs: 780000, netProfit: 4620000, roi: 308 },\n    { year: t('2년차', 'Year 2'), revenue: 5940000, costs: 810000, netProfit: 5130000, roi: 342 },\n    { year: t('3년차', 'Year 3'), revenue: 6530000, costs: 840000, netProfit: 5690000, roi: 379 },\n    { year: t('4년차', 'Year 4'), revenue: 7180000, costs: 870000, netProfit: 6310000, roi: 421 },\n    { year: t('5년차', 'Year 5'), revenue: 7900000, costs: 900000, netProfit: 7000000, roi: 467 }\n  ];\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const profitabilityMetrics = [\n    {\n      metric: t(\"총 투자금\", \"Total Investment\"),\n      value: \"$780,000\",\n      description: t(\"초기 투자 소요 자금\", \"Initial investment required\"),\n      color: \"bg-red-100 text-red-800\"\n    },\n    {\n      metric: t(\"월간 손익분기점\", \"Monthly Break-even\"),\n      value: formatCurrency(totalMonthlyCosts),\n      description: t(\"월간 최소 수익 목표\", \"Monthly minimum revenue target\"),\n      color: \"bg-orange-100 text-orange-800\"\n    },\n    {\n      metric: t(\"투자 회수 기간\", \"Payback Period\"),\n      value: \"1.2년\",\n      description: t(\"누적 이익으로 투자금 회수\", \"Investment recovery through cumulative profit\"),\n      color: \"bg-blue-100 text-blue-800\"\n    },\n    {\n      metric: t(\"5년 누적 이익\", \"5-Year Cumulative Profit\"),\n      value: \"$29.1M\",\n      description: t(\"5년간 총 순이익\", \"Total net profit over 5 years\"),\n      color: \"bg-green-100 text-green-800\"\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6 md:space-y-8 bg-black min-h-screen text-white p-4 md:p-8\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl md:text-4xl font-bold text-white mb-3 md:mb-4\">\n          🛠️ {t(\"운영비 및 수익 전망\", \"Operations & Revenue Forecast\")}\n        </h1>\n        <p className=\"text-base md:text-xl text-gray-200 max-w-3xl mx-auto px-2\">\n          {t(\"상세한 운영비 분석과 장기간 수익성 전망을 통한 투자 수익성 검증\", \n             \"Investment profitability verification through detailed operating cost analysis and long-term revenue forecasting\")}\n        </p>\n      </div>\n\n      {/* 수익성 핵심 지표 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            📊 {t(\"수익성 핵심 지표\", \"Key Profitability Metrics\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6\">\n            {profitabilityMetrics.map((item, index) => (\n              <div key={index} className=\"bg-gradient-to-br from-amber-100 to-orange-200 border-2 border-amber-400 rounded-lg p-4 md:p-6 text-center shadow-lg\">\n                <h3 className=\"font-bold text-base md:text-lg mb-2 md:mb-3 text-gray-900\">{item.metric}</h3>\n                <p className=\"text-2xl md:text-4xl font-bold mb-2 md:mb-3 text-amber-800\">{item.value}</p>\n                <p className=\"text-sm md:text-base font-medium text-gray-800\">{item.description}</p>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* First Operations Image - Investment Analysis - Mobile Optimized */}\n      <div className=\"relative w-full mb-4 md:mb-6\">\n        <img \n          src=\"/attached_assets/income-investing-1024x576_1755066961401.webp\" \n          alt={t(\"투자 수익률 분석\", \"Investment Return Analysis\")}\n          className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-blue-300\"\n          style={{\n            objectPosition: 'center center'\n          }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent rounded-lg\"></div>\n        {/* Image Caption */}\n        <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n          <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n            {t(\"체계적인 투자 분석과 안정적인 수익률 관리\", \"Systematic Investment Analysis and Stable Return Management\")}\n          </p>\n        </div>\n      </div>\n\n      {/* 운영비 상세 분석 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-3xl font-bold mb-4 md:mb-6 text-gray-900\">\n            💼 {t(\"운영비 상세 분석\", \"Detailed Operating Cost Analysis\")}\n          </h2>\n          <div className=\"space-y-6 md:space-y-8\">\n            {operatingCosts.map((category, categoryIndex) => (\n              <div key={categoryIndex}>\n                {/* Horse Care Image - Second Image for Horse Care Category */}\n                {categoryIndex === 1 && (\n                  <div className=\"relative w-full mb-4 md:mb-6\">\n                    <img \n                      src=\"/attached_assets/petting horse_1755067178913.avif\" \n                      alt={t(\"마필 관리와 건강관리\", \"Horse Care and Health Management\")}\n                      className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-green-300\"\n                      style={{\n                        objectPosition: 'center center'\n                      }}\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n                    <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n                      <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                        {t(\"전문적인 마필 관리와 건강한 공연 환경\", \"Professional Horse Care and Healthy Performance Environment\")}\n                      </p>\n                    </div>\n                  </div>\n                )}\n\n                {/* Facility Operations Image - Third Image for Facility Operations Category */}\n                {categoryIndex === 2 && (\n                  <div className=\"relative w-full mb-4 md:mb-6\">\n                    <img \n                      src=\"/attached_assets/Integrated-Facilities-Management-Infographic_1755067340550.jpg\" \n                      alt={t(\"시설 운영 관리\", \"Facility Operations Management\")}\n                      className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-purple-300\"\n                      style={{\n                        objectPosition: 'center center'\n                      }}\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n                    <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n                      <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                        {t(\"통합적인 시설 관리와 효율적인 운영 시스템\", \"Integrated Facility Management and Efficient Operations System\")}\n                      </p>\n                    </div>\n                  </div>\n                )}\n\n                {/* Marketing Team Image - Fourth Image for Marketing & Others Category */}\n                {categoryIndex === 3 && (\n                  <div className=\"relative w-full mb-4 md:mb-6\">\n                    <img \n                      src=\"/attached_assets/GettyImages-1374879082_1755067920204.png\" \n                      alt={t(\"마케팅 팀 전략 회의\", \"Marketing Team Strategy Meeting\")}\n                      className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-orange-300\"\n                      style={{\n                        objectPosition: 'center center'\n                      }}\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n                    <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n                      <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                        {t(\"전문적인 마케팅 전략과 효과적인 홍보 활동\", \"Professional Marketing Strategy and Effective Promotional Activities\")}\n                      </p>\n                    </div>\n                  </div>\n                )}\n\n                <h3 className=\"text-lg md:text-2xl font-bold text-gray-900 mb-3 md:mb-4 flex items-center\">\n                  <span className=\"w-8 h-8 md:w-10 md:h-10 bg-amber-700 text-white rounded-full flex items-center justify-center text-sm md:text-lg font-bold mr-3 md:mr-4\">\n                    {categoryIndex + 1}\n                  </span>\n                  {category.category}\n                </h3>\n                <div className=\"bg-gray-50 border-2 border-gray-300 rounded-lg p-4 md:p-6 shadow-md\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow className=\"bg-gray-200\">\n                        <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 py-3 md:py-4\">{t(\"세부 항목\", \"Line Items\")}</TableHead>\n                        <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 text-right py-3 md:py-4\">{t(\"월간 비용\", \"Monthly Cost\")}</TableHead>\n                        <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 text-right py-3 md:py-4\">{t(\"연간 비용\", \"Annual Cost\")}</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {category.items.map((item, itemIndex) => (\n                        <TableRow key={itemIndex} className=\"hover:bg-gray-100 bg-white\">\n                          <TableCell className=\"font-semibold text-gray-900 py-2 md:py-3 text-sm md:text-base\">{item.item}</TableCell>\n                          <TableCell className=\"text-right font-bold text-blue-800 py-2 md:py-3 text-sm md:text-base\">{formatCurrency(item.monthly)}</TableCell>\n                          <TableCell className=\"text-right font-bold text-green-800 py-2 md:py-3 text-sm md:text-base\">{formatCurrency(item.annual)}</TableCell>\n                        </TableRow>\n                      ))}\n                      <TableRow className=\"bg-amber-200 border-t-2 border-amber-400\">\n                        <TableCell className=\"font-bold text-base md:text-lg text-amber-900 py-3 md:py-4\">{t(\"소계\", \"Subtotal\")}</TableCell>\n                        <TableCell className=\"text-right font-bold text-base md:text-lg text-amber-900 py-3 md:py-4\">{formatCurrency(category.total.monthly)}</TableCell>\n                        <TableCell className=\"text-right font-bold text-base md:text-lg text-amber-900 py-3 md:py-4\">{formatCurrency(category.total.annual)}</TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </div>\n              </div>\n            ))}\n            \n            {/* 총 운영비 */}\n            <div className=\"bg-gradient-to-r from-red-700 to-red-800 text-white rounded-lg p-6 md:p-8 shadow-lg border-2 border-red-600\">\n              <div className=\"flex flex-col md:flex-row md:justify-between md:items-center\">\n                <h3 className=\"text-xl md:text-3xl font-bold mb-3 md:mb-0\">{t(\"총 운영비\", \"Total Operating Costs\")}</h3>\n                <div className=\"text-center md:text-right\">\n                  <p className=\"text-2xl md:text-4xl font-bold\">{formatCurrency(totalMonthlyCosts)}<span className=\"text-lg md:text-xl\">/월</span></p>\n                  <p className=\"text-lg md:text-2xl font-semibold\">{formatCurrency(totalAnnualCosts)}<span className=\"text-base md:text-lg\">/년</span></p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 월별 수익 전망 차트 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 md:gap-8\">\n        <Card className=\"bg-white shadow-xl\">\n          <CardContent className=\"p-4 md:p-8\">\n            <h2 className=\"text-xl md:text-3xl font-bold mb-4 md:mb-6 text-gray-900\">\n              📈 {t(\"월별 수익 전망\", \"Monthly Revenue Forecast\")}\n            </h2>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={monthlyRevenueProjection}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"month\" />\n                  <YAxis tickFormatter={(value) => `$${(value / 1000).toFixed(0)}K`} />\n                  <Tooltip formatter={(value) => formatCurrency(Number(value))} />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#D97706\" strokeWidth={3} name={t(\"수익\", \"Revenue\")} />\n                  <Line type=\"monotone\" dataKey=\"costs\" stroke=\"#EF4444\" strokeWidth={3} name={t(\"비용\", \"Costs\")} />\n                  <Line type=\"monotone\" dataKey=\"netProfit\" stroke=\"#059669\" strokeWidth={3} name={t(\"순이익\", \"Net Profit\")} />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-white shadow-xl\">\n          <CardContent className=\"p-4 md:p-8\">\n            <h2 className=\"text-xl md:text-3xl font-bold mb-4 md:mb-6 text-gray-900\">\n              📊 {t(\"연도별 성장 전망\", \"Annual Growth Projection\")}\n            </h2>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={yearlyProjection}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"year\" />\n                  <YAxis tickFormatter={(value) => `$${(value / 1000000).toFixed(1)}M`} />\n                  <Tooltip formatter={(value) => formatCurrency(Number(value))} />\n                  <Legend />\n                  <Bar dataKey=\"revenue\" fill=\"#D97706\" name={t(\"수익\", \"Revenue\")} />\n                  <Bar dataKey=\"netProfit\" fill=\"#059669\" name={t(\"순이익\", \"Net Profit\")} />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* 5년 장기 전망 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-3xl font-bold mb-4 md:mb-6 text-gray-900\">\n            🔮 {t(\"5년 장기 사업 전망\", \"5-Year Long-term Business Projection\")}\n          </h2>\n          <div className=\"bg-gray-50 border-2 border-gray-300 rounded-lg p-3 md:p-4 shadow-md\">\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-gray-200\">\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 py-3 md:py-4\">{t(\"연도\", \"Year\")}</TableHead>\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 text-right py-3 md:py-4\">{t(\"연간 수익\", \"Annual Revenue\")}</TableHead>\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 text-right py-3 md:py-4\">{t(\"운영비\", \"Operating Costs\")}</TableHead>\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 text-right py-3 md:py-4\">{t(\"순이익\", \"Net Profit\")}</TableHead>\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 text-right py-3 md:py-4\">{t(\"ROI (%)\", \"ROI (%)\")}</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {yearlyProjection.map((year, index) => (\n                  <TableRow key={index} className={index === 0 ? \"bg-amber-200\" : \"hover:bg-gray-100 bg-white\"}>\n                    <TableCell className=\"font-bold text-sm md:text-lg text-gray-900 py-2 md:py-3\">{year.year}</TableCell>\n                    <TableCell className=\"text-right font-bold text-sm md:text-lg text-blue-800 py-2 md:py-3\">{formatCurrency(year.revenue)}</TableCell>\n                    <TableCell className=\"text-right font-bold text-sm md:text-lg text-red-700 py-2 md:py-3\">{formatCurrency(year.costs)}</TableCell>\n                    <TableCell className=\"text-right font-bold text-sm md:text-lg text-green-800 py-2 md:py-3\">{formatCurrency(year.netProfit)}</TableCell>\n                    <TableCell className=\"text-right font-bold text-sm md:text-lg text-purple-800 py-2 md:py-3\">{year.roi}%</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n          \n          <div className=\"mt-4 md:mt-6 p-3 md:p-4 bg-green-100 rounded-lg border border-green-300\">\n            <h3 className=\"font-bold text-green-900 mb-2 text-sm md:text-base\">{t(\"5년 누적 성과\", \"5-Year Cumulative Performance\")}</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 md:gap-4 text-center\">\n              <div>\n                <p className=\"text-xs md:text-sm text-green-700 font-medium\">{t(\"총 누적 수익\", \"Total Cumulative Revenue\")}</p>\n                <p className=\"text-xl md:text-2xl font-bold text-green-900\">$32.9M</p>\n              </div>\n              <div>\n                <p className=\"text-xs md:text-sm text-green-700 font-medium\">{t(\"총 누적 순이익\", \"Total Cumulative Net Profit\")}</p>\n                <p className=\"text-xl md:text-2xl font-bold text-green-900\">$29.1M</p>\n              </div>\n              <div>\n                <p className=\"text-xs md:text-sm text-green-700 font-medium\">{t(\"평균 연간 ROI\", \"Average Annual ROI\")}</p>\n                <p className=\"text-xl md:text-2xl font-bold text-green-900\">383%</p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 비용 최적화 전략 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900\">\n            🎯 {t(\"비용 최적화 전략\", \"Cost Optimization Strategies\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8\">\n            <div className=\"bg-green-50 border-2 border-green-200 rounded-lg p-4 md:p-6\">\n              <h3 className=\"text-base md:text-lg font-bold text-green-900 mb-3 md:mb-4\">{t(\"단기 최적화\", \"Short-term Optimization\")}</h3>\n              <ul className=\"space-y-2 md:space-y-3\">\n                <li className=\"flex items-start\">\n                  <span className=\"text-green-600 mr-2 mt-1 font-bold\">✓</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"현지 스태프 비율 확대로 인건비 절감\", \"Increase local staff ratio to reduce labor costs\")}\n                  </span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-green-600 mr-2 mt-1 font-bold\">✓</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"에너지 효율적 설비 도입\", \"Introduce energy-efficient equipment\")}\n                  </span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-green-600 mr-2 mt-1 font-bold\">✓</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"공급업체와 장기 계약을 통한 비용 절감\", \"Cost reduction through long-term supplier contracts\")}\n                  </span>\n                </li>\n              </ul>\n            </div>\n            <div className=\"bg-blue-50 border-2 border-blue-200 rounded-lg p-4 md:p-6\">\n              <h3 className=\"text-base md:text-lg font-bold text-blue-900 mb-3 md:mb-4\">{t(\"장기 최적화\", \"Long-term Optimization\")}</h3>\n              <ul className=\"space-y-2 md:space-y-3\">\n                <li className=\"flex items-start\">\n                  <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"자체 마필 번식 프로그램으로 도입비 절감\", \"Own horse breeding program to reduce acquisition costs\")}\n                  </span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"다목적 시설 활용으로 임대료 최적화\", \"Optimize rent through multi-purpose facility usage\")}\n                  </span>\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                  <span className=\"text-gray-800 text-sm md:text-base font-medium\">\n                    {t(\"디지털 마케팅 강화로 효율적 고객 유치\", \"Efficient customer acquisition through enhanced digital marketing\")}\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":25456},"client/src/pages/revenue-model-page.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function RevenueModelPage() {\n  const { t } = useLanguage();\n  const [dailyShows, setDailyShows] = useState(2);\n  const [audiencePerShow, setAudiencePerShow] = useState(500);\n  const [ticketPrice, setTicketPrice] = useState(20);\n  const [occupancyRate, setOccupancyRate] = useState(50);\n\n  // 계산 로직\n  const actualAudience = Math.round((audiencePerShow * occupancyRate) / 100);\n  const monthlyShows = dailyShows * 30;\n  const monthlyAudience = actualAudience * monthlyShows;\n  const monthlyTicketRevenue = monthlyAudience * ticketPrice;\n  const agencyCommission = monthlyTicketRevenue * 0.25; // $5 commission on $20 ticket = 25%\n  const monthlyNetTicketRevenue = monthlyTicketRevenue - agencyCommission;\n  const annualNetTicketRevenue = monthlyNetTicketRevenue * 12;\n\n  // 부가 수익\n  const avgSpendingPerPerson = 1.5; // $1-2 평균\n  const monthlyAncillaryRevenue = monthlyAudience * avgSpendingPerPerson;\n  const annualAncillaryRevenue = monthlyAncillaryRevenue * 12;\n\n  // 총 수익\n  const totalAnnualRevenue = annualNetTicketRevenue + annualAncillaryRevenue;\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  // 새로운 수익 구조 (첨부 이미지 기준)\n  const totalTicketRevenue = monthlyTicketRevenue * 12;\n  const experienceRevenue = totalTicketRevenue * 0.08; // 8%\n  const souvenirRevenue = totalTicketRevenue * 0.04; // 4%\n  const fnbRevenue = totalTicketRevenue * 0.03; // 3%\n  const totalRevenueNew = totalTicketRevenue + experienceRevenue + souvenirRevenue + fnbRevenue;\n\n  const revenueBreakdown = [\n    { \n      name: t(\"티켓 판매\", \"Ticket Sales\"), \n      value: 85,\n      amount: totalTicketRevenue,\n      color: \"#D97706\"\n    },\n    { \n      name: t(\"체험 프로그램\", \"Experience Programs\"), \n      value: 8,\n      amount: experienceRevenue,\n      color: \"#059669\",\n      description: t(\"승마, 활쏘기 등 공연 후 필요한 관광객\", \"Horse riding, archery for tourists after performances\")\n    },\n    { \n      name: t(\"기념품 판매\", \"Souvenir Sales\"), \n      value: 4,\n      amount: souvenirRevenue,\n      color: \"#3B82F6\",\n      description: t(\"몽골 전통 상품, 경기장 외 매장\", \"Traditional Mongolian products, stores outside venue\")\n    },\n    { \n      name: t(\"F&B 운영\", \"F&B Operations\"), \n      value: 3,\n      amount: fnbRevenue,\n      color: \"#EF4444\",\n      description: t(\"전통 음식 및 음료\", \"Traditional food and beverages\")\n    }\n  ];\n\n  const monthlyProjection = Array.from({ length: 12 }, (_, i) => {\n    const monthlyTotalRevenue = (totalRevenueNew / 12);\n    return {\n      month: t(\n        `${i + 1}월`,\n        ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][i]\n      ),\n      revenue: monthlyTotalRevenue,\n      costs: 65000,\n      profit: monthlyTotalRevenue - 65000\n    };\n  });\n\n  const ticketCalculationSteps = [\n    {\n      step: t(\"1단계\", \"Step 1\"),\n      description: t(\"일일 관객 수\", \"Daily Audience\"),\n      calculation: `${actualAudience}명 × ${dailyShows}회 = ${actualAudience * dailyShows}명/일`,\n      result: `${(actualAudience * dailyShows).toLocaleString()}명/일`\n    },\n    {\n      step: t(\"2단계\", \"Step 2\"), \n      description: t(\"월간 관객 수\", \"Monthly Audience\"),\n      calculation: `${actualAudience * dailyShows}명/일 × 30일 = ${monthlyAudience.toLocaleString()}명/월`,\n      result: `${monthlyAudience.toLocaleString()}명/월`\n    },\n    {\n      step: t(\"3단계\", \"Step 3\"),\n      description: t(\"연간 티켓 총매출\", \"Annual Gross Ticket Revenue\"), \n      calculation: `${monthlyAudience.toLocaleString()}명 × $${ticketPrice} × 12개월 = ${formatCurrency(totalTicketRevenue)}`,\n      result: formatCurrency(totalTicketRevenue)\n    },\n    {\n      step: t(\"3-1단계\", \"Step 3-1\"),\n      description: t(\"여행사 커미션 차감 ($5/티켓)\", \"Travel Agency Commission Deduction ($5/ticket)\"), \n      calculation: `${formatCurrency(totalTicketRevenue)} × 25% = ${formatCurrency(totalTicketRevenue * 0.25)}`,\n      result: `${formatCurrency(totalTicketRevenue * 0.75)} (순수익)`\n    },\n    {\n      step: t(\"4단계\", \"Step 4\"),\n      description: t(\"체험 프로그램 수익 (8%)\", \"Experience Program Revenue (8%)\"),\n      calculation: `${formatCurrency(totalTicketRevenue * 0.75)} × 8% = ${formatCurrency(experienceRevenue)}`,\n      result: formatCurrency(experienceRevenue)\n    },\n    {\n      step: t(\"5단계\", \"Step 5\"),\n      description: t(\"기념품 판매 수익 (4%)\", \"Souvenir Sales Revenue (4%)\"),\n      calculation: `${formatCurrency(totalTicketRevenue)} × 4% = ${formatCurrency(souvenirRevenue)}`,\n      result: formatCurrency(souvenirRevenue)\n    },\n    {\n      step: t(\"6단계\", \"Step 6\"),\n      description: t(\"F&B 운영 수익 (3%)\", \"F&B Operations Revenue (3%)\"),\n      calculation: `${formatCurrency(totalTicketRevenue)} × 3% = ${formatCurrency(fnbRevenue)}`,\n      result: formatCurrency(fnbRevenue)\n    },\n    {\n      step: t(\"7단계\", \"Step 7\"),\n      description: t(\"연간 총 수익 (커미션 차감 후)\", \"Total Annual Revenue (After Commission Deduction)\"),\n      calculation: `${formatCurrency(totalTicketRevenue * 0.75)} + ${formatCurrency(experienceRevenue)} + ${formatCurrency(souvenirRevenue)} + ${formatCurrency(fnbRevenue)}`,\n      result: formatCurrency(totalRevenueNew * 0.75 + experienceRevenue + souvenirRevenue + fnbRevenue)\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6 md:space-y-8 bg-black min-h-screen text-white p-4 md:p-8\">\n      <div className=\"text-center\">\n        <h1 className=\"text-2xl md:text-5xl font-bold text-white mb-4 md:mb-6\">\n          🎟️ {t(\"수익 모델 상세 분석\", \"Detailed Revenue Model Analysis\")}\n        </h1>\n        <p className=\"text-base md:text-2xl text-gray-200 max-w-4xl mx-auto px-2\">\n          {t(\"체계적이고 투명한 수익 구조 분석과 실시간 계산 시뮬레이션\", \n             \"Systematic and transparent revenue structure analysis with real-time calculation simulation\")}\n        </p>\n      </div>\n\n      {/* 수익 계산기 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-3xl font-bold mb-4 md:mb-6 text-gray-900\">\n            🧮 {t(\"실시간 수익 계산기\", \"Real-time Revenue Calculator\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 md:gap-6 mb-6 md:mb-8\">\n            <div>\n              <Label htmlFor=\"dailyShows\" className=\"block text-lg font-bold text-gray-900 mb-3\">\n                {t(\"일일 공연 횟수\", \"Daily Shows\")}\n              </Label>\n              <Input\n                id=\"dailyShows\"\n                type=\"number\"\n                value={dailyShows}\n                onChange={(e) => setDailyShows(Number(e.target.value))}\n                min={1}\n                max={4}\n                className=\"focus:ring-2 focus:ring-amber-500 border-2 border-amber-300 text-lg font-bold p-3\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"audiencePerShow\" className=\"block text-lg font-bold text-gray-900 mb-3\">\n                {t(\"회당 수용 인원\", \"Capacity per Show\")}\n              </Label>\n              <Input\n                id=\"audiencePerShow\"\n                type=\"number\"\n                value={audiencePerShow}\n                onChange={(e) => setAudiencePerShow(Number(e.target.value))}\n                min={100}\n                max={1000}\n                className=\"focus:ring-2 focus:ring-amber-500 border-2 border-amber-300 text-lg font-bold p-3\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"ticketPrice\" className=\"block text-lg font-bold text-gray-900 mb-3\">\n                {t(\"티켓 가격 ($)\", \"Ticket Price ($)\")}\n              </Label>\n              <Input\n                id=\"ticketPrice\"\n                type=\"number\"\n                value={ticketPrice}\n                onChange={(e) => setTicketPrice(Number(e.target.value))}\n                min={10}\n                max={50}\n                className=\"focus:ring-2 focus:ring-amber-500 border-2 border-amber-300 text-lg font-bold p-3\"\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"occupancyRate\" className=\"block text-lg font-bold text-gray-900 mb-3\">\n                {t(\"점유율 (%)\", \"Occupancy Rate (%)\")}\n              </Label>\n              <Input\n                id=\"occupancyRate\"\n                type=\"number\"\n                value={occupancyRate}\n                onChange={(e) => setOccupancyRate(Number(e.target.value))}\n                min={30}\n                max={100}\n                className=\"focus:ring-2 focus:ring-amber-500 border-2 border-amber-300 text-lg font-bold p-3\"\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"bg-gradient-to-r from-blue-100 to-blue-200 border-2 border-blue-400 p-6 rounded-lg text-center shadow-md\">\n              <p className=\"text-lg text-blue-800 font-bold\">{t(\"월간 총수익\", \"Monthly Total Revenue\")}</p>\n              <p className=\"text-3xl font-bold text-blue-900\">\n                {formatCurrency(totalRevenueNew / 12)}\n              </p>\n            </div>\n            <div className=\"bg-gradient-to-r from-green-100 to-green-200 border-2 border-green-400 p-6 rounded-lg text-center shadow-md\">\n              <p className=\"text-lg text-green-800 font-bold\">{t(\"연간 총수익\", \"Annual Total Revenue\")}</p>\n              <p className=\"text-3xl font-bold text-green-900\">\n                {formatCurrency(totalRevenueNew)}\n              </p>\n            </div>\n            <div className=\"bg-gradient-to-r from-purple-100 to-purple-200 border-2 border-purple-400 p-6 rounded-lg text-center shadow-md\">\n              <p className=\"text-lg text-purple-800 font-bold\">{t(\"월간 관객 수\", \"Monthly Audience\")}</p>\n              <p className=\"text-3xl font-bold text-purple-900\">\n                {monthlyAudience.toLocaleString()}명\n              </p>\n            </div>\n            <div className=\"bg-gradient-to-r from-orange-100 to-orange-200 border-2 border-orange-400 p-6 rounded-lg text-center shadow-md\">\n              <p className=\"text-lg text-orange-800 font-bold\">{t(\"연간 관객 수\", \"Annual Audience\")}</p>\n              <p className=\"text-3xl font-bold text-orange-900\">\n                {(monthlyAudience * 12).toLocaleString()}명\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* First Revenue Feature Image - Business Legal Documents - Mobile Optimized */}\n      <div className=\"relative w-full mb-4 md:mb-6\">\n        <img \n          src=\"/attached_assets/LitigationSupportServices_HonoluluHawaii_1755066330055.jpg\" \n          alt={t(\"사업 계약 및 법적 문서\", \"Business Contracts and Legal Documents\")}\n          className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-amber-300\"\n          style={{\n            objectPosition: 'center center'\n          }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n        {/* Image Caption */}\n        <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n          <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n            {t(\"투명한 수익 분석과 법적 근거 마련\", \"Transparent Revenue Analysis and Legal Foundation\")}\n          </p>\n        </div>\n      </div>\n\n      {/* 티켓 수익 계산 단계 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-3xl font-bold mb-4 md:mb-6 text-gray-900\">\n            📝 {t(\"티켓 판매 수익 계산 단계\", \"Ticket Revenue Calculation Steps\")}\n          </h2>\n          <div className=\"bg-yellow-100 border-2 border-yellow-400 rounded-lg p-3 md:p-4 mb-4 md:mb-6\">\n            <p className=\"text-gray-900 font-bold text-sm md:text-base\">\n              💡 {t(\"주요 정보: 티켓 가격 $20, 여행사 커미션 $5 (25%)\", \"Key Info: Ticket price $20, Travel agency commission $5 (25%)\")}\n            </p>\n          </div>\n          <div className=\"space-y-3 md:space-y-6\">\n            {ticketCalculationSteps.map((step, index) => (\n              <div key={index} className=\"flex items-start space-x-3 md:space-x-6 p-3 md:p-6 bg-gray-50 border-2 border-gray-200 rounded-lg shadow-md\">\n                <div className=\"w-8 h-8 md:w-12 md:h-12 bg-amber-600 text-white rounded-full flex items-center justify-center font-bold text-sm md:text-lg flex-shrink-0\">\n                  {index + 1}\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"font-bold text-sm md:text-lg text-gray-900\">{step.step}: {step.description}</h3>\n                  <p className=\"text-gray-700 mt-1 md:mt-2 text-xs md:text-base font-medium\">{step.calculation}</p>\n                  <p className=\"font-bold text-amber-700 mt-2 md:mt-3 text-sm md:text-lg\">{step.result}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 수익 구조 분석 차트 */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 md:gap-8\">\n        <Card className=\"bg-white shadow-xl\">\n          <CardContent className=\"p-4 md:p-8\">\n            <h2 className=\"text-xl md:text-3xl font-bold mb-4 md:mb-6 text-gray-900\">\n              📊 {t(\"수익 구조 분석\", \"Revenue Structure Analysis\")}\n            </h2>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={revenueBreakdown}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={100}\n                    dataKey=\"value\"\n                    strokeWidth={0}\n                  >\n                    {revenueBreakdown.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip \n                    formatter={(value, name) => [`${value}% (${formatCurrency(revenueBreakdown.find(r => r.name === name)?.amount || 0)})`, name]}\n                    labelStyle={{ color: '#374151' }}\n                  />\n                  <Legend />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-white shadow-xl\">\n          <CardContent className=\"p-4 md:p-8\">\n            <h2 className=\"text-xl md:text-3xl font-bold mb-4 md:mb-6 text-gray-900\">\n              📈 {t(\"월별 수익 전망\", \"Monthly Revenue Projection\")}\n            </h2>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={monthlyProjection}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"month\" />\n                  <YAxis tickFormatter={(value) => `$${(value / 1000).toFixed(0)}K`} />\n                  <Tooltip formatter={(value) => formatCurrency(Number(value))} />\n                  <Legend />\n                  <Bar dataKey=\"revenue\" fill=\"#D97706\" name={t(\"수익\", \"Revenue\")} />\n                  <Bar dataKey=\"costs\" fill=\"#EF4444\" name={t(\"비용\", \"Costs\")} />\n                  <Bar dataKey=\"profit\" fill=\"#059669\" name={t(\"순이익\", \"Net Profit\")} />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Second Revenue Feature Image - Profit Growth - Mobile Optimized */}\n      <div className=\"relative w-full mb-4 md:mb-6\">\n        <img \n          src=\"/attached_assets/profits_1755066494786.png\" \n          alt={t(\"수익 성장 분석\", \"Profit Growth Analysis\")}\n          className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-green-300\"\n          style={{\n            objectPosition: 'center center'\n          }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent rounded-lg\"></div>\n        {/* Image Caption */}\n        <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n          <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n            {t(\"지속적인 수익 성장과 안정적인 투자 수익률\", \"Continuous Profit Growth and Stable Investment Returns\")}\n          </p>\n        </div>\n      </div>\n\n      {/* 월간 수익 분석 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-3xl font-bold mb-4 md:mb-6 text-gray-900\">\n            📅 {t(\"월간 수익 분석\", \"Monthly Revenue Analysis\")}\n          </h2>\n          <div className=\"bg-gray-50 border-2 border-gray-200 rounded-lg p-3 md:p-4 shadow-md\">\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-amber-100\">\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 py-2 md:py-4\">{t(\"항목\", \"Category\")}</TableHead>\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 py-2 md:py-4\">{t(\"1인당 평균 지출\", \"Avg. Spend per Person\")}</TableHead>\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 py-2 md:py-4\">{t(\"월간 수익\", \"Monthly Revenue\")}</TableHead>\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 py-2 md:py-4\">{t(\"비중\", \"Share\")}</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                <TableRow className=\"hover:bg-gray-50\">\n                  <TableCell className=\"font-medium text-gray-800 py-2 md:py-3 text-xs md:text-base\">{t(\"티켓 판매\", \"Ticket Sales\")}</TableCell>\n                  <TableCell className=\"font-bold text-blue-700 py-2 md:py-3 text-xs md:text-base\">$20.00</TableCell>\n                  <TableCell className=\"font-bold text-orange-700 py-2 md:py-3 text-xs md:text-base\">{formatCurrency(monthlyTicketRevenue)}</TableCell>\n                  <TableCell className=\"font-bold text-green-700 py-2 md:py-3 text-xs md:text-base\">85%</TableCell>\n                </TableRow>\n                <TableRow className=\"hover:bg-gray-50\">\n                  <TableCell className=\"font-medium text-gray-800 py-2 md:py-3 text-xs md:text-base\">{t(\"체험 프로그램\", \"Experience Programs\")}</TableCell>\n                  <TableCell className=\"font-bold text-blue-700 py-2 md:py-3 text-xs md:text-base\">$1.60</TableCell>\n                  <TableCell className=\"font-bold text-green-700 py-2 md:py-3 text-xs md:text-base\">{formatCurrency(experienceRevenue / 12)}</TableCell>\n                  <TableCell className=\"font-bold text-green-700 py-2 md:py-3 text-xs md:text-base\">8%</TableCell>\n                </TableRow>\n                <TableRow className=\"hover:bg-gray-50\">\n                  <TableCell className=\"font-medium text-gray-800 py-2 md:py-3 text-xs md:text-base\">{t(\"기념품 판매\", \"Souvenir Sales\")}</TableCell>\n                  <TableCell className=\"font-bold text-blue-700 py-2 md:py-3 text-xs md:text-base\">$0.80</TableCell>\n                  <TableCell className=\"font-bold text-blue-700 py-2 md:py-3 text-xs md:text-base\">{formatCurrency(souvenirRevenue / 12)}</TableCell>\n                  <TableCell className=\"font-bold text-green-700 py-2 md:py-3 text-xs md:text-base\">4%</TableCell>\n                </TableRow>\n                <TableRow className=\"hover:bg-gray-50\">\n                  <TableCell className=\"font-medium text-gray-800 py-2 md:py-3 text-xs md:text-base\">{t(\"F&B 운영\", \"F&B Operations\")}</TableCell>\n                  <TableCell className=\"font-bold text-blue-700 py-2 md:py-3 text-xs md:text-base\">$0.60</TableCell>\n                  <TableCell className=\"font-bold text-red-700 py-2 md:py-3 text-xs md:text-base\">{formatCurrency(fnbRevenue / 12)}</TableCell>\n                  <TableCell className=\"font-bold text-green-700 py-2 md:py-3 text-xs md:text-base\">3%</TableCell>\n                </TableRow>\n                <TableRow className=\"bg-amber-200 border-t-2 border-amber-400\">\n                  <TableCell className=\"font-bold text-sm md:text-lg text-amber-800 py-3 md:py-4\">{t(\"월간 총 수익\", \"Monthly Total Revenue\")}</TableCell>\n                  <TableCell className=\"font-bold text-sm md:text-lg text-amber-800 py-3 md:py-4\">$23.00</TableCell>\n                  <TableCell className=\"font-bold text-sm md:text-xl text-amber-800 py-3 md:py-4\">{formatCurrency(totalRevenueNew / 12)}</TableCell>\n                  <TableCell className=\"font-bold text-sm md:text-lg text-amber-800 py-3 md:py-4\">100%</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 연간 수익 분석 */}\n      <Card className=\"bg-white shadow-xl\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-3xl font-bold mb-4 md:mb-6 text-gray-900\">\n            📈 {t(\"연간 수익 분석\", \"Annual Revenue Analysis\")}\n          </h2>\n          <div className=\"bg-gray-50 border-2 border-gray-200 rounded-lg p-3 md:p-4 shadow-md\">\n            <Table>\n              <TableHeader>\n                <TableRow className=\"bg-teal-100\">\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 py-2 md:py-4\">{t(\"항목\", \"Category\")}</TableHead>\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 py-2 md:py-4\">{t(\"연간 관객 수\", \"Annual Audience\")}</TableHead>\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 py-2 md:py-4\">{t(\"연간 수익\", \"Annual Revenue\")}</TableHead>\n                  <TableHead className=\"font-bold text-sm md:text-lg text-gray-900 py-2 md:py-4\">{t(\"비중\", \"Share\")}</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                <TableRow className=\"hover:bg-gray-50\">\n                  <TableCell className=\"font-medium text-gray-800 py-2 md:py-3 text-xs md:text-base\">{t(\"티켓 판매\", \"Ticket Sales\")}</TableCell>\n                  <TableCell className=\"font-bold text-blue-700 py-2 md:py-3 text-xs md:text-base\">{(monthlyAudience * 12).toLocaleString()}명</TableCell>\n                  <TableCell className=\"font-bold text-orange-700 py-2 md:py-3 text-xs md:text-base\">{formatCurrency(totalTicketRevenue)}</TableCell>\n                  <TableCell className=\"font-bold text-green-700 py-2 md:py-3 text-xs md:text-base\">85%</TableCell>\n                </TableRow>\n                <TableRow className=\"hover:bg-gray-50\">\n                  <TableCell className=\"font-medium text-gray-800 py-2 md:py-3 text-xs md:text-base\">{t(\"체험 프로그램\", \"Experience Programs\")}</TableCell>\n                  <TableCell className=\"font-bold text-blue-700 py-2 md:py-3 text-xs md:text-base\">{(monthlyAudience * 12).toLocaleString()}명</TableCell>\n                  <TableCell className=\"font-bold text-green-700 py-2 md:py-3 text-xs md:text-base\">{formatCurrency(experienceRevenue)}</TableCell>\n                  <TableCell className=\"font-bold text-green-700 py-2 md:py-3 text-xs md:text-base\">8%</TableCell>\n                </TableRow>\n                <TableRow className=\"hover:bg-gray-50\">\n                  <TableCell className=\"font-medium text-gray-800 py-2 md:py-3 text-xs md:text-base\">{t(\"기념품 판매\", \"Souvenir Sales\")}</TableCell>\n                  <TableCell className=\"font-bold text-blue-700 py-2 md:py-3 text-xs md:text-base\">{(monthlyAudience * 12).toLocaleString()}명</TableCell>\n                  <TableCell className=\"font-bold text-blue-700 py-2 md:py-3 text-xs md:text-base\">{formatCurrency(souvenirRevenue)}</TableCell>\n                  <TableCell className=\"font-bold text-green-700 py-2 md:py-3 text-xs md:text-base\">4%</TableCell>\n                </TableRow>\n                <TableRow className=\"hover:bg-gray-50\">\n                  <TableCell className=\"font-medium text-gray-800 py-2 md:py-3 text-xs md:text-base\">{t(\"F&B 운영\", \"F&B Operations\")}</TableCell>\n                  <TableCell className=\"font-bold text-blue-700 py-2 md:py-3 text-xs md:text-base\">{(monthlyAudience * 12).toLocaleString()}명</TableCell>\n                  <TableCell className=\"font-bold text-red-700 py-2 md:py-3 text-xs md:text-base\">{formatCurrency(fnbRevenue)}</TableCell>\n                  <TableCell className=\"font-bold text-green-700 py-2 md:py-3 text-xs md:text-base\">3%</TableCell>\n                </TableRow>\n                <TableRow className=\"bg-teal-200 border-t-2 border-teal-400\">\n                  <TableCell className=\"font-bold text-sm md:text-lg text-teal-800 py-3 md:py-4\">{t(\"연간 총 수익\", \"Annual Total Revenue\")}</TableCell>\n                  <TableCell className=\"font-bold text-sm md:text-lg text-teal-800 py-3 md:py-4\">{(monthlyAudience * 12).toLocaleString()}명</TableCell>\n                  <TableCell className=\"font-bold text-sm md:text-xl text-teal-800 py-3 md:py-4\">{formatCurrency(totalRevenueNew)}</TableCell>\n                  <TableCell className=\"font-bold text-sm md:text-lg text-teal-800 py-3 md:py-4\">100%</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </div>\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}","size_bytes":26403},"client/src/pages/risk-management-page.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function RiskManagementPage() {\n  const { t } = useLanguage();\n\n  const riskCategories = [\n    {\n      icon: \"🐎\",\n      title: t(\"운영 리스크\", \"Operational Risks\"),\n      color: \"bg-red-100\",\n      risks: [\n        {\n          risk: t(\"마필 건강 및 안전\", \"Horse Health & Safety\"),\n          impact: t(\"중간\", \"Medium\"),\n          probability: t(\"중간\", \"Medium\"),\n          mitigation: [\n            t(\"정기적인 수의사 검진 및 예방 접종\", \"Regular veterinary checkups and vaccinations\"),\n            t(\"전문적인 마필 관리 팀 운영\", \"Professional horse care team operations\"),\n            t(\"비상 상황 대응 매뉴얼 및 훈련\", \"Emergency response manual and training\"),\n            t(\"마필 보험 가입\", \"Horse insurance coverage\")\n          ]\n        },\n        {\n          risk: t(\"기수 및 스태프 부상\", \"Rider & Staff Injuries\"),\n          impact: t(\"중간\", \"Medium\"),\n          probability: t(\"중간\", \"Medium\"),\n          mitigation: [\n            t(\"안전 장비 착용 의무화\", \"Mandatory safety equipment usage\"),\n            t(\"정기적인 안전 교육 및 훈련\", \"Regular safety education and training\"),\n            t(\"의료진 상주 및 응급처치 시설\", \"On-site medical staff and first aid facilities\"),\n            t(\"포괄적인 상해 보험 가입\", \"Comprehensive injury insurance coverage\")\n          ]\n        }\n      ]\n    },\n    {\n      icon: \"🏛️\",\n      title: t(\"정치적/법적 리스크\", \"Political/Legal Risks\"),\n      color: \"bg-orange-100\",\n      risks: [\n        {\n          risk: t(\"정부 정책 변화\", \"Government Policy Changes\"),\n          impact: t(\"중간\", \"Medium\"),\n          probability: t(\"매우 낮음\", \"Very Low\"),\n          mitigation: [\n            t(\"현지 정부와의 긴밀한 협력 관계 유지\", \"Maintain close cooperation with local government\"),\n            t(\"관광 산업 발전에 기여하는 사업 모델\", \"Business model contributing to tourism development\"),\n            t(\"법적 전문가와의 지속적 자문\", \"Ongoing consultation with legal experts\"),\n            t(\"정책 변화에 대한 모니터링 시스템\", \"Policy change monitoring system\")\n          ]\n        },\n        {\n          risk: t(\"라이센스 및 허가 이슈\", \"License & Permit Issues\"),\n          impact: t(\"중간\", \"Medium\"),\n          probability: t(\"매우 낮음\", \"Very Low\"),\n          mitigation: [\n            t(\"사전 철저한 법적 검토\", \"Thorough legal review in advance\"),\n            t(\"현지 법무법인과의 파트너십\", \"Partnership with local law firm\"),\n            t(\"정기적인 컴플라이언스 점검\", \"Regular compliance checks\"),\n            t(\"허가 갱신 일정 관리 시스템\", \"Permit renewal schedule management system\")\n          ]\n        }\n      ]\n    },\n    {\n      icon: \"🌦️\",\n      title: t(\"시장 및 환경 리스크\", \"Market & Environmental Risks\"),\n      color: \"bg-yellow-100\",\n      risks: [\n        {\n          risk: t(\"관광객 수 변동\", \"Tourist Number Fluctuations\"),\n          impact: t(\"중간\", \"Medium\"),\n          probability: t(\"중간\", \"Medium\"),\n          mitigation: [\n            t(\"다양한 고객층 타겟팅\", \"Target diverse customer segments\"),\n            t(\"오프시즌 특별 프로그램 운영\", \"Special off-season programs\"),\n            t(\"현지 고객 및 기업 이벤트 유치\", \"Attract local customers and corporate events\"),\n            t(\"유연한 요금제 및 패키지 상품\", \"Flexible pricing and package deals\")\n          ]\n        },\n        {\n          risk: t(\"기후 변화 및 날씨\", \"Climate Change & Weather\"),\n          impact: t(\"중간\", \"Medium\"),\n          probability: t(\"높음\", \"High\"),\n          mitigation: [\n            t(\"실내외 겸용 공연장 설계\", \"Indoor/outdoor hybrid venue design\"),\n            t(\"우기 대비 대체 프로그램\", \"Alternative programs for rainy season\"),\n            t(\"날씨 보험 가입\", \"Weather insurance coverage\"),\n            t(\"계절별 운영 계획 수립\", \"Seasonal operation planning\")\n          ]\n        }\n      ]\n    },\n    {\n      icon: \"💰\",\n      title: t(\"재무적 리스크\", \"Financial Risks\"),\n      color: \"bg-blue-100\",\n      risks: [\n        {\n          risk: t(\"환율 변동\", \"Exchange Rate Fluctuations\"),\n          impact: t(\"중간\", \"Medium\"),\n          probability: t(\"매우 낮음\", \"Very Low\"),\n          mitigation: [\n            t(\"현지 통화로의 수익 다각화\", \"Diversify revenue in local currency\"),\n            t(\"환율 헤징 상품 활용\", \"Use currency hedging products\"),\n            t(\"달러화 기준 계약 체결\", \"USD-based contracts where possible\"),\n            t(\"정기적인 환율 영향 분석\", \"Regular exchange rate impact analysis\")\n          ]\n        },\n        {\n          risk: t(\"초기 투자금 회수 지연\", \"Delayed Investment Recovery\"),\n          impact: t(\"중간\", \"Medium\"),\n          probability: t(\"매우 낮음\", \"Very Low\"),\n          mitigation: [\n            t(\"보수적인 수익 예측 및 계획\", \"Conservative revenue forecasting and planning\"),\n            t(\"6개월치 운영비 예비자금\", \"6-month operating expense reserve\"),\n            t(\"단계적 투자 및 확장 계획\", \"Phased investment and expansion plan\"),\n            t(\"다양한 수익원 확보\", \"Secure diversified revenue streams\")\n          ]\n        }\n      ]\n    }\n  ];\n\n  const contingencyPlanning = [\n    {\n      scenario: t(\"팬데믹 상황\", \"Pandemic Situation\"),\n      impact: t(\"관광객 급감, 운영 제한\", \"Sharp tourist decline, operational restrictions\"),\n      responses: [\n        t(\"온라인 버추얼 공연 서비스\", \"Online virtual performance services\"),\n        t(\"현지 고객 대상 특별 프로그램\", \"Special programs for local customers\"),\n        t(\"운영비 축소 및 인력 조정\", \"Reduce operating costs and adjust workforce\"),\n        t(\"정부 지원 프로그램 활용\", \"Utilize government support programs\")\n      ]\n    },\n    {\n      scenario: t(\"경쟁자 출현\", \"Competitor Emergence\"),\n      impact: t(\"시장 점유율 하락, 가격 경쟁\", \"Market share decline, price competition\"),\n      responses: [\n        t(\"차별화된 프리미엄 서비스\", \"Differentiated premium services\"),\n        t(\"고객 충성도 프로그램 강화\", \"Strengthen customer loyalty programs\"),\n        t(\"기술 혁신을 통한 경쟁력 확보\", \"Secure competitiveness through technological innovation\"),\n        t(\"전략적 파트너십 확대\", \"Expand strategic partnerships\")\n      ]\n    },\n    {\n      scenario: t(\"주요 스태프 이탈\", \"Key Staff Departure\"),\n      impact: t(\"운영 중단, 서비스 질 저하\", \"Operation disruption, service quality decline\"),\n      responses: [\n        t(\"백업 인력 및 교육 시스템\", \"Backup personnel and training systems\"),\n        t(\"경쟁력 있는 보상 패키지\", \"Competitive compensation packages\"),\n        t(\"지속적인 인재 개발 프로그램\", \"Continuous talent development programs\"),\n        t(\"지식 관리 시스템 구축\", \"Establish knowledge management system\")\n      ]\n    }\n  ];\n\n  const insuranceCoverage = [\n    {\n      type: t(\"일반 책임 보험\", \"General Liability Insurance\"),\n      coverage: t(\"관객 및 제3자 손해\", \"Audience and third-party damages\"),\n      amount: \"$2M\",\n      premium: \"$15,000/년\"\n    },\n    {\n      type: t(\"마필 보험\", \"Horse Insurance\"),\n      coverage: t(\"마필 사망, 부상, 도난\", \"Horse death, injury, theft\"),\n      amount: \"$500K\",\n      premium: \"$25,000/년\"\n    },\n    {\n      type: t(\"사업 중단 보험\", \"Business Interruption Insurance\"),\n      coverage: t(\"운영 중단으로 인한 손실\", \"Loss due to operation interruption\"),\n      amount: \"$1M\",\n      premium: \"$12,000/년\"\n    },\n    {\n      type: t(\"재산 보험\", \"Property Insurance\"),\n      coverage: t(\"시설 및 장비 손상\", \"Facility and equipment damage\"),\n      amount: \"$3M\",\n      premium: \"$18,000/년\"\n    },\n    {\n      type: t(\"근로자 상해 보험\", \"Workers' Compensation\"),\n      coverage: t(\"직원 업무상 재해\", \"Employee workplace injuries\"),\n      amount: t(\"법정 기준\", \"Legal Standard\"),\n      premium: \"$8,000/년\"\n    }\n  ];\n\n  const riskMatrix = [\n    { risk: t(\"마필 건강 이슈\", \"Horse Health Issues\"), impact: 3, probability: 3, score: 9 },\n    { risk: t(\"스태프 부상\", \"Staff Injuries\"), impact: 3, probability: 3, score: 9 },\n    { risk: t(\"정책 변화\", \"Policy Changes\"), impact: 3, probability: 1, score: 3 },\n    { risk: t(\"관광객 감소\", \"Tourist Decline\"), impact: 3, probability: 3, score: 9 },\n    { risk: t(\"환율 변동\", \"Exchange Rate\"), impact: 2, probability: 1, score: 2 },\n    { risk: t(\"기후 영향\", \"Climate Impact\"), impact: 3, probability: 3, score: 9 },\n    { risk: t(\"경쟁자 출현\", \"Competition\"), impact: 3, probability: 2, score: 6 },\n    { risk: t(\"라이센스 이슈\", \"License Issues\"), impact: 3, probability: 1, score: 3 }\n  ];\n\n  const getRiskLevel = (score: number) => {\n    if (score >= 12) return { level: t(\"높음\", \"High\"), color: \"bg-red-500\" };\n    if (score >= 8) return { level: t(\"중간\", \"Medium\"), color: \"bg-yellow-500\" };\n    if (score >= 4) return { level: t(\"낮음\", \"Low\"), color: \"bg-green-500\" };\n    return { level: t(\"매우 낮음\", \"Very Low\"), color: \"bg-blue-500\" };\n  };\n\n  return (\n    <div className=\"space-y-8 bg-black min-h-screen text-white p-8\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold text-white mb-4\">\n          🛡️ {t(\"리스크 관리 전략\", \"Risk Management Strategy\")}\n        </h1>\n        <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\n          {t(\"체계적인 위험 분석과 대응 전략을 통한 안정적인 사업 운영 보장\", \n             \"Ensuring stable business operations through systematic risk analysis and response strategies\")}\n        </p>\n      </div>\n\n      {/* 리스크 매트릭스 */}\n      <Card className=\"bg-white/90 backdrop-blur-md shadow-xl border border-white/30\">\n        <CardContent className=\"p-8\">\n          <h2 className=\"text-2xl font-bold mb-6 text-gray-900 drop-shadow-[1px_1px_2px_rgba(255,255,255,0.8)]\">\n            📊 {t(\"리스크 평가 매트릭스\", \"Risk Assessment Matrix\")}\n          </h2>\n          {/* Mobile-optimized responsive table */}\n          <div className=\"block md:hidden\">\n            {/* Mobile card layout */}\n            <div className=\"space-y-4\">\n              {riskMatrix.map((item, index) => {\n                const riskLevel = getRiskLevel(item.score);\n                return (\n                  <div key={index} className=\"bg-white border-2 border-gray-300 rounded-lg p-4 shadow-md\">\n                    <div className=\"flex justify-between items-start mb-3\">\n                      <h3 className=\"font-bold text-gray-900 text-sm flex-1 mr-2\">{item.risk}</h3>\n                      <span className={`px-2 py-1 rounded-full text-white text-xs font-bold shadow-lg ${riskLevel.color}`}>\n                        {riskLevel.level}\n                      </span>\n                    </div>\n                    <div className=\"grid grid-cols-3 gap-3 text-xs\">\n                      <div className=\"text-center\">\n                        <div className=\"font-semibold text-gray-700 mb-1\">{t(\"영향도\", \"Impact\")}</div>\n                        <div className=\"flex justify-center\">\n                          {Array.from({ length: item.impact }, (_, i) => (\n                            <span key={i} className=\"text-red-600 text-sm\">●</span>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"font-semibold text-gray-700 mb-1\">{t(\"확률\", \"Probability\")}</div>\n                        <div className=\"flex justify-center\">\n                          {Array.from({ length: item.probability }, (_, i) => (\n                            <span key={i} className=\"text-blue-600 text-sm\">●</span>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"font-semibold text-gray-700 mb-1\">{t(\"점수\", \"Score\")}</div>\n                        <div className=\"font-bold text-gray-900 text-lg\">{item.score}</div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Desktop table layout */}\n          <div className=\"hidden md:block overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left p-3 font-semibold text-gray-900 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"위험 요소\", \"Risk Factor\")}</th>\n                  <th className=\"text-center p-3 font-semibold text-gray-900 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"영향도\", \"Impact\")}</th>\n                  <th className=\"text-center p-3 font-semibold text-gray-900 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"발생 확률\", \"Probability\")}</th>\n                  <th className=\"text-center p-3 font-semibold text-gray-900 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"위험 점수\", \"Risk Score\")}</th>\n                  <th className=\"text-center p-3 font-semibold text-gray-900 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"위험 수준\", \"Risk Level\")}</th>\n                </tr>\n              </thead>\n              <tbody>\n                {riskMatrix.map((item, index) => {\n                  const riskLevel = getRiskLevel(item.score);\n                  return (\n                    <tr key={index} className=\"border-b border-gray-200\">\n                      <td className=\"p-3 font-bold text-gray-900\">{item.risk}</td>\n                      <td className=\"p-3 text-center\">\n                        <div className=\"flex justify-center\">\n                          {Array.from({ length: item.impact }, (_, i) => (\n                            <span key={i} className=\"text-red-600 text-lg\">●</span>\n                          ))}\n                        </div>\n                      </td>\n                      <td className=\"p-3 text-center\">\n                        <div className=\"flex justify-center\">\n                          {Array.from({ length: item.probability }, (_, i) => (\n                            <span key={i} className=\"text-blue-600 text-lg\">●</span>\n                          ))}\n                        </div>\n                      </td>\n                      <td className=\"p-3 text-center font-bold text-gray-900 text-lg\">{item.score}</td>\n                      <td className=\"p-3 text-center\">\n                        <span className={`px-3 py-1 rounded-full text-white text-sm font-bold shadow-lg ${riskLevel.color}`}>\n                          {riskLevel.level}\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          <div className=\"mt-4 text-xs md:text-sm text-gray-800 font-bold bg-gray-100 p-3 rounded-lg\">\n            <p className=\"mb-1\">{t(\"영향도/발생확률: 1 (매우낮음) ~ 5 (매우높음)\", \"Impact/Probability: 1 (Very Low) ~ 5 (Very High)\")}</p>\n            <p>{t(\"위험점수 = 영향도 × 발생확률\", \"Risk Score = Impact × Probability\")}</p>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* 카테고리별 리스크 분석 */}\n      <div className=\"space-y-6\">\n        {riskCategories.map((category, categoryIndex) => (\n          <Card key={categoryIndex} className=\"bg-white/90 backdrop-blur-md shadow-xl border border-white/30\">\n            <CardContent className=\"p-8\">\n              {/* Operational Risks Image - First Image */}\n              {categoryIndex === 0 && (\n                <div className=\"relative w-full mb-4 md:mb-6\">\n                  <img \n                    src=\"/attached_assets/what-is-management_1755068151092.jpg\" \n                    alt={t(\"운영 관리 전략\", \"Operations Management Strategy\")}\n                    className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-red-300\"\n                    style={{\n                      objectPosition: 'center center'\n                    }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent rounded-lg\"></div>\n                  <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n                    <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                      {t(\"체계적인 운영 관리와 리스크 최소화 전략\", \"Systematic Operations Management and Risk Minimization Strategy\")}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {/* Market & Environmental Risks Image - Second Image */}\n              {categoryIndex === 2 && (\n                <div className=\"relative w-full mb-4 md:mb-6\">\n                  <img \n                    src=\"/attached_assets/service-leadership-rules-header_1755068245593.webp\" \n                    alt={t(\"리더십과 시장 대응\", \"Leadership and Market Response\")}\n                    className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-yellow-300\"\n                    style={{\n                      objectPosition: 'center center'\n                    }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n                  <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n                    <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                      {t(\"강력한 리더십과 시장 환경 변화 대응 능력\", \"Strong Leadership and Market Environment Adaptation Capability\")}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {/* Financial Risks Image - Third Image */}\n              {categoryIndex === 3 && (\n                <div className=\"relative w-full mb-4 md:mb-6\">\n                  <img \n                    src=\"/attached_assets/Celebrating-big-profit_1755068371502.jpg\" \n                    alt={t(\"재무 성공과 수익 관리\", \"Financial Success and Profit Management\")}\n                    className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-blue-300\"\n                    style={{\n                      objectPosition: 'center center'\n                    }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n                  <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n                    <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                      {t(\"안정적인 재무 관리와 지속 가능한 수익 창출\", \"Stable Financial Management and Sustainable Profit Generation\")}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex items-center mb-6\">\n                <div className={`w-12 h-12 ${category.color} rounded-xl flex items-center justify-center mr-4 shadow-lg`}>\n                  <span className=\"text-2xl\">{category.icon}</span>\n                </div>\n                <h2 className=\"text-2xl font-bold text-gray-900 drop-shadow-[1px_1px_2px_rgba(255,255,255,0.8)]\">{category.title}</h2>\n              </div>\n\n              <div className=\"space-y-6\">\n                {category.risks.map((risk, riskIndex) => (\n                  <div key={riskIndex} className=\"border border-gray-300 rounded-lg p-6 bg-white/60 backdrop-blur-sm shadow-md\">\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{risk.risk}</h3>\n                      <div className=\"flex space-x-4 text-sm\">\n                        <span className=\"px-2 py-1 bg-red-200 text-red-900 rounded font-bold shadow-sm\">\n                          {t(\"영향도\", \"Impact\")}: {risk.impact}\n                        </span>\n                        <span className=\"px-2 py-1 bg-blue-200 text-blue-900 rounded font-bold shadow-sm\">\n                          {t(\"확률\", \"Probability\")}: {risk.probability}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 mb-3 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"대응 방안\", \"Mitigation Strategies\")}</h4>\n                      <ul className=\"space-y-2\">\n                        {risk.mitigation.map((strategy, strategyIndex) => (\n                          <li key={strategyIndex} className=\"flex items-start\">\n                            <span className=\"text-green-600 mr-2 mt-1 font-bold\">✓</span>\n                            <span className=\"text-gray-800 font-medium\">{strategy}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* 비상 계획 */}\n      <Card className=\"bg-white/90 backdrop-blur-md shadow-xl border border-white/30\">\n        <CardContent className=\"p-8\">\n          <h2 className=\"text-2xl font-bold mb-6 text-gray-900 drop-shadow-[1px_1px_2px_rgba(255,255,255,0.8)]\">\n            🚨 {t(\"비상 대응 계획\", \"Emergency Response Plans\")}\n          </h2>\n          <div className=\"space-y-6\">\n            {contingencyPlanning.map((plan, index) => (\n              <div key={index} className=\"bg-amber-50/80 border border-amber-200 rounded-lg p-6 shadow-md\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-3 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{plan.scenario}</h3>\n                <p className=\"text-gray-800 mb-4 font-medium\">\n                  <span className=\"font-bold text-red-700\">{t(\"예상 영향\", \"Expected Impact\")}:</span> {plan.impact}\n                </p>\n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-3 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"대응 방안\", \"Response Strategies\")}</h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                    {plan.responses.map((response, responseIndex) => (\n                      <div key={responseIndex} className=\"flex items-start\">\n                        <span className=\"text-blue-600 mr-2 mt-1 font-bold\">•</span>\n                        <span className=\"text-gray-800 font-medium\">{response}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n\n\n      {/* 리스크 모니터링 */}\n      <Card className=\"bg-white/90 backdrop-blur-md shadow-xl border border-white/30\">\n        <CardContent className=\"p-8\">\n          <h2 className=\"text-2xl font-bold mb-6 text-gray-900 drop-shadow-[1px_1px_2px_rgba(255,255,255,0.8)]\">\n            📈 {t(\"리스크 모니터링 체계\", \"Risk Monitoring System\")}\n          </h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            <div className=\"bg-red-100 border border-red-300 p-6 rounded-lg shadow-md\">\n              <h3 className=\"font-bold text-red-900 mb-3 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"일일 모니터링\", \"Daily Monitoring\")}</h3>\n              <ul className=\"space-y-2 text-red-800 font-medium\">\n                <li>• {t(\"마필 건강 상태 점검\", \"Horse health status check\")}</li>\n                <li>• {t(\"안전 장비 점검\", \"Safety equipment inspection\")}</li>\n                <li>• {t(\"날씨 및 환경 조건\", \"Weather and environmental conditions\")}</li>\n              </ul>\n            </div>\n            <div className=\"bg-yellow-100 border border-yellow-300 p-6 rounded-lg shadow-md\">\n              <h3 className=\"font-bold text-yellow-900 mb-3 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"주간 모니터링\", \"Weekly Monitoring\")}</h3>\n              <ul className=\"space-y-2 text-yellow-800 font-medium\">\n                <li>• {t(\"수익 및 비용 분석\", \"Revenue and cost analysis\")}</li>\n                <li>• {t(\"고객 만족도 조사\", \"Customer satisfaction survey\")}</li>\n                <li>• {t(\"직원 안전 교육\", \"Employee safety training\")}</li>\n              </ul>\n            </div>\n            <div className=\"bg-green-100 border border-green-300 p-6 rounded-lg shadow-md\">\n              <h3 className=\"font-bold text-green-900 mb-3 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">{t(\"월간 모니터링\", \"Monthly Monitoring\")}</h3>\n              <ul className=\"space-y-2 text-green-800 font-medium\">\n                <li>• {t(\"전체 리스크 평가 검토\", \"Comprehensive risk assessment review\")}</li>\n                <li>• {t(\"정책 및 규제 변화 분석\", \"Policy and regulatory change analysis\")}</li>\n                <li>• {t(\"비상 계획 업데이트\", \"Emergency plan updates\")}</li>\n              </ul>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":26157},"client/src/pages/siem-reap-location-page.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { useLanguage } from \"@/contexts/language-context\";\n\nexport function SiemReapLocationPage() {\n  const { t } = useLanguage();\n\n  const locationAdvantages = [\n    {\n      icon: \"🏛️\",\n      title: t(\"앙코르와트 인근 최적 입지\", \"Optimal Location Near Angkor Wat\"),\n      description: t(\"세계적인 관광 명소 앙코르와트에서 차로 5분 거리\", \"5 minutes by car from world-famous Angkor Wat\"),\n      benefits: [\n        t(\"연간 240만 명의 앙코르와트 관광객\", \"2.4 million annual Angkor Wat visitors\"),\n        t(\"관광 루트의 자연스러운 연결점\", \"Natural connection point in tourist routes\"),\n        t(\"기존 관광 인프라 활용 가능\", \"Utilize existing tourism infrastructure\"),\n        t(\"국제공항에서 30분 접근성\", \"30-minute accessibility from international airport\")\n      ],\n      metrics: {\n        distance: \"8km\",\n        visitors: \"2.4M/년\",\n        accessibility: \"A급\"\n      }\n    },\n    {\n      icon: \"🌏\",\n      title: t(\"동남아시아 관광 허브\", \"Southeast Asia Tourism Hub\"),\n      description: t(\"캄보디아 대표 관광도시로서의 전략적 위치\", \"Strategic position as Cambodia's premier tourist city\"),\n      benefits: [\n        t(\"동남아시아 배낭여행의 필수 코스\", \"Essential stop in Southeast Asian backpacking route\"),\n        t(\"태국, 베트남과의 연계 관광\", \"Connected tourism with Thailand and Vietnam\"),\n        t(\"국제적 인지도 및 브랜드 파워\", \"International recognition and brand power\"),\n        t(\"다양한 국적의 관광객 유입\", \"Diverse international tourist influx\")\n      ],\n      metrics: {\n        countries: \"150+\",\n        routes: \"15개\",\n        recognition: \"세계적\"\n      }\n    },\n    {\n      icon: \"🏢\",\n      title: t(\"우수한 사업 환경\", \"Excellent Business Environment\"),\n      description: t(\"관광업 친화적인 정책과 투자 환경\", \"Tourism-friendly policies and investment environment\"),\n      benefits: [\n        t(\"외국인 투자 우대 정책\", \"Foreign investment incentive policies\"),\n        t(\"관광업 육성을 위한 정부 지원\", \"Government support for tourism development\"),\n        t(\"영어 사용 가능한 인력 풍부\", \"Abundant English-speaking workforce\"),\n        t(\"저렴한 운영비와 인건비\", \"Low operating costs and labor costs\")\n      ],\n      metrics: {\n        investment: \"우대\",\n        support: \"정부지원\",\n        cost: \"30% 절감\"\n      }\n    }\n  ];\n\n  const siteLocation = {\n    name: t(\"시엠립 몽골 마상곡예 파크\", \"Siem Reap Mongolian Horse Adventure Park\"),\n    address: t(\"시엠립 시내 중심가에서 북동쪽 12km\", \"12km northeast of Siem Reap city center\"),\n    size: \"15 hectares (150,000 m²)\",\n    zoning: t(\"관광 특구 내 문화 공연장\", \"Cultural performance venue within tourism special zone\"),\n    accessibility: [\n      t(\"시엠립 국제공항에서 25분\", \"25 minutes from Siem Reap International Airport\"),\n      t(\"앙코르와트에서 15분\", \"15 minutes from Angkor Wat\"),\n      t(\"시내 중심가 7분거리\", \"7 minutes from city center\"),\n      t(\"주요 호텔 지구에서 10분\", \"10 minutes from major hotel districts\")\n    ]\n  };\n\n\n\n\n\n\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  return (\n    <div className=\"space-y-8 bg-black min-h-screen text-white p-8\">\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl font-bold text-white mb-4\">\n          🗺️ {t(\"시엠립 입지 장점 및 사업 기회\", \"Siem Reap Location Advantages & Business Opportunities\")}\n        </h1>\n        <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\n          {t(\"세계적 관광 도시 시엠립의 전략적 입지와 무한한 확장 가능성\", \n             \"Strategic location advantages and unlimited expansion potential in world-class tourist city Siem Reap\")}\n        </p>\n      </div>\n\n      {/* 입지 장점 */}\n      <div className=\"space-y-6\">\n        {locationAdvantages.map((advantage, index) => (\n          <Card key={index} className=\"overflow-hidden bg-gradient-to-r from-amber-50 to-orange-50 border-2 border-amber-200\">\n            <CardContent className=\"p-8\">\n              {/* 앙코르와트 인근 최적입지 이미지 - 첫 번째 이미지 */}\n              {index === 0 && (\n                <div className=\"relative w-full mb-4 md:mb-6\">\n                  <img \n                    src=\"/attached_assets/DJI_0070L_1755070169516.jpg\" \n                    alt={t(\"앙코르와트 항공뷰\", \"Angkor Wat Aerial View\")}\n                    className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-amber-300\"\n                    style={{\n                      objectPosition: 'center center'\n                    }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent rounded-lg\"></div>\n                  <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n                    <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                      {t(\"세계유산 앙코르와트의 웅장한 모습과 완벽한 접근성\", \"Magnificent Angkor Wat World Heritage Site with Perfect Accessibility\")}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              {/* 동남아시아 관광허브 이미지 - 두 번째 이미지 */}\n              {index === 1 && (\n                <div className=\"relative w-full mb-4 md:mb-6\">\n                  <img \n                    src=\"/attached_assets/hq720_1755070422884.jpg\" \n                    alt={t(\"시엠립 야경과 관광허브\", \"Siem Reap Night Scene and Tourism Hub\")}\n                    className=\"w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover rounded-lg shadow-2xl border-2 border-blue-300\"\n                    style={{\n                      objectPosition: 'center center'\n                    }}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent rounded-lg\"></div>\n                  <div className=\"absolute bottom-3 left-3 right-3 bg-black/70 backdrop-blur-sm rounded-lg p-2\">\n                    <p className=\"text-white text-xs md:text-sm font-bold text-center\">\n                      {t(\"활기찬 시엠립 야경과 동남아시아 최고의 관광허브\", \"Vibrant Siem Reap Nightlife and Southeast Asia's Premier Tourism Hub\")}\n                    </p>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex items-start space-x-6\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-amber-200 to-orange-300 rounded-2xl flex items-center justify-center flex-shrink-0 shadow-lg\">\n                  <span className=\"text-3xl\">{advantage.icon}</span>\n                </div>\n                <div className=\"flex-1\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">{advantage.title}</h2>\n                  <p className=\"text-gray-800 mb-6 font-medium\">{advantage.description}</p>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                    <div>\n                      <h3 className=\"font-bold text-gray-900 mb-4 text-lg\">{t(\"주요 혜택\", \"Key Benefits\")}</h3>\n                      <ul className=\"space-y-3\">\n                        {advantage.benefits.map((benefit, benefitIndex) => (\n                          <li key={benefitIndex} className=\"flex items-start\">\n                            <span className=\"text-emerald-600 mr-2 mt-1 font-bold\">✓</span>\n                            <span className=\"text-gray-800 font-medium\">{benefit}</span>\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                    <div>\n                      <h3 className=\"font-bold text-gray-900 mb-4 text-lg\">{t(\"핵심 지표\", \"Key Metrics\")}</h3>\n                      <div className=\"space-y-3\">\n                        {Object.entries(advantage.metrics).map(([key, value], metricIndex) => (\n                          <div key={metricIndex} className=\"flex justify-between items-center p-3 bg-white rounded-lg shadow-sm border border-amber-200\">\n                            <span className=\"text-gray-800 capitalize font-semibold\">{key}</span>\n                            <span className=\"font-bold text-amber-700 text-lg\">{value}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* 예정 부지 정보 */}\n      <Card className=\"bg-gradient-to-br from-amber-50 to-orange-100 border-2 border-amber-300\">\n        <CardContent className=\"p-8\">\n          <h2 className=\"text-3xl font-bold mb-6 text-gray-900\">\n            📍 {t(\"시엠립 최적 입지 - 펍 스트리트 중심가\", \"Siem Reap Prime Location - Pub Street Center\")}\n          </h2>\n          \n          {/* 위치 하이라이트 박스 */}\n          <div className=\"bg-gradient-to-r from-amber-100 to-orange-100 border-2 border-amber-400 rounded-lg p-6 mb-8 shadow-lg\">\n            <h3 className=\"text-xl font-bold text-amber-900 mb-4\">\n              {t(\"🎯 핵심 위치 장점\", \"🎯 Key Location Advantages\")}\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <p className=\"text-lg text-gray-900 mb-2 font-medium\">\n                  <span className=\"font-bold text-amber-800\">{t(\"펍 스트리트 직선거리:\", \"Straight Distance from Pub Street:\")}</span> 800m\n                </p>\n                <p className=\"text-lg text-gray-900 mb-2 font-medium\">\n                  <span className=\"font-bold text-amber-800\">{t(\"총 부지 면적:\", \"Total Site Area:\")}</span> 3헥타르 (30,000㎡)\n                </p>\n                <p className=\"text-lg text-gray-900 font-medium\">\n                  <span className=\"font-bold text-amber-800\">{t(\"시설 규모:\", \"Facility Scale:\")}</span> 9,000평 부지 활용\n                </p>\n              </div>\n              <div>\n                <p className=\"text-gray-800 leading-relaxed font-medium\">\n                  {t(\"시엠립의 가장 번화한 중심지인 펍 스트리트와 나이트 마켓에서 직선거리 800미터에 위치한 최적의 입지로, 필요에 따라 부지를 단계적으로 확장 사용이 가능합니다.\",\n                     \"Optimally located just 800 meters straight from Pub Street and Night Market, the busiest center of Siem Reap, with the ability to expand site usage in phases as needed.\")}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* 사진 갤러리 */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-6\">{t(\"부지 현황 사진\", \"Site Current Photos\")}</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {/* 기존 경기장 사진 */}\n              <div className=\"space-y-4\">\n                <div className=\"rounded-lg overflow-hidden shadow-lg\">\n                  <img \n                    src=\"/attached_assets/KakaoTalk_20250412_154104952_02_1754641006392.jpg\" \n                    alt=\"현재 부지 - 기존 경기장\"\n                    className=\"w-full h-64 object-cover\"\n                  />\n                </div>\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <h4 className=\"font-semibold text-blue-800 mb-2\">\n                    {t(\"기존 경기장 시설\", \"Existing Stadium Facility\")}\n                  </h4>\n                  <p className=\"text-blue-700 text-sm\">\n                    {t(\"다른 부지에 위치한 기존 축구 경기장, 마상곡예 공연장으로 건축시 모델링으로 실사함\", \n                       \"Existing soccer stadium located on different site, referenced as modeling for equestrian performance venue construction\")}\n                  </p>\n                </div>\n              </div>\n\n              {/* 빈 부지 사진 */}\n              <div className=\"space-y-4\">\n                <div className=\"rounded-lg overflow-hidden shadow-lg\">\n                  <img \n                    src=\"/attached_assets/부지지도4_거리_1754641006393.png\" \n                    alt=\"확장 가능한 빈 부지\"\n                    className=\"w-full h-64 object-cover\"\n                  />\n                </div>\n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <h4 className=\"font-semibold text-green-800 mb-2\">\n                    {t(\"확장 가능한 부지\", \"Expandable Land\")}\n                  </h4>\n                  <p className=\"text-green-700 text-sm\">\n                    {t(\"3헥타르 규모의 넓은 부지로 단계별 시설 확장이 가능한 여유 공간\", \n                       \"3-hectare spacious land allowing phased facility expansion with ample space\")}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* 위치 지도 */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-6\">{t(\"위치 지도 및 거리 분석\", \"Location Map & Distance Analysis\")}</h3>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div className=\"rounded-lg overflow-hidden shadow-lg\">\n                  <img \n                    src=\"/attached_assets/부지지도1_거리_1754641006392.png\" \n                    alt=\"시엠립 위치 지도\"\n                    className=\"w-full h-80 object-cover\"\n                  />\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h4 className=\"font-semibold text-gray-800 mb-2\">\n                    {t(\"구글 어스 위성 지도\", \"Google Earth Satellite Map\")}\n                  </h4>\n                  <p className=\"text-gray-700 text-sm\">\n                    {t(\"3.0 헥타르 부지 경계와 시내 중심가와의 위치 관계를 보여주는 위성 지도\", \n                       \"Satellite map showing 3.0-hectare site boundaries and location relationship with city center\")}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div className=\"rounded-lg overflow-hidden shadow-lg\">\n                  <img \n                    src=\"/attached_assets/부지지도3_거리_1754641006393.png\" \n                    alt=\"주변 지역 현황\"\n                    className=\"w-full h-80 object-cover\"\n                  />\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <h4 className=\"font-semibold text-gray-800 mb-2\">\n                    {t(\"주변 지역 현황\", \"Surrounding Area Status\")}\n                  </h4>\n                  <p className=\"text-gray-700 text-sm\">\n                    {t(\"주변 주거 지역과 상업 시설들과의 조화로운 위치를 보여주는 지역 현황\", \n                       \"Area overview showing harmonious location with surrounding residential and commercial facilities\")}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <div>\n              <div className=\"bg-gradient-to-br from-amber-100 to-orange-100 rounded-xl p-6 mb-6 border-2 border-amber-300 shadow-lg\">\n                <h3 className=\"text-2xl font-bold text-gray-900 mb-4\">\n                  {t(\"시엠립 몽골리안 헤리티지 파크\", \"Siem Reap Mongolian Heritage Park\")}\n                </h3>\n                <div className=\"space-y-3 text-gray-900\">\n                  <p><span className=\"font-bold text-amber-800\">{t(\"위치\", \"Location\")}:</span> <span className=\"font-semibold\">{t(\"펍 스트리트에서 직선거리 800m\", \"800m straight distance from Pub Street\")}</span></p>\n                  <p><span className=\"font-bold text-amber-800\">{t(\"총 부지 면적\", \"Total Site Area\")}:</span> <span className=\"font-semibold\">3헥타르 (30,000㎡ / 9,000평)</span></p>\n                  <p><span className=\"font-bold text-amber-800\">{t(\"용도 구역\", \"Zoning\")}:</span> <span className=\"font-semibold\">{t(\"관광 특구 내 문화 공연장\", \"Cultural performance venue within tourism special zone\")}</span></p>\n                  <p><span className=\"font-bold text-amber-800\">{t(\"확장성\", \"Expandability\")}:</span> <span className=\"font-semibold\">{t(\"필요에 따라 단계별 부지 활용 가능\", \"Phased site utilization available as needed\")}</span></p>\n                </div>\n              </div>\n            </div>\n            \n            <div>\n              <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{t(\"접근성 분석\", \"Accessibility Analysis\")}</h3>\n              <div className=\"space-y-4\">\n                {siteLocation.accessibility.map((access, index) => (\n                  <div key={index} className=\"flex items-center p-4 bg-white rounded-lg border-2 border-amber-200 shadow-sm\">\n                    <div className=\"w-8 h-8 bg-gradient-to-br from-amber-500 to-orange-500 rounded-full flex items-center justify-center mr-4\">\n                      <span className=\"text-white font-bold text-sm\">{index + 1}</span>\n                    </div>\n                    <span className=\"text-gray-900 font-medium\">{access}</span>\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"mt-8\">\n                <h3 className=\"text-xl font-bold text-gray-900 mb-4\">{t(\"교통 인프라\", \"Transportation Infrastructure\")}</h3>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"bg-gradient-to-br from-emerald-100 to-green-100 p-4 rounded-lg text-center border-2 border-emerald-200 shadow-md\">\n                    <span className=\"text-emerald-700 text-2xl block mb-2\">✈️</span>\n                    <p className=\"font-bold text-emerald-900\">{t(\"국제공항\", \"International Airport\")}</p>\n                    <p className=\"text-sm text-emerald-800 font-semibold\">{t(\"20km (25분)\", \"20km (25min)\")}</p>\n                  </div>\n                  <div className=\"bg-gradient-to-br from-blue-100 to-cyan-100 p-4 rounded-lg text-center border-2 border-blue-200 shadow-md\">\n                    <span className=\"text-blue-700 text-2xl block mb-2\">🏛️</span>\n                    <p className=\"font-bold text-blue-900\">{t(\"앙코르와트\", \"Angkor Wat\")}</p>\n                    <p className=\"text-sm text-blue-800 font-semibold\">{t(\"8km (10분)\", \"8km (10min)\")}</p>\n                  </div>\n                  <div className=\"bg-gradient-to-br from-orange-100 to-amber-100 p-4 rounded-lg text-center border-2 border-orange-200 shadow-md\">\n                    <span className=\"text-orange-700 text-2xl block mb-2\">🍻</span>\n                    <p className=\"font-bold text-orange-900\">{t(\"펍 스트리트\", \"Pub Street\")}</p>\n                    <p className=\"text-sm text-orange-800 font-semibold\">{t(\"800m (5분)\", \"800m (5min)\")}</p>\n                  </div>\n                  <div className=\"bg-gradient-to-br from-purple-100 to-violet-100 p-4 rounded-lg text-center border-2 border-purple-200 shadow-md\">\n                    <span className=\"text-purple-700 text-2xl block mb-2\">🅿️</span>\n                    <p className=\"font-bold text-purple-900\">{t(\"주차장\", \"Parking\")}</p>\n                    <p className=\"text-sm text-purple-800 font-semibold\">{t(\"300대 이상\", \"300+ cars\")}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n\n\n\n\n      {/* 구글 맵 섹션 */}\n      <Card id=\"google-map-section\" className=\"relative z-10 bg-white/70 backdrop-blur-md shadow-xl border border-white/30 mt-6\">\n        <CardContent className=\"p-4 md:p-8\">\n          <h2 className=\"text-xl md:text-2xl font-bold mb-4 md:mb-6 text-gray-900 text-center drop-shadow-[1px_1px_2px_rgba(255,255,255,0.8)]\">\n            🗺️ {t(\"구글 맵 위치\", \"Google Maps Location\")}\n          </h2>\n          <p className=\"text-center text-gray-800 mb-6 font-bold drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">\n            {t(\"시엠립 몽골 마상곡예 파크 예정지\", \"Siem Reap Mongolian Equestrian Park Planned Site\")}\n          </p>\n          \n          <div className=\"relative w-full h-96 md:h-[500px] rounded-lg overflow-hidden shadow-lg border border-gray-300\">\n            <iframe\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d15493.8!2d103.85639!3d13.36194!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3110169a8c91a691%3A0x4c7e7e6b9b5a8b8a!2z8J6RqPCfkZnCoDhWVzUrUTJSIEtyb25nIFNpZW0gUmVhcA!5e0!3m2!1sen!2skh!4v1642089600000!5m2!1sen!2skh\"\n              width=\"100%\"\n              height=\"100%\"\n              style={{ border: 0 }}\n              allowFullScreen\n              loading=\"lazy\"\n              referrerPolicy=\"no-referrer-when-downgrade\"\n              title={t(\"시엠립 몽골 마상곡예 파크 위치\", \"Siem Reap Mongolian Equestrian Park Location\")}\n            />\n          </div>\n          \n          <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-amber-50/60 backdrop-blur-sm border-2 border-amber-300/50 rounded-lg p-4\">\n              <h3 className=\"font-bold text-amber-900 mb-3 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">\n                📍 {t(\"정확한 위치 정보\", \"Exact Location Details\")}\n              </h3>\n              <div className=\"space-y-2 text-amber-800 font-bold\">\n                <p>📌 {t(\"주소\", \"Address\")}: 8VW5+Q2R Krong Siem Reap</p>\n                <p>🎯 {t(\"좌표\", \"Coordinates\")}: {t(\"시엠립, 캄보디아\", \"Siem Reap, Cambodia\")}</p>\n                <p>🏛️ {t(\"앙코르와트에서\", \"From Angkor Wat\")}: 8km (10분)</p>\n                <p>✈️ {t(\"공항에서\", \"From Airport\")}: 20km (25분)</p>\n              </div>\n            </div>\n            \n            <div className=\"bg-blue-50/60 backdrop-blur-sm border-2 border-blue-300/50 rounded-lg p-4\">\n              <h3 className=\"font-bold text-blue-900 mb-3 drop-shadow-[1px_1px_1px_rgba(255,255,255,0.8)]\">\n                🚗 {t(\"교통 접근성\", \"Transportation Access\")}\n              </h3>\n              <div className=\"space-y-2 text-blue-800 font-bold\">\n                <p>🍻 {t(\"펍 스트리트에서\", \"From Pub Street\")}: 800m (5분)</p>\n                <p>🏍️ {t(\"툭툭\", \"Tuk-tuk\")}: {t(\"직접 접근 가능\", \"Direct access available\")}</p>\n                <p>🚌 {t(\"관광버스\", \"Tour Bus\")}: {t(\"직접 접근 가능\", \"Direct access available\")}</p>\n                <p>🅿️ {t(\"주차장\", \"Parking\")}: {t(\"300대 이상 수용 가능\", \"300+ vehicle capacity\")}</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mt-6 text-center\">\n            <button\n              onClick={() => window.open('https://maps.google.com/?q=8VW5%2BQ2R+Krong+Siem+Reap', '_blank')}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-colors duration-200 shadow-lg\"\n            >\n              📍 {t(\"구글 맵에서 열기\", \"Open in Google Maps\")}\n            </button>\n          </div>\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}","size_bytes":24079},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}